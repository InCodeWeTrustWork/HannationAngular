(function(ns){var CLIENT_VERSION = "2.1.1";var NODE_CLIENT=1;ns.wrapper=function(good,wd){
var COMPILED = !0, goog = goog || {};
goog.global = this;
goog.isDef = function(a) {
  return void 0 !== a;
};
goog.exportPath_ = function(a, b, c) {
  a = a.split(".");
  c = c || goog.global;
  a[0] in c || !c.execScript || c.execScript("var " + a[0]);
  for (var d;a.length && (d = a.shift());) {
    !a.length && goog.isDef(b) ? c[d] = b : c = c[d] ? c[d] : c[d] = {};
  }
};
goog.define = function(a, b) {
  var c = b;
  COMPILED || (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, a) ? c = goog.global.CLOSURE_UNCOMPILED_DEFINES[a] : goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, a) && (c = goog.global.CLOSURE_DEFINES[a]));
  goog.exportPath_(a, c);
};
goog.DEBUG = !0;
goog.LOCALE = "en";
goog.TRUSTED_SITE = !0;
goog.STRICT_MODE_COMPATIBLE = !1;
goog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG;
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;
goog.provide = function(a) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  if (!COMPILED && goog.isProvided_(a)) {
    throw Error('Namespace "' + a + '" already declared.');
  }
  goog.constructNamespace_(a);
};
goog.constructNamespace_ = function(a, b) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[a];
    for (var c = a;(c = c.substring(0, c.lastIndexOf("."))) && !goog.getObjectByName(c);) {
      goog.implicitNamespaces_[c] = !0;
    }
  }
  goog.exportPath_(a, b);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(a) {
  if (!goog.isString(a) || !a || -1 == a.search(goog.VALID_MODULE_RE_)) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + a + " has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = a;
  if (!COMPILED) {
    if (goog.isProvided_(a)) {
      throw Error('Namespace "' + a + '" already declared.');
    }
    delete goog.implicitNamespaces_[a];
  }
};
goog.module.get = function(a) {
  return goog.module.getInternal_(a);
};
goog.module.getInternal_ = function(a) {
  if (!COMPILED) {
    return goog.isProvided_(a) ? a in goog.loadedModules_ ? goog.loadedModules_[a] : goog.getObjectByName(a) : null;
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return null != goog.moduleLoaderState_;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = !0;
};
goog.setTestOnly = function(a) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    throw a = a || "", Error("Importing test-only code into non-debug environment" + (a ? ": " + a : "."));
  }
};
goog.forwardDeclare = function(a) {
};
COMPILED || (goog.isProvided_ = function(a) {
  return a in goog.loadedModules_ || !goog.implicitNamespaces_[a] && goog.isDefAndNotNull(goog.getObjectByName(a));
}, goog.implicitNamespaces_ = {"goog.module":!0});
goog.getObjectByName = function(a, b) {
  for (var c = a.split("."), d = b || goog.global, e;e = c.shift();) {
    if (goog.isDefAndNotNull(d[e])) {
      d = d[e];
    } else {
      return null;
    }
  }
  return d;
};
goog.globalize = function(a, b) {
  var c = b || goog.global, d;
  for (d in a) {
    c[d] = a[d];
  }
};
goog.addDependency = function(a, b, c, d) {
  if (goog.DEPENDENCIES_ENABLED) {
    var e;
    a = a.replace(/\\/g, "/");
    var f = goog.dependencies_;
    d && "boolean" !== typeof d || (d = d ? {module:"goog"} : {});
    for (var g = 0;e = b[g];g++) {
      f.nameToPath[e] = a, f.loadFlags[a] = d;
    }
    for (d = 0;b = c[d];d++) {
      a in f.requires || (f.requires[a] = {}), f.requires[a][b] = !0;
    }
  }
};
goog.ENABLE_DEBUG_LOADER = !0;
goog.logToConsole_ = function(a) {
  goog.global.console && goog.global.console.error(a);
};
goog.require = function(a) {
  if (!COMPILED) {
    goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_ && goog.maybeProcessDeferredDep_(a);
    if (goog.isProvided_(a)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(a);
      }
    } else {
      if (goog.ENABLE_DEBUG_LOADER) {
        var b = goog.getPathFromDeps_(a);
        if (b) {
          goog.writeScripts_(b);
        } else {
          throw a = "goog.require could not find: " + a, goog.logToConsole_(a), Error(a);
        }
      }
    }
    return null;
  }
};
goog.basePath = "";
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(a) {
  a.getInstance = function() {
    if (a.instance_) {
      return a.instance_;
    }
    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a);
    return a.instance_ = new a;
  };
};
goog.instantiatedSingletons_ = [];
goog.LOAD_MODULE_USING_EVAL = !0;
goog.SEAL_MODULE_EXPORTS = goog.DEBUG;
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.TRANSPILE = "detect";
goog.TRANSPILER = "transpile.js";
goog.DEPENDENCIES_ENABLED && (goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}}, goog.inHtmlDocument_ = function() {
  var a = goog.global.document;
  return null != a && "write" in a;
}, goog.findBasePath_ = function() {
  if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
    goog.basePath = goog.global.CLOSURE_BASE_PATH;
  } else {
    if (goog.inHtmlDocument_()) {
      for (var a = goog.global.document.getElementsByTagName("SCRIPT"), b = a.length - 1;0 <= b;--b) {
        var c = a[b].src, d = c.lastIndexOf("?"), d = -1 == d ? c.length : d;
        if ("base.js" == c.substr(d - 7, 7)) {
          goog.basePath = c.substr(0, d - 7);
          break;
        }
      }
    }
  }
}, goog.importScript_ = function(a, b) {
  (goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_)(a, b) && (goog.dependencies_.written[a] = !0);
}, goog.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.importProcessedScript_ = function(a, b, c) {
  goog.importScript_("", 'goog.retrieveAndExec_("' + a + '", ' + b + ", " + c + ");");
}, goog.queuedModules_ = [], goog.wrapModule_ = function(a, b) {
  return goog.LOAD_MODULE_USING_EVAL && goog.isDef(goog.global.JSON) ? "goog.loadModule(" + goog.global.JSON.stringify(b + "\n//# sourceURL=" + a + "\n") + ");" : 'goog.loadModule(function(exports) {"use strict";' + b + "\n;return exports});\n//# sourceURL=" + a + "\n";
}, goog.loadQueuedModules_ = function() {
  var a = goog.queuedModules_.length;
  if (0 < a) {
    var b = goog.queuedModules_;
    goog.queuedModules_ = [];
    for (var c = 0;c < a;c++) {
      goog.maybeProcessDeferredPath_(b[c]);
    }
  }
}, goog.maybeProcessDeferredDep_ = function(a) {
  goog.isDeferredModule_(a) && goog.allDepsAreAvailable_(a) && (a = goog.getPathFromDeps_(a), goog.maybeProcessDeferredPath_(goog.basePath + a));
}, goog.isDeferredModule_ = function(a) {
  var b = (a = goog.getPathFromDeps_(a)) && goog.dependencies_.loadFlags[a] || {}, c = b.lang || "es3";
  return a && ("goog" == b.module || goog.needsTranspile_(c)) ? goog.basePath + a in goog.dependencies_.deferred : !1;
}, goog.allDepsAreAvailable_ = function(a) {
  if ((a = goog.getPathFromDeps_(a)) && a in goog.dependencies_.requires) {
    for (var b in goog.dependencies_.requires[a]) {
      if (!goog.isProvided_(b) && !goog.isDeferredModule_(b)) {
        return !1;
      }
    }
  }
  return !0;
}, goog.maybeProcessDeferredPath_ = function(a) {
  if (a in goog.dependencies_.deferred) {
    var b = goog.dependencies_.deferred[a];
    delete goog.dependencies_.deferred[a];
    goog.globalEval(b);
  }
}, goog.loadModuleFromUrl = function(a) {
  goog.retrieveAndExec_(a, !0, !1);
}, goog.writeScriptSrcNode_ = function(a) {
  goog.global.document.write('<script type="text/javascript" src="' + a + '">\x3c/script>');
}, goog.appendScriptSrcNode_ = function(a) {
  var b = goog.global.document, c = b.createElement("script");
  c.type = "text/javascript";
  c.src = a;
  c.defer = !1;
  c.async = !1;
  b.head.appendChild(c);
}, goog.writeScriptTag_ = function(a, b) {
  if (goog.inHtmlDocument_()) {
    var c = goog.global.document;
    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && "complete" == c.readyState) {
      if (/\bdeps.js$/.test(a)) {
        return !1;
      }
      throw Error('Cannot write "' + a + '" after document load');
    }
    if (void 0 === b) {
      if (goog.IS_OLD_IE_) {
        var d = " onreadystatechange='goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
        c.write('<script type="text/javascript" src="' + a + '"' + d + ">\x3c/script>");
      } else {
        goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING ? goog.appendScriptSrcNode_(a) : goog.writeScriptSrcNode_(a);
      }
    } else {
      c.write('<script type="text/javascript">' + b + "\x3c/script>");
    }
    return !0;
  }
  return !1;
}, goog.needsTranspile_ = function(a) {
  if ("always" == goog.TRANSPILE) {
    return !0;
  }
  if ("never" == goog.TRANSPILE) {
    return !1;
  }
  goog.requiresTranspilation_ || (goog.requiresTranspilation_ = goog.createRequiresTranspilation_());
  if (a in goog.requiresTranspilation_) {
    return goog.requiresTranspilation_[a];
  }
  throw Error("Unknown language mode: " + a);
}, goog.createRequiresTranspilation_ = function() {
  function a(a, b) {
    d ? c[a] = !0 : b() ? c[a] = !1 : d = c[a] = !0;
  }
  function b(a) {
    try {
      return !!eval(a);
    } catch (b) {
      return !1;
    }
  }
  var c = {es3:!1}, d = !1;
  a("es5", function() {
    return b("[1,].length==1");
  });
  a("es6", function() {
    return b('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()');
  });
  a("es6-impl", function() {
    return !0;
  });
  a("es7", function() {
    return b("2 ** 2 == 4");
  });
  a("es8", function() {
    return b("async () => 1, true");
  });
  return c;
}, goog.requiresTranspilation_ = null, goog.lastNonModuleScriptIndex_ = 0, goog.onScriptLoad_ = function(a, b) {
  "complete" == a.readyState && goog.lastNonModuleScriptIndex_ == b && goog.loadQueuedModules_();
  return !0;
}, goog.writeScripts_ = function(a) {
  function b(a) {
    if (!(a in e.written || a in e.visited)) {
      e.visited[a] = !0;
      if (a in e.requires) {
        for (var f in e.requires[a]) {
          if (!goog.isProvided_(f)) {
            if (f in e.nameToPath) {
              b(e.nameToPath[f]);
            } else {
              throw Error("Undefined nameToPath for " + f);
            }
          }
        }
      }
      a in d || (d[a] = !0, c.push(a));
    }
  }
  var c = [], d = {}, e = goog.dependencies_;
  b(a);
  for (a = 0;a < c.length;a++) {
    var f = c[a];
    goog.dependencies_.written[f] = !0;
  }
  var g = goog.moduleLoaderState_;
  goog.moduleLoaderState_ = null;
  for (a = 0;a < c.length;a++) {
    if (f = c[a]) {
      var h = e.loadFlags[f] || {}, k = goog.needsTranspile_(h.lang || "es3");
      "goog" == h.module || k ? goog.importProcessedScript_(goog.basePath + f, "goog" == h.module, k) : goog.importScript_(goog.basePath + f);
    } else {
      throw goog.moduleLoaderState_ = g, Error("Undefined script input");
    }
  }
  goog.moduleLoaderState_ = g;
}, goog.getPathFromDeps_ = function(a) {
  return a in goog.dependencies_.nameToPath ? goog.dependencies_.nameToPath[a] : null;
}, goog.findBasePath_(), goog.global.CLOSURE_NO_DEPS || goog.importScript_(goog.basePath + "deps.js"));
goog.loadModule = function(a) {
  var b = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:void 0, declareLegacyNamespace:!1};
    var c;
    if (goog.isFunction(a)) {
      c = a.call(void 0, {});
    } else {
      if (goog.isString(a)) {
        c = goog.loadModuleFromSource_.call(void 0, a);
      } else {
        throw Error("Invalid module definition");
      }
    }
    var d = goog.moduleLoaderState_.moduleName;
    if (!goog.isString(d) || !d) {
      throw Error('Invalid module name "' + d + '"');
    }
    goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(d, c) : goog.SEAL_MODULE_EXPORTS && Object.seal && goog.isObject(c) && Object.seal(c);
    goog.loadedModules_[d] = c;
  } finally {
    goog.moduleLoaderState_ = b;
  }
};
goog.loadModuleFromSource_ = function(a) {
  eval(a);
  return {};
};
goog.normalizePath_ = function(a) {
  a = a.split("/");
  for (var b = 0;b < a.length;) {
    "." == a[b] ? a.splice(b, 1) : b && ".." == a[b] && a[b - 1] && ".." != a[b - 1] ? a.splice(--b, 2) : b++;
  }
  return a.join("/");
};
goog.loadFileSync_ = function(a) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(a);
  }
  try {
    var b = new goog.global.XMLHttpRequest;
    b.open("get", a, !1);
    b.send();
    return 0 == b.status || 200 == b.status ? b.responseText : null;
  } catch (c) {
    return null;
  }
};
goog.retrieveAndExec_ = function(a, b, c) {
  if (!COMPILED) {
    var d = a;
    a = goog.normalizePath_(a);
    var e = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_, f = goog.loadFileSync_(a);
    if (null == f) {
      throw Error('Load of "' + a + '" failed');
    }
    c && (f = goog.transpile_.call(goog.global, f, a));
    f = b ? goog.wrapModule_(a, f) : f + ("\n//# sourceURL=" + a);
    goog.IS_OLD_IE_ ? (goog.dependencies_.deferred[d] = f, goog.queuedModules_.push(d)) : e(a, f);
  }
};
goog.transpile_ = function(a, b) {
  var c = goog.global.$jscomp;
  c || (goog.global.$jscomp = c = {});
  var d = c.transpile;
  if (!d) {
    var e = goog.basePath + goog.TRANSPILER, f = goog.loadFileSync_(e);
    if (f) {
      eval(f + "\n//# sourceURL=" + e);
      if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile) {
        throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));
      }
      goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile;
      c = goog.global.$jscomp;
      d = c.transpile;
    }
  }
  d || (d = c.transpile = function(a, b) {
    goog.logToConsole_(b + " requires transpilation but no transpiler was found.");
    return a;
  });
  return d(a, b);
};
goog.typeOf = function(a) {
  var b = typeof a;
  if ("object" == b) {
    if (a) {
      if (a instanceof Array) {
        return "array";
      }
      if (a instanceof Object) {
        return b;
      }
      var c = Object.prototype.toString.call(a);
      if ("[object Window]" == c) {
        return "object";
      }
      if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) {
        return "array";
      }
      if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if ("function" == b && "undefined" == typeof a.call) {
      return "object";
    }
  }
  return b;
};
goog.isNull = function(a) {
  return null === a;
};
goog.isDefAndNotNull = function(a) {
  return null != a;
};
goog.isArray = function(a) {
  return "array" == goog.typeOf(a);
};
goog.isArrayLike = function(a) {
  var b = goog.typeOf(a);
  return "array" == b || "object" == b && "number" == typeof a.length;
};
goog.isDateLike = function(a) {
  return goog.isObject(a) && "function" == typeof a.getFullYear;
};
goog.isString = function(a) {
  return "string" == typeof a;
};
goog.isBoolean = function(a) {
  return "boolean" == typeof a;
};
goog.isNumber = function(a) {
  return "number" == typeof a;
};
goog.isFunction = function(a) {
  return "function" == goog.typeOf(a);
};
goog.isObject = function(a) {
  var b = typeof a;
  return "object" == b && null != a || "function" == b;
};
goog.getUid = function(a) {
  return a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(a) {
  return !!a[goog.UID_PROPERTY_];
};
goog.removeUid = function(a) {
  null !== a && "removeAttribute" in a && a.removeAttribute(goog.UID_PROPERTY_);
  try {
    delete a[goog.UID_PROPERTY_];
  } catch (b) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (1E9 * Math.random() >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(a) {
  var b = goog.typeOf(a);
  if ("object" == b || "array" == b) {
    if (a.clone) {
      return a.clone();
    }
    var b = "array" == b ? [] : {}, c;
    for (c in a) {
      b[c] = goog.cloneObject(a[c]);
    }
    return b;
  }
  return a;
};
goog.bindNative_ = function(a, b, c) {
  return a.call.apply(a.bind, arguments);
};
goog.bindJs_ = function(a, b, c) {
  if (!a) {
    throw Error();
  }
  if (2 < arguments.length) {
    var d = Array.prototype.slice.call(arguments, 2);
    return function() {
      var c = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(c, d);
      return a.apply(b, c);
    };
  }
  return function() {
    return a.apply(b, arguments);
  };
};
goog.bind = function(a, b, c) {
  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;
  return goog.bind.apply(null, arguments);
};
goog.partial = function(a, b) {
  var c = Array.prototype.slice.call(arguments, 1);
  return function() {
    var b = c.slice();
    b.push.apply(b, arguments);
    return a.apply(this, b);
  };
};
goog.mixin = function(a, b) {
  for (var c in b) {
    a[c] = b[c];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(a) {
  if (goog.global.execScript) {
    goog.global.execScript(a, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (null == goog.evalWorksForGlobals_) {
        if (goog.global.eval("var _evalTest_ = 1;"), "undefined" != typeof goog.global._evalTest_) {
          try {
            delete goog.global._evalTest_;
          } catch (d) {
          }
          goog.evalWorksForGlobals_ = !0;
        } else {
          goog.evalWorksForGlobals_ = !1;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(a);
      } else {
        var b = goog.global.document, c = b.createElement("SCRIPT");
        c.type = "text/javascript";
        c.defer = !1;
        c.appendChild(b.createTextNode(a));
        b.body.appendChild(c);
        b.body.removeChild(c);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.getCssName = function(a, b) {
  if ("." == String(a).charAt(0)) {
    throw Error('className passed in goog.getCssName must not start with ".". You passed: ' + a);
  }
  var c = function(a) {
    return goog.cssNameMapping_[a] || a;
  }, d = function(a) {
    a = a.split("-");
    for (var b = [], d = 0;d < a.length;d++) {
      b.push(c(a[d]));
    }
    return b.join("-");
  }, d = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? c : d : function(a) {
    return a;
  }, d = b ? a + "-" + d(b) : d(a);
  return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(d) : d;
};
goog.setCssNameMapping = function(a, b) {
  goog.cssNameMapping_ = a;
  goog.cssNameMappingStyle_ = b;
};
!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);
goog.getMsg = function(a, b) {
  b && (a = a.replace(/\{\$([^}]+)}/g, function(a, d) {
    return null != b && d in b ? b[d] : a;
  }));
  return a;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(a, b, c) {
  goog.exportPath_(a, b, c);
};
goog.exportProperty = function(a, b, c) {
  a[b] = c;
};
goog.inherits = function(a, b) {
  function c() {
  }
  c.prototype = b.prototype;
  a.superClass_ = b.prototype;
  a.prototype = new c;
  a.prototype.constructor = a;
  a.base = function(a, c, f) {
    for (var g = Array(arguments.length - 2), h = 2;h < arguments.length;h++) {
      g[h - 2] = arguments[h];
    }
    return b.prototype[c].apply(a, g);
  };
};
goog.base = function(a, b, c) {
  var d = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !d) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (d.superClass_) {
    for (var e = Array(arguments.length - 1), f = 1;f < arguments.length;f++) {
      e[f - 1] = arguments[f];
    }
    return d.superClass_.constructor.apply(a, e);
  }
  e = Array(arguments.length - 2);
  for (f = 2;f < arguments.length;f++) {
    e[f - 2] = arguments[f];
  }
  for (var f = !1, g = a.constructor;g;g = g.superClass_ && g.superClass_.constructor) {
    if (g.prototype[b] === d) {
      f = !0;
    } else {
      if (f) {
        return g.prototype[b].apply(a, e);
      }
    }
  }
  if (a[b] === d) {
    return a.constructor.prototype[b].apply(a, e);
  }
  throw Error("goog.base called from a method of one name to a method of a different name");
};
goog.scope = function(a) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  a.call(goog.global);
};
COMPILED || (goog.global.COMPILED = COMPILED);
goog.defineClass = function(a, b) {
  var c = b.constructor, d = b.statics;
  c && c != Object.prototype.constructor || (c = function() {
    throw Error("cannot instantiate an interface (no constructor defined).");
  });
  c = goog.defineClass.createSealingConstructor_(c, a);
  a && goog.inherits(c, a);
  delete b.constructor;
  delete b.statics;
  goog.defineClass.applyProperties_(c.prototype, b);
  null != d && (d instanceof Function ? d(c) : goog.defineClass.applyProperties_(c, d));
  return c;
};
goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;
goog.defineClass.createSealingConstructor_ = function(a, b) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return a;
  }
  var c = !goog.defineClass.isUnsealable_(b), d = function() {
    var b = a.apply(this, arguments) || this;
    b[goog.UID_PROPERTY_] = b[goog.UID_PROPERTY_];
    this.constructor === d && c && Object.seal instanceof Function && Object.seal(b);
    return b;
  };
  return d;
};
goog.defineClass.isUnsealable_ = function(a) {
  return a && a.prototype && a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_ = function(a, b) {
  for (var c in b) {
    Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
  }
  for (var d = 0;d < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++) {
    c = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d], Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);
  }
};
goog.tagUnsealableClass = function(a) {
  !COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES && (a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = !0);
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
var wd = {auth:{}};
wd.auth.provider = {};
wd.auth.provider.route = function(a) {
  var b = "POST";
  switch(a.providerId || a.provider) {
    case "password":
      a = "verifyPassword";
      break;
    case "anonymous":
      a = "verifyAnonymous";
      break;
    case "custom":
      a = "verifyCustomToken";
      break;
    default:
      a = "credential", b = "GET";
  }
  if (!a) {
    throw Error("Unknown provider '" + provider + "'.");
  }
  return {path:a, method:b};
};
wd.auth.provider.initProvider_ = function(a) {
  a.auth = a.auth ? a.auth : {};
  [{id:"password", name:"Email", arg1:"email", arg2:"password"}, {id:"qq", name:"QQ", arg1:"accessToken", arg2:"openId"}, {id:"weibo", name:"Weibo", arg1:"accessToken", arg2:"openId"}, {id:"weixin", name:"Weixin", arg1:"accessToken", arg2:"openId"}, {id:"weixinmp", name:"Weixinmp", arg1:"accessToken", arg2:"openId"}].forEach(function(b) {
    a.auth[b.name + "AuthProvider"] = function() {
      this.id = b.id;
      this.addScope = function(a) {
        this.scope = a;
      };
    };
    a.auth[b.name + "AuthProvider"].credential = function(a, d) {
      var e = {};
      e.provider = b.id;
      e[b.arg1] = a;
      e[b.arg2] = d;
      return e;
    };
  });
};
wd.UserInfo = function(a, b, c, d, e) {
  this.uid = e;
  this.displayName = a;
  this.email = b;
  this.photoURL = c;
  this.providerId = d;
};
wd.core = {};
wd.core.ServerActions = {};
wd.core.operation = {};
wd.core.operation.AckUserWrite = function(a, b) {
  this.type = wd.core.OperationType.ACK_USER_WRITE;
  this.source = wd.core.OperationSource.User;
  this.path = a;
  this.revert = b;
};
wd.core.operation.AckUserWrite.prototype.operationForChild = function(a) {
  return this.path.isEmpty() ? this : new wd.core.operation.AckUserWrite(this.path.popFront(), this.revert);
};
goog.DEBUG && (wd.core.operation.AckUserWrite.prototype.toString = function() {
  return "Operation(" + this.path + ": " + this.source.toString() + " ack write revert=" + this.revert + ")";
});
wd.core.operation.ListenComplete = function(a, b) {
  this.type = wd.core.OperationType.LISTEN_COMPLETE;
  this.source = a;
  this.path = b;
};
wd.core.operation.ListenComplete.prototype.operationForChild = function(a) {
  return this.path.isEmpty() ? new wd.core.operation.ListenComplete(this.source, wd.core.util.Path.Empty) : new wd.core.operation.ListenComplete(this.source, this.path.popFront());
};
goog.DEBUG && (wd.core.operation.ListenComplete.prototype.toString = function() {
  return "Operation(" + this.path + ": " + this.source.toString() + " listen_complete)";
});
wd.core.operation.Overwrite = function(a, b, c) {
  this.type = wd.core.OperationType.OVERWRITE;
  this.source = a;
  this.path = b;
  this.snap = c;
};
wd.core.operation.Overwrite.prototype.operationForChild = function(a) {
  return this.path.isEmpty() ? new wd.core.operation.Overwrite(this.source, wd.core.util.Path.Empty, this.snap.getImmediateChild(a)) : new wd.core.operation.Overwrite(this.source, this.path.popFront(), this.snap);
};
goog.DEBUG && (wd.core.operation.Overwrite.prototype.toString = function() {
  return "Operation(" + this.path + ": " + this.source.toString() + " overwrite: " + this.snap.toString() + ")";
});
wd.core.snap = {};
wd.core.snap.Node = function() {
};
wd.core.snap.Node.prototype.isLeafNode;
wd.core.snap.Node.prototype.getPriority;
wd.core.snap.Node.prototype.updatePriority;
wd.core.snap.Node.prototype.getImmediateChild;
wd.core.snap.Node.prototype.getChild;
wd.core.snap.Node.prototype.getPredecessorChildName;
wd.core.snap.Node.prototype.updateImmediateChild;
wd.core.snap.Node.prototype.updateChild;
wd.core.snap.Node.prototype.hasChild;
wd.core.snap.Node.prototype.isEmpty;
wd.core.snap.Node.prototype.numChildren;
wd.core.snap.Node.prototype.val;
wd.core.snap.Node.prototype.hash;
wd.core.snap.Node.prototype.compareTo;
wd.core.snap.Node.prototype.equals;
wd.core.snap.Node.prototype.withIndex;
wd.core.snap.Node.prototype.isIndexed;
wd.core.snap.NamedNode = function(a, b) {
  this.name = a;
  this.node = b;
};
wd.core.snap.NamedNode.Wrap = function(a, b) {
  return new wd.core.snap.NamedNode(a, b);
};
wd.core.snap.comparators = {};
wd.core.snap.NAME_ONLY_COMPARATOR = function(a, b) {
  return wd.core.util.nameCompare(a.name, b.name);
};
wd.core.snap.NAME_COMPARATOR = function(a, b) {
  return wd.core.util.nameCompare(a, b);
};
wd.core.stats = {};
wd.core.stats.StatsListener = function(a) {
  this.collection_ = a;
  this.last_ = null;
};
wd.core.stats.StatsListener.prototype.get = function() {
  var a = this.collection_.get(), b = goog.object.clone(a);
  if (this.last_) {
    for (var c in this.last_) {
      b[c] -= this.last_[c];
    }
  }
  this.last_ = a;
  return b;
};
var FIRST_STATS_MIN_TIME = 1E4, FIRST_STATS_MAX_TIME = 3E4, REPORT_STATS_INTERVAL = 3E5;
wd.core.stats.StatsReporter = function(a, b) {
  this.statsToReport_ = {};
  this.statsListener_ = new wd.core.stats.StatsListener(a);
  this.server_ = b;
  var c = FIRST_STATS_MIN_TIME + (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();
  setTimeout(goog.bind(this.reportStats_, this), Math.floor(c));
};
wd.core.stats.StatsReporter.prototype.includeStat = function(a) {
  this.statsToReport_[a] = !0;
};
wd.core.stats.StatsReporter.prototype.reportStats_ = function() {
  var a = this.statsListener_.get(), b = {}, c = !1, d;
  for (d in a) {
    0 < a[d] && wd.util.obj.contains(this.statsToReport_, d) && (b[d] = a[d], c = !0);
  }
  c && this.server_.reportStats(b);
  setTimeout(goog.bind(this.reportStats_, this), Math.floor(2 * Math.random() * REPORT_STATS_INTERVAL));
};
wd.core.util = {};
wd.core.util.Path = function(a, b) {
  if (1 == arguments.length) {
    this.pieces_ = a.split("/");
    for (var c = 0, d = 0;d < this.pieces_.length;d++) {
      0 < this.pieces_[d].length && (this.pieces_[c] = this.pieces_[d], c++);
    }
    this.pieces_.length = c;
    this.pieceNum_ = 0;
  } else {
    this.pieces_ = a, this.pieceNum_ = b;
  }
};
wd.core.util.Path.relativePath = function(a, b) {
  var c = a.getFront(), d = b.getFront();
  if (null === c) {
    return b;
  }
  if (c === d) {
    return wd.core.util.Path.relativePath(a.popFront(), b.popFront());
  }
  throw Error("INTERNAL ERROR: innerPath (" + b + ") is not within outerPath (" + a + ")");
};
wd.core.util.Path.prototype.getFront = function() {
  return this.pieceNum_ >= this.pieces_.length ? null : this.pieces_[this.pieceNum_];
};
wd.core.util.Path.prototype.getLength = function() {
  return this.pieces_.length - this.pieceNum_;
};
wd.core.util.Path.prototype.popFront = function() {
  var a = this.pieceNum_;
  a < this.pieces_.length && a++;
  return new wd.core.util.Path(this.pieces_, a);
};
wd.core.util.Path.prototype.getBack = function() {
  return this.pieceNum_ < this.pieces_.length ? this.pieces_[this.pieces_.length - 1] : null;
};
wd.core.util.Path.prototype.toString = function() {
  for (var a = "", b = this.pieceNum_;b < this.pieces_.length;b++) {
    "" !== this.pieces_[b] && (a += "/" + this.pieces_[b]);
  }
  return a || "/";
};
wd.core.util.Path.prototype.toUrlEncodedString = function() {
  for (var a = "", b = this.pieceNum_;b < this.pieces_.length;b++) {
    "" !== this.pieces_[b] && (a += "/" + goog.string.urlEncode(this.pieces_[b]));
  }
  return a || "/";
};
wd.core.util.Path.prototype.slice = function(a) {
  return this.pieces_.slice(this.pieceNum_ + (a || 0));
};
wd.core.util.Path.prototype.parent = function() {
  if (this.pieceNum_ >= this.pieces_.length) {
    return null;
  }
  for (var a = [], b = this.pieceNum_;b < this.pieces_.length - 1;b++) {
    a.push(this.pieces_[b]);
  }
  return new wd.core.util.Path(a, 0);
};
wd.core.util.Path.prototype.child = function(a) {
  for (var b = [], c = this.pieceNum_;c < this.pieces_.length;c++) {
    b.push(this.pieces_[c]);
  }
  if (a instanceof wd.core.util.Path) {
    for (c = a.pieceNum_;c < a.pieces_.length;c++) {
      b.push(a.pieces_[c]);
    }
  } else {
    for (a = a.split("/"), c = 0;c < a.length;c++) {
      0 < a[c].length && b.push(a[c]);
    }
  }
  return new wd.core.util.Path(b, 0);
};
wd.core.util.Path.prototype.isEmpty = function() {
  return this.pieceNum_ >= this.pieces_.length;
};
wd.core.util.Path.prototype.equals = function(a) {
  if (this.getLength() !== a.getLength()) {
    return !1;
  }
  for (var b = this.pieceNum_, c = a.pieceNum_;b <= this.pieces_.length;b++, c++) {
    if (this.pieces_[b] !== a.pieces_[c]) {
      return !1;
    }
  }
  return !0;
};
wd.core.util.Path.prototype.contains = function(a) {
  var b = this.pieceNum_, c = a.pieceNum_;
  if (this.getLength() > a.getLength()) {
    return !1;
  }
  for (;b < this.pieces_.length;) {
    if (this.pieces_[b] !== a.pieces_[c]) {
      return !1;
    }
    ++b;
    ++c;
  }
  return !0;
};
wd.core.util.Path.Empty = new wd.core.util.Path("");
wd.core.util.ValidationPath = function(a, b) {
  this.parts_ = a.slice();
  this.byteLength_ = Math.max(1, this.parts_.length);
  this.errorPrefix_ = b;
  for (var c = 0;c < this.parts_.length;c++) {
    this.byteLength_ += wd.util.utf8.stringLength(this.parts_[c]);
  }
  this.checkValid_();
};
wd.core.util.ValidationPath.MAX_PATH_DEPTH = 32;
wd.core.util.ValidationPath.MAX_PATH_LENGTH_BYTES = 768;
wd.core.util.ValidationPath.prototype.push = function(a) {
  0 < this.parts_.length && (this.byteLength_ += 1);
  this.parts_.push(a);
  this.byteLength_ += wd.util.utf8.stringLength(a);
  this.checkValid_();
};
wd.core.util.ValidationPath.prototype.pop = function() {
  var a = this.parts_.pop();
  this.byteLength_ -= wd.util.utf8.stringLength(a);
  0 < this.parts_.length && --this.byteLength_;
};
wd.core.util.ValidationPath.prototype.checkValid_ = function() {
  if (this.byteLength_ > wd.core.util.ValidationPath.MAX_PATH_LENGTH_BYTES) {
    throw Error(this.errorPrefix_ + "has a key path longer than " + wd.core.util.ValidationPath.MAX_PATH_LENGTH_BYTES + " bytes (" + this.byteLength_ + ").");
  }
  if (this.parts_.length > wd.core.util.ValidationPath.MAX_PATH_DEPTH) {
    throw Error(this.errorPrefix_ + "path specified exceeds the maximum depth that can be written (" + wd.core.util.ValidationPath.MAX_PATH_DEPTH + ") or object contains a cycle " + this.toErrorString());
  }
};
wd.core.util.ValidationPath.prototype.toErrorString = function() {
  return 0 == this.parts_.length ? "" : "in property '" + this.parts_.join(".") + "'";
};
wd.core.util.ServerValues = {};
wd.core.util.ServerValues.generateWithValues = function(a) {
  a = a || {};
  a.timestamp = a.timestamp || (new Date).getTime();
  return a;
};
wd.core.util.ServerValues.resolveDeferredValue = function(a, b) {
  return a && "object" === typeof a ? (wd.core.util.assert(".sv" in a, "Unexpected leaf node or priority contents"), b[a[".sv"]]) : a;
};
wd.core.util.ServerValues.resolveDeferredValueTree = function(a, b) {
  var c = new wd.core.SparseSnapshotTree;
  a.forEachTree(new wd.core.util.Path(""), function(a, e) {
    c.remember(a, wd.core.util.ServerValues.resolveDeferredValueSnapshot(e, b));
  });
  return c;
};
wd.core.util.ServerValues.resolveDeferredValueSnapshot = function(a, b) {
  var c = a.getPriority().val(), c = wd.core.util.ServerValues.resolveDeferredValue(c, b), d;
  if (a.isLeafNode()) {
    var e = wd.core.util.ServerValues.resolveDeferredValue(a.getValue(), b);
    return e !== a.getValue() || c !== a.getPriority().val() ? new wd.core.snap.LeafNode(e, wd.core.snap.NodeFromJSON(c)) : a;
  }
  d = a;
  c !== a.getPriority().val() && (d = d.updatePriority(new wd.core.snap.LeafNode(c)));
  a.forEachChild(wd.core.snap.PriorityIndex, function(a, c) {
    var e = wd.core.util.ServerValues.resolveDeferredValueSnapshot(c, b);
    e !== c && (d = d.updateImmediateChild(a, e));
  });
  return d;
};
wd.core.view = {};
wd.core.view.CacheNode = function(a, b, c) {
  this.node_ = a;
  this.fullyInitialized_ = b;
  this.filtered_ = c;
};
wd.core.view.CacheNode.prototype.isFullyInitialized = function() {
  return this.fullyInitialized_;
};
wd.core.view.CacheNode.prototype.isFiltered = function() {
  return this.filtered_;
};
wd.core.view.CacheNode.prototype.isCompleteForPath = function(a) {
  if (a.isEmpty()) {
    return this.isFullyInitialized() && !this.filtered_;
  }
  a = a.getFront();
  return this.isCompleteForChild(a);
};
wd.core.view.CacheNode.prototype.isCompleteForChild = function(a) {
  return this.isFullyInitialized() && !this.filtered_ || this.node_.hasChild(a);
};
wd.core.view.CacheNode.prototype.getNode = function() {
  return this.node_;
};
wd.core.view.Change = function(a, b, c, d, e) {
  this.type = a;
  this.snapshotNode = b;
  this.childName = c;
  this.oldSnap = d;
  this.prevName = e;
};
wd.core.view.Change.valueChange = function(a) {
  return new wd.core.view.Change(wd.core.view.Change.VALUE, a);
};
wd.core.view.Change.childAddedChange = function(a, b) {
  return new wd.core.view.Change(wd.core.view.Change.CHILD_ADDED, b, a);
};
wd.core.view.Change.childRemovedChange = function(a, b) {
  return new wd.core.view.Change(wd.core.view.Change.CHILD_REMOVED, b, a);
};
wd.core.view.Change.childChangedChange = function(a, b, c) {
  return new wd.core.view.Change(wd.core.view.Change.CHILD_CHANGED, b, a, c);
};
wd.core.view.Change.childMovedChange = function(a, b) {
  return new wd.core.view.Change(wd.core.view.Change.CHILD_MOVED, b, a);
};
wd.core.view.Change.prototype.changeWithPrevName = function(a) {
  return new wd.core.view.Change(this.type, this.snapshotNode, this.childName, this.oldSnap, a);
};
wd.core.view.Change.CHILD_ADDED = "child_added";
wd.core.view.Change.CHILD_REMOVED = "child_removed";
wd.core.view.Change.CHILD_CHANGED = "child_changed";
wd.core.view.Change.CHILD_MOVED = "child_moved";
wd.core.view.Change.VALUE = "value";
wd.core.view.CompleteChildSource = function() {
};
wd.core.view.CompleteChildSource.prototype.getCompleteChild = function(a) {
};
wd.core.view.CompleteChildSource.prototype.getChildAfterChild = function(a, b, c) {
};
wd.core.view.NoCompleteChildSource_ = function() {
};
wd.core.view.NoCompleteChildSource_.prototype.getCompleteChild = function() {
  return null;
};
wd.core.view.NoCompleteChildSource_.prototype.getChildAfterChild = function() {
  return null;
};
wd.core.view.NO_COMPLETE_CHILD_SOURCE = new wd.core.view.NoCompleteChildSource_;
wd.core.view.WriteTreeCompleteChildSource = function(a, b, c) {
  this.writes_ = a;
  this.viewCache_ = b;
  this.optCompleteServerCache_ = c;
};
wd.core.view.WriteTreeCompleteChildSource.prototype.getCompleteChild = function(a) {
  var b = this.viewCache_.getEventCache();
  if (b.isCompleteForChild(a)) {
    return b.getNode().getImmediateChild(a);
  }
  b = null != this.optCompleteServerCache_ ? new wd.core.view.CacheNode(this.optCompleteServerCache_, !0, !1) : this.viewCache_.getServerCache();
  return this.writes_.calcCompleteChild(a, b);
};
wd.core.view.WriteTreeCompleteChildSource.prototype.getChildAfterChild = function(a, b, c) {
  var d = null != this.optCompleteServerCache_ ? this.optCompleteServerCache_ : this.viewCache_.getCompleteServerSnap();
  a = this.writes_.calcIndexedSlice(d, b, 1, c, a);
  return 0 === a.length ? null : a[0];
};
wd.core.view.Event = function() {
};
wd.core.view.Event.prototype.getPath;
wd.core.view.Event.prototype.getEventType;
wd.core.view.Event.prototype.getEventRunner;
wd.core.view.Event.prototype.toString;
wd.core.view.DataEvent = function(a, b, c, d) {
  this.eventRegistration = b;
  this.snapshot = c;
  this.prevName = d;
  this.eventType = a;
};
wd.core.view.DataEvent.prototype.getPath = function() {
  var a = this.snapshot.ref();
  return "value" === this.eventType ? a.path : a.parent().path;
};
wd.core.view.DataEvent.prototype.getEventType = function() {
  return this.eventType;
};
wd.core.view.DataEvent.prototype.getEventRunner = function() {
  return this.eventRegistration.getEventRunner(this);
};
wd.core.view.DataEvent.prototype.toString = function() {
  return this.getPath().toString() + ":" + this.eventType + ":" + wd.util.json.stringify(this.snapshot.exportVal());
};
wd.core.view.CancelEvent = function(a, b, c) {
  this.eventRegistration = a;
  this.error = b;
  this.path = c;
};
wd.core.view.CancelEvent.prototype.getPath = function() {
  return this.path;
};
wd.core.view.CancelEvent.prototype.getEventType = function() {
  return "cancel";
};
wd.core.view.CancelEvent.prototype.getEventRunner = function() {
  return this.eventRegistration.getEventRunner(this);
};
wd.core.view.CancelEvent.prototype.toString = function() {
  return this.path.toString() + ":cancel";
};
wd.core.view.EventQueue = function() {
  this.eventLists_ = [];
  this.recursionDepth_ = 0;
};
wd.core.view.EventQueue.prototype.queueEvents = function(a) {
  for (var b = null, c = 0;c < a.length;c++) {
    var d = a[c], e = d.getPath();
    null === b || e.equals(b.getPath()) || (this.eventLists_.push(b), b = null);
    null === b && (b = new wd.core.view.EventList(e));
    b.add(d);
  }
  b && this.eventLists_.push(b);
};
wd.core.view.EventQueue.prototype.raiseEventsAtPath = function(a, b) {
  this.queueEvents(b);
  this.raiseQueuedEventsMatchingPredicate_(function(b) {
    return b.equals(a);
  });
};
wd.core.view.EventQueue.prototype.raiseEventsForChangedPath = function(a, b) {
  this.queueEvents(b);
  this.raiseQueuedEventsMatchingPredicate_(function(b) {
    return b.contains(a) || a.contains(b);
  });
};
wd.core.view.EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function(a) {
  this.recursionDepth_++;
  for (var b = !0, c = 0;c < this.eventLists_.length;c++) {
    var d = this.eventLists_[c];
    d && (d = d.getPath(), a(d) ? (this.eventLists_[c].raise(), this.eventLists_[c] = null) : b = !1);
  }
  b && (this.eventLists_ = []);
  this.recursionDepth_--;
};
wd.core.view.EventList = function(a) {
  this.path_ = a;
  this.events_ = [];
};
wd.core.view.EventList.prototype.add = function(a) {
  this.events_.push(a);
};
wd.core.view.EventList.prototype.raise = function() {
  for (var a = 0;a < this.events_.length;a++) {
    var b = this.events_[a];
    if (null !== b) {
      this.events_[a] = null;
      var c = b.getEventRunner();
      wd.core.util.logger && wd.core.util.log("event: " + b.toString());
      wd.core.util.exceptionGuard(c);
    }
  }
};
wd.core.view.EventList.prototype.getPath = function() {
  return this.path_;
};
wd.login = {};
wd.login.Errors = {};
var errors = {NETWORK_ERROR:"Unable to contact the Wilddog server.", SERVER_ERROR:"An unknown server error occurred.", TRANSPORT_UNAVAILABLE:"There are no login transports available for the requested method.", REQUEST_INTERRUPTED:"The browser redirected the page before the login request could complete.", USER_CANCELLED:"The user cancelled authentication."};
wd.login.Errors.get = function(a) {
  var b = wd.util.obj.get(errors, a), b = Error(b, a);
  b.code = a;
  return b;
};
wd.login.Transport = function(a) {
};
wd.login.Transport.isAvailable = function() {
};
wd.login.Transport.prototype.open = function(a, b, c) {
};
wd.login.Transport.prototype.classification = function() {
};
wd.login.util = {};
wd.login.util.environment = {};
wd.login.util.environment.isMobileWrapper = function() {
  return wd.login.util.environment.isMobileCordova() || wd.login.util.environment.isMobileWindows() || wd.login.util.environment.isIosWebview();
};
wd.login.util.environment.isMobileCordova = function() {
  return "undefined" !== typeof window && !!(window.cordova || window.phonegap || window.PhoneGap) && /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(navigator.userAgent);
};
wd.login.util.environment.isMobileWindows = function() {
  return "undefined" !== typeof navigator && (!!navigator.userAgent.match(/Windows Phone/) || !!window.Windows && /^ms-appx:/.test(location.href));
};
wd.login.util.environment.isMobileFirefox = function() {
  return "undefined" !== typeof navigator && (-1 !== navigator.userAgent.indexOf("Fennec/") || -1 !== navigator.userAgent.indexOf("Firefox/") && -1 !== navigator.userAgent.indexOf("Android"));
};
wd.login.util.environment.isIosWebview = function() {
  return "undefined" !== typeof navigator && "undefined" !== typeof window && !!(navigator.userAgent.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i) || navigator.userAgent.match(/CriOS/) || navigator.userAgent.match(/Twitter for iPhone/) || navigator.userAgent.match(/FBAN\/FBIOS/) || window.navigator.standalone);
};
wd.login.util.environment.isHeadlessBrowser = function() {
  return "undefined" !== typeof navigator && !!navigator.userAgent.match(/PhantomJS/);
};
wd.login.util.environment.isLocalFile = function() {
  return "undefined" !== typeof location && /^file:\//.test(location.href);
};
wd.login.util.environment.isIE = function() {
  return "undefined" !== typeof navigator && !(!navigator.userAgent.match(/MSIE/) && !navigator.userAgent.match(/Trident/));
};
wd.login.util.environment.isModernIE = function() {
  if ("undefined" === typeof navigator) {
    return !1;
  }
  var a = navigator.userAgent;
  if ("Microsoft Internet Explorer" === navigator.appName) {
    if ((a = a.match(/MSIE ([0-9]{1,}[\.0-9]{0,})/)) && 1 < a.length) {
      return 8 <= parseFloat(a[1]);
    }
  } else {
    if (-1 < a.indexOf("Trident") && (a = a.match(/rv:([0-9]{2,2}[\.0-9]{0,})/)) && 1 < a.length) {
      return 8 <= parseFloat(a[1]);
    }
  }
  return !1;
};
wd.util = {};
wd.util.obj = {};
wd.util.obj.contains = function(a, b) {
  return Object.prototype.hasOwnProperty.call(a, b);
};
wd.util.obj.get = function(a, b) {
  if (Object.prototype.hasOwnProperty.call(a, b)) {
    return a[b];
  }
};
wd.util.obj.foreach = function(a, b) {
  for (var c in a) {
    Object.prototype.hasOwnProperty.call(a, c) && b(c, a[c]);
  }
};
wd.util.obj.clone = function(a) {
  var b = {};
  wd.util.obj.foreach(a, function(a, d) {
    b[a] = d;
  });
  return b;
};
wd.api = {};
wd.api.TransactionResult = function(a, b) {
  this.committed = a;
  this.snapshot = b;
};
wd.core.storage = {};
wd.core.storage.DOMStorageWrapper = function(a) {
  this.domStorage_ = a;
  this.prefix_ = "wilddog:";
};
wd.core.storage.DOMStorageWrapper.prototype.set = function(a, b) {
  null == b ? this.domStorage_.removeItem(this.prefixedName_(a)) : this.domStorage_.setItem(this.prefixedName_(a), wd.util.json.stringify(b));
};
wd.core.storage.DOMStorageWrapper.prototype.get = function(a) {
  a = this.domStorage_.getItem(this.prefixedName_(a));
  return null == a ? null : wd.util.json.eval(a);
};
wd.core.storage.DOMStorageWrapper.prototype.remove = function(a) {
  this.domStorage_.removeItem(this.prefixedName_(a));
};
wd.core.storage.DOMStorageWrapper.prototype.isInMemoryStorage = !1;
wd.core.storage.DOMStorageWrapper.prototype.prefixedName_ = function(a) {
  return this.prefix_ + a;
};
wd.core.storage.DOMStorageWrapper.prototype.toString = function() {
  return this.domStorage_.toString();
};
wd.core.storage.MemoryStorage = function() {
  this.cache_ = {};
};
wd.core.storage.MemoryStorage.prototype.set = function(a, b) {
  null == b ? delete this.cache_[a] : this.cache_[a] = b;
};
wd.core.storage.MemoryStorage.prototype.get = function(a) {
  return wd.util.obj.contains(this.cache_, a) ? this.cache_[a] : null;
};
wd.core.storage.MemoryStorage.prototype.remove = function(a) {
  delete this.cache_[a];
};
wd.core.storage.MemoryStorage.prototype.isInMemoryStorage = !0;
wd.core.storage.createStoragefor = function(a) {
  try {
    if ("undefined" !== typeof window && "undefined" !== typeof window[a]) {
      var b = window[a];
      b.setItem("wilddog:sentinel", "cache");
      b.removeItem("wilddog:sentinel");
      return new wd.core.storage.DOMStorageWrapper(b);
    }
  } catch (c) {
  }
  return new wd.core.storage.MemoryStorage;
};
wd.core.storage.PersistentStorage = wd.core.storage.createStoragefor("localStorage");
wd.core.storage.SessionStorage = wd.core.storage.createStoragefor("sessionStorage");
wd.sync = {};
wd.sync.RepoInfo = function(a, b, c, d, e) {
  this.host = a.toLowerCase();
  this.domain = this.host.substr(this.host.indexOf(".") + 1);
  this.secure = b;
  this.namespace = c;
  this.webSocketOnly = d;
  this.persistenceKey = e || "";
  this.internalHost = wd.core.storage.PersistentStorage.get("host:" + a) || this.host;
  this.failList = JSON.parse(wd.core.storage.SessionStorage.get("failHosts")) || [];
};
wd.sync.RepoInfo.prototype.needsQueryParam = function() {
  return this.host !== this.internalHost;
};
wd.sync.RepoInfo.prototype.isCacheableHost = function() {
  return "s-" === this.internalHost.substr(0, 2);
};
wd.sync.RepoInfo.prototype.isDemoHost = function() {
  return "wilddogio-demo.com" === this.domain;
};
wd.sync.RepoInfo.prototype.isCustomHost = function() {
  return "wilddogio.com" !== this.domain && "wilddogio-demo.com" !== this.domain;
};
wd.sync.RepoInfo.prototype.updateHost = function(a) {
  null == a ? (this.internalHost = this.host, this.isCacheableHost() && wd.core.storage.PersistentStorage.remove("host:" + this.host)) : a !== this.internalHost && 0 < a.indexOf(".wilddogio.com") && (this.internalHost = a, this.isCacheableHost() && wd.core.storage.PersistentStorage.set("host:" + this.host, this.internalHost));
};
wd.sync.RepoInfo.prototype.toString = function() {
  var a = (this.secure ? "https://" : "http://") + this.host;
  this.persistenceKey && (a += "<" + this.persistenceKey + ">");
  return a;
};
wd.sync.RepoInfo.prototype.addFailHost = function(a) {
  null != a && 0 > this.failList.indexOf(a) && a != this.host && (this.failList.push(a), wd.core.storage.SessionStorage.set("failHosts", JSON.stringify(this.failList)));
};
wd.sync.RepoInfo.prototype.removeFailHost = function(a) {
  a = this.failList.indexOf(a);
  0 <= a && (this.failList.splice(a, 1), wd.core.storage.SessionStorage.set("failHosts", JSON.stringify(this.failList)));
};
wd.sync.RepoInfo.prototype.cleanFailHosts = function() {
  this.failList = [];
  wd.core.storage.SessionStorage.remove("failHosts");
};
wd.login.Constants = {SESSION_PERSISTENCE_KEY_PREFIX:"session", DEFAULT_SERVER_HOST:"auth.wilddog.com", SERVER_HOST:"auth.wilddog.com", API_VERSION:"v2", POPUP_PATH_TO_CHANNEL:"/auth/channel", POPUP_RELAY_FRAME_NAME:"__winchan_relay_frame", POPUP_CLOSE_CMD:"die", JSONP_CALLBACK_NAMESPACE:"__wilddog_auth_jsonp", REDIR_REQUEST_ID_KEY:"redirect_request_id", REDIR_REQUEST_COMPLETION_KEY:"__wilddog_request_key", REDIR_CLIENT_OPTIONS_KEY:"redirect_client_options", INTERNAL_REDIRECT_SENTINAL_PATH:"/blank/page.html", 
CLIENT_OPTION_SESSION_PERSISTENCE:"remember", CLIENT_OPTION_REDIRECT_TO:"redirectTo"};
wd.login.RequestInfo = function(a, b, c) {
  this.clientOptions = a || {};
  this.transportOptions = b || {};
  this.serverParams = c || {};
  this.clientOptions[wd.login.Constants.CLIENT_OPTION_SESSION_PERSISTENCE] || (this.clientOptions[wd.login.Constants.CLIENT_OPTION_SESSION_PERSISTENCE] = "default");
};
wd.login.RequestInfo.CLIENT_OPTIONS = [wd.login.Constants.CLIENT_OPTION_SESSION_PERSISTENCE, wd.login.Constants.CLIENT_OPTION_REDIRECT_TO];
wd.login.RequestInfo.fromParams = function(a) {
  var b = {}, c = {};
  wd.util.obj.foreach(a || {}, function(a, e) {
    goog.array.contains(wd.login.RequestInfo.CLIENT_OPTIONS, a) ? b[a] = e : c[a] = e;
  });
  return new wd.login.RequestInfo(b, {}, c);
};
wd.util.validation = {};
wd.util.validation.validateArgCount = function(a, b, c, d) {
  var e;
  d < b ? e = "at least " + b : d > c && (e = 0 === c ? "none" : "no more than " + c);
  if (e) {
    throw Error(a + " failed: Was called with " + d + (1 === d ? " argument." : " arguments.") + " Expects " + e + ".");
  }
};
wd.util.validation.errorPrefix = function(a, b, c) {
  var d = "";
  switch(b) {
    case 1:
      d = c ? "first" : "First";
      break;
    case 2:
      d = c ? "second" : "Second";
      break;
    case 3:
      d = c ? "third" : "Third";
      break;
    case 4:
      d = c ? "fourth" : "Fourth";
      break;
    default:
      throw Error("errorPrefix called with argumentNumber > 4.  Need to update it?");;
  }
  return a = a + " failed: " + (d + " argument ");
};
wd.util.validation.validateNamespace = function(a, b, c, d) {
  if ((!d || goog.isDef(c)) && !goog.isString(c)) {
    throw Error(wd.util.validation.errorPrefix(a, b, d) + "must be a valid wilddog namespace.");
  }
};
wd.util.validation.validateCallback = function(a, b, c, d) {
  if ((!d || goog.isDef(c)) && !goog.isFunction(c)) {
    throw Error(wd.util.validation.errorPrefix(a, b, d) + "must be a valid function.");
  }
};
wd.util.validation.validateContextObject = function(a, b, c, d) {
  if (!d || goog.isDef(c)) {
    if (!goog.isObject(c) || null === c) {
      throw Error(wd.util.validation.errorPrefix(a, b, d) + "must be a valid context object.");
    }
  }
};
goog.async = {};
goog.async.FreeList = function(a, b, c) {
  this.limit_ = c;
  this.create_ = a;
  this.reset_ = b;
  this.occupants_ = 0;
  this.head_ = null;
};
goog.async.FreeList.prototype.get = function() {
  var a;
  0 < this.occupants_ ? (this.occupants_--, a = this.head_, this.head_ = a.next, a.next = null) : a = this.create_();
  return a;
};
goog.async.FreeList.prototype.put = function(a) {
  this.reset_(a);
  this.occupants_ < this.limit_ && (this.occupants_++, a.next = this.head_, this.head_ = a);
};
goog.async.FreeList.prototype.occupants = function() {
  return this.occupants_;
};
goog.crypt = {};
goog.crypt.Hash = function() {
  this.blockSize = -1;
};
goog.crypt.Sha1 = function() {
  goog.crypt.Hash.call(this);
  this.blockSize = 64;
  this.chain_ = [];
  this.buf_ = [];
  this.W_ = [];
  this.pad_ = [];
  this.pad_[0] = 128;
  for (var a = 1;a < this.blockSize;++a) {
    this.pad_[a] = 0;
  }
  this.total_ = this.inbuf_ = 0;
  this.reset();
};
goog.inherits(goog.crypt.Sha1, goog.crypt.Hash);
goog.crypt.Sha1.prototype.reset = function() {
  this.chain_[0] = 1732584193;
  this.chain_[1] = 4023233417;
  this.chain_[2] = 2562383102;
  this.chain_[3] = 271733878;
  this.chain_[4] = 3285377520;
  this.total_ = this.inbuf_ = 0;
};
goog.crypt.Sha1.prototype.compress_ = function(a, b) {
  b || (b = 0);
  var c = this.W_;
  if (goog.isString(a)) {
    for (var d = 0;16 > d;d++) {
      c[d] = a.charCodeAt(b) << 24 | a.charCodeAt(b + 1) << 16 | a.charCodeAt(b + 2) << 8 | a.charCodeAt(b + 3), b += 4;
    }
  } else {
    for (d = 0;16 > d;d++) {
      c[d] = a[b] << 24 | a[b + 1] << 16 | a[b + 2] << 8 | a[b + 3], b += 4;
    }
  }
  for (d = 16;80 > d;d++) {
    var e = c[d - 3] ^ c[d - 8] ^ c[d - 14] ^ c[d - 16];
    c[d] = (e << 1 | e >>> 31) & 4294967295;
  }
  for (var f = this.chain_[0], g = this.chain_[1], h = this.chain_[2], k = this.chain_[3], l = this.chain_[4], m, d = 0;80 > d;d++) {
    40 > d ? 20 > d ? (e = k ^ g & (h ^ k), m = 1518500249) : (e = g ^ h ^ k, m = 1859775393) : 60 > d ? (e = g & h | k & (g | h), m = 2400959708) : (e = g ^ h ^ k, m = 3395469782), e = (f << 5 | f >>> 27) + e + l + m + c[d] & 4294967295, l = k, k = h, h = (g << 30 | g >>> 2) & 4294967295, g = f, f = e;
  }
  this.chain_[0] = this.chain_[0] + f & 4294967295;
  this.chain_[1] = this.chain_[1] + g & 4294967295;
  this.chain_[2] = this.chain_[2] + h & 4294967295;
  this.chain_[3] = this.chain_[3] + k & 4294967295;
  this.chain_[4] = this.chain_[4] + l & 4294967295;
};
goog.crypt.Sha1.prototype.update = function(a, b) {
  if (null != a) {
    goog.isDef(b) || (b = a.length);
    for (var c = b - this.blockSize, d = 0, e = this.buf_, f = this.inbuf_;d < b;) {
      if (0 == f) {
        for (;d <= c;) {
          this.compress_(a, d), d += this.blockSize;
        }
      }
      if (goog.isString(a)) {
        for (;d < b;) {
          if (e[f] = a.charCodeAt(d), ++f, ++d, f == this.blockSize) {
            this.compress_(e);
            f = 0;
            break;
          }
        }
      } else {
        for (;d < b;) {
          if (e[f] = a[d], ++f, ++d, f == this.blockSize) {
            this.compress_(e);
            f = 0;
            break;
          }
        }
      }
    }
    this.inbuf_ = f;
    this.total_ += b;
  }
};
goog.crypt.Sha1.prototype.digest = function() {
  var a = [], b = 8 * this.total_;
  56 > this.inbuf_ ? this.update(this.pad_, 56 - this.inbuf_) : this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
  for (var c = this.blockSize - 1;56 <= c;c--) {
    this.buf_[c] = b & 255, b /= 256;
  }
  this.compress_(this.buf_);
  for (c = b = 0;5 > c;c++) {
    for (var d = 24;0 <= d;d -= 8) {
      a[b] = this.chain_[c] >> d & 255, ++b;
    }
  }
  return a;
};
goog.debug = {};
goog.debug.Error = function(a) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var b = Error().stack;
    b && (this.stack = b);
  }
  a && (this.message = String(a));
  this.reportErrorToServer = !0;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.dom = {};
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.TagName = function(a) {
  this.tagName_ = a;
};
goog.dom.TagName.prototype.toString = function() {
  return this.tagName_;
};
goog.dom.TagName.A = new goog.dom.TagName("A");
goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR");
goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM");
goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS");
goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET");
goog.dom.TagName.AREA = new goog.dom.TagName("AREA");
goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE");
goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE");
goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO");
goog.dom.TagName.B = new goog.dom.TagName("B");
goog.dom.TagName.BASE = new goog.dom.TagName("BASE");
goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT");
goog.dom.TagName.BDI = new goog.dom.TagName("BDI");
goog.dom.TagName.BDO = new goog.dom.TagName("BDO");
goog.dom.TagName.BIG = new goog.dom.TagName("BIG");
goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE");
goog.dom.TagName.BODY = new goog.dom.TagName("BODY");
goog.dom.TagName.BR = new goog.dom.TagName("BR");
goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON");
goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS");
goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION");
goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER");
goog.dom.TagName.CITE = new goog.dom.TagName("CITE");
goog.dom.TagName.CODE = new goog.dom.TagName("CODE");
goog.dom.TagName.COL = new goog.dom.TagName("COL");
goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND");
goog.dom.TagName.DATA = new goog.dom.TagName("DATA");
goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST");
goog.dom.TagName.DD = new goog.dom.TagName("DD");
goog.dom.TagName.DEL = new goog.dom.TagName("DEL");
goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS");
goog.dom.TagName.DFN = new goog.dom.TagName("DFN");
goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG");
goog.dom.TagName.DIR = new goog.dom.TagName("DIR");
goog.dom.TagName.DIV = new goog.dom.TagName("DIV");
goog.dom.TagName.DL = new goog.dom.TagName("DL");
goog.dom.TagName.DT = new goog.dom.TagName("DT");
goog.dom.TagName.EM = new goog.dom.TagName("EM");
goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED");
goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET");
goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION");
goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE");
goog.dom.TagName.FONT = new goog.dom.TagName("FONT");
goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER");
goog.dom.TagName.FORM = new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME");
goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET");
goog.dom.TagName.H1 = new goog.dom.TagName("H1");
goog.dom.TagName.H2 = new goog.dom.TagName("H2");
goog.dom.TagName.H3 = new goog.dom.TagName("H3");
goog.dom.TagName.H4 = new goog.dom.TagName("H4");
goog.dom.TagName.H5 = new goog.dom.TagName("H5");
goog.dom.TagName.H6 = new goog.dom.TagName("H6");
goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD");
goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP");
goog.dom.TagName.HR = new goog.dom.TagName("HR");
goog.dom.TagName.HTML = new goog.dom.TagName("HTML");
goog.dom.TagName.I = new goog.dom.TagName("I");
goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME");
goog.dom.TagName.IMG = new goog.dom.TagName("IMG");
goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT");
goog.dom.TagName.INS = new goog.dom.TagName("INS");
goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX");
goog.dom.TagName.KBD = new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN");
goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL");
goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND");
goog.dom.TagName.LI = new goog.dom.TagName("LI");
goog.dom.TagName.LINK = new goog.dom.TagName("LINK");
goog.dom.TagName.MAP = new goog.dom.TagName("MAP");
goog.dom.TagName.MARK = new goog.dom.TagName("MARK");
goog.dom.TagName.MATH = new goog.dom.TagName("MATH");
goog.dom.TagName.MENU = new goog.dom.TagName("MENU");
goog.dom.TagName.META = new goog.dom.TagName("META");
goog.dom.TagName.METER = new goog.dom.TagName("METER");
goog.dom.TagName.NAV = new goog.dom.TagName("NAV");
goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES");
goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT");
goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT");
goog.dom.TagName.OL = new goog.dom.TagName("OL");
goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP");
goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION");
goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT");
goog.dom.TagName.P = new goog.dom.TagName("P");
goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM");
goog.dom.TagName.PRE = new goog.dom.TagName("PRE");
goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS");
goog.dom.TagName.Q = new goog.dom.TagName("Q");
goog.dom.TagName.RP = new goog.dom.TagName("RP");
goog.dom.TagName.RT = new goog.dom.TagName("RT");
goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY");
goog.dom.TagName.S = new goog.dom.TagName("S");
goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP");
goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT");
goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION");
goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT");
goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL");
goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE");
goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN");
goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE");
goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG");
goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE");
goog.dom.TagName.SUB = new goog.dom.TagName("SUB");
goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY");
goog.dom.TagName.SUP = new goog.dom.TagName("SUP");
goog.dom.TagName.SVG = new goog.dom.TagName("SVG");
goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE");
goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY");
goog.dom.TagName.TD = new goog.dom.TagName("TD");
goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE");
goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA");
goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT");
goog.dom.TagName.TH = new goog.dom.TagName("TH");
goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD");
goog.dom.TagName.TIME = new goog.dom.TagName("TIME");
goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE");
goog.dom.TagName.TR = new goog.dom.TagName("TR");
goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK");
goog.dom.TagName.TT = new goog.dom.TagName("TT");
goog.dom.TagName.U = new goog.dom.TagName("U");
goog.dom.TagName.UL = new goog.dom.TagName("UL");
goog.dom.TagName.VAR = new goog.dom.TagName("VAR");
goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO");
goog.dom.TagName.WBR = new goog.dom.TagName("WBR");
goog.functions = {};
goog.functions.constant = function(a) {
  return function() {
    return a;
  };
};
goog.functions.FALSE = goog.functions.constant(!1);
goog.functions.TRUE = goog.functions.constant(!0);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(a, b) {
  return a;
};
goog.functions.error = function(a) {
  return function() {
    throw Error(a);
  };
};
goog.functions.fail = function(a) {
  return function() {
    throw a;
  };
};
goog.functions.lock = function(a, b) {
  b = b || 0;
  return function() {
    return a.apply(this, Array.prototype.slice.call(arguments, 0, b));
  };
};
goog.functions.nth = function(a) {
  return function() {
    return arguments[a];
  };
};
goog.functions.partialRight = function(a, b) {
  var c = Array.prototype.slice.call(arguments, 1);
  return function() {
    var b = Array.prototype.slice.call(arguments);
    b.push.apply(b, c);
    return a.apply(this, b);
  };
};
goog.functions.withReturnValue = function(a, b) {
  return goog.functions.sequence(a, goog.functions.constant(b));
};
goog.functions.equalTo = function(a, b) {
  return function(c) {
    return b ? a == c : a === c;
  };
};
goog.functions.compose = function(a, b) {
  var c = arguments, d = c.length;
  return function() {
    var a;
    d && (a = c[d - 1].apply(this, arguments));
    for (var b = d - 2;0 <= b;b--) {
      a = c[b].call(this, a);
    }
    return a;
  };
};
goog.functions.sequence = function(a) {
  var b = arguments, c = b.length;
  return function() {
    for (var a, e = 0;e < c;e++) {
      a = b[e].apply(this, arguments);
    }
    return a;
  };
};
goog.functions.and = function(a) {
  var b = arguments, c = b.length;
  return function() {
    for (var a = 0;a < c;a++) {
      if (!b[a].apply(this, arguments)) {
        return !1;
      }
    }
    return !0;
  };
};
goog.functions.or = function(a) {
  var b = arguments, c = b.length;
  return function() {
    for (var a = 0;a < c;a++) {
      if (b[a].apply(this, arguments)) {
        return !0;
      }
    }
    return !1;
  };
};
goog.functions.not = function(a) {
  return function() {
    return !a.apply(this, arguments);
  };
};
goog.functions.create = function(a, b) {
  var c = function() {
  };
  c.prototype = a.prototype;
  c = new c;
  a.apply(c, Array.prototype.slice.call(arguments, 1));
  return c;
};
goog.functions.CACHE_RETURN_VALUE = !0;
goog.functions.cacheReturnValue = function(a) {
  var b = !1, c;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return a();
    }
    b || (c = a(), b = !0);
    return c;
  };
};
goog.functions.once = function(a) {
  var b = a;
  return function() {
    if (b) {
      var a = b;
      b = null;
      a();
    }
  };
};
goog.functions.debounce = function(a, b, c) {
  c && (a = goog.bind(a, c));
  var d = null;
  return function(c) {
    goog.global.clearTimeout(d);
    var f = arguments;
    d = goog.global.setTimeout(function() {
      a.apply(null, f);
    }, b);
  };
};
goog.functions.throttle = function(a, b, c) {
  c && (a = goog.bind(a, c));
  var d = null, e = !1, f = [], g = function() {
    d = null;
    e && (e = !1, h());
  }, h = function() {
    d = goog.global.setTimeout(g, b);
    a.apply(null, f);
  };
  return function(a) {
    f = arguments;
    d ? e = !0 : h();
  };
};
goog.json = {};
goog.json.USE_NATIVE_JSON = !1;
goog.json.isValid = function(a) {
  return /^\s*$/.test(a) ? !1 : /^[\],:{}\s\u2028\u2029]*$/.test(a.replace(/\\["\\\/bfnrtu]/g, "@").replace(/(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g, "]").replace(/(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g, ""));
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? goog.global.JSON.parse : function(a) {
  a = String(a);
  if (goog.json.isValid(a)) {
    try {
      return eval("(" + a + ")");
    } catch (b) {
    }
  }
  throw Error("Invalid JSON string: " + a);
};
goog.json.unsafeParse = goog.json.USE_NATIVE_JSON ? goog.global.JSON.parse : function(a) {
  return eval("(" + a + ")");
};
goog.json.serialize = goog.json.USE_NATIVE_JSON ? goog.global.JSON.stringify : function(a, b) {
  return (new goog.json.Serializer(b)).serialize(a);
};
goog.json.Serializer = function(a) {
  this.replacer_ = a;
};
goog.json.Serializer.prototype.serialize = function(a) {
  var b = [];
  this.serializeInternal(a, b);
  return b.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(a, b) {
  if (null == a) {
    b.push("null");
  } else {
    if ("object" == typeof a) {
      if (goog.isArray(a)) {
        this.serializeArray(a, b);
        return;
      }
      if (a instanceof String || a instanceof Number || a instanceof Boolean) {
        a = a.valueOf();
      } else {
        this.serializeObject_(a, b);
        return;
      }
    }
    switch(typeof a) {
      case "string":
        this.serializeString_(a, b);
        break;
      case "number":
        this.serializeNumber_(a, b);
        break;
      case "boolean":
        b.push(String(a));
        break;
      case "function":
        b.push("null");
        break;
      default:
        throw Error("Unknown type: " + typeof a);;
    }
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(a, b) {
  b.push('"', a.replace(goog.json.Serializer.charsToReplace_, function(a) {
    var b = goog.json.Serializer.charToJsonCharCache_[a];
    b || (b = "\\u" + (a.charCodeAt(0) | 65536).toString(16).substr(1), goog.json.Serializer.charToJsonCharCache_[a] = b);
    return b;
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(a, b) {
  b.push(isFinite(a) && !isNaN(a) ? String(a) : "null");
};
goog.json.Serializer.prototype.serializeArray = function(a, b) {
  var c = a.length;
  b.push("[");
  for (var d = "", e = 0;e < c;e++) {
    b.push(d), d = a[e], this.serializeInternal(this.replacer_ ? this.replacer_.call(a, String(e), d) : d, b), d = ",";
  }
  b.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(a, b) {
  b.push("{");
  var c = "", d;
  for (d in a) {
    if (Object.prototype.hasOwnProperty.call(a, d)) {
      var e = a[d];
      "function" != typeof e && (b.push(c), this.serializeString_(d, b), b.push(":"), this.serializeInternal(this.replacer_ ? this.replacer_.call(a, d, e) : e, b), c = ",");
    }
  }
  b.push("}");
};
wd.util.querystring = function(a) {
  var b = [];
  wd.util.obj.foreach(a, function(a, d) {
    goog.isArray(d) ? goog.array.forEach(d, function(d) {
      b.push(encodeURIComponent(a) + "=" + encodeURIComponent(d));
    }) : b.push(encodeURIComponent(a) + "=" + encodeURIComponent(d));
  });
  return b.length ? "&" + b.join("&") : "";
};
wd.util.querystringDecode = function(a) {
  var b = {};
  a = a.replace(/^\?/, "").split("&");
  goog.array.forEach(a, function(a) {
    a && (a = a.split("="), b[a[0]] = a[1]);
  });
  return b;
};
wd.util.json = {};
wd.util.json.eval = function(a) {
  return "undefined" !== typeof JSON && goog.isDef(JSON.parse) ? JSON.parse(a) : goog.json.parse(a);
};
wd.util.json.stringify = function(a) {
  return "undefined" !== typeof JSON && goog.isDef(JSON.stringify) ? JSON.stringify(a) : goog.json.serialize(a);
};
wd.core.SnapshotHolder = function() {
  this.rootNode_ = wd.core.snap.EMPTY_NODE;
};
wd.core.SnapshotHolder.prototype.getNode = function(a) {
  return this.rootNode_.getChild(a);
};
wd.core.SnapshotHolder.prototype.updateSnapshot = function(a, b) {
  this.rootNode_ = this.rootNode_.updateChild(a, b);
};
goog.DEBUG && (wd.core.SnapshotHolder.prototype.toString = function() {
  return this.rootNode_.toString();
});
wd.login.transports = {};
wd.login.transports.util = {};
wd.login.transports.util.findRelay = function() {
  var a = window.opener.frames, b;
  for (b = a.length - 1;0 <= b;b--) {
    try {
      if (a[b].location.protocol === window.location.protocol && a[b].location.host === window.location.host && a[b].name === wd.login.Constants.POPUP_RELAY_FRAME_NAME) {
        return a[b];
      }
    } catch (c) {
    }
  }
  return null;
};
wd.login.transports.util.addListener = function(a, b, c) {
  a.attachEvent ? a.attachEvent("on" + b, c) : a.addEventListener && a.addEventListener(b, c, !1);
};
wd.login.transports.util.removeListener = function(a, b, c) {
  a.detachEvent ? a.detachEvent("on" + b, c) : a.removeEventListener && a.removeEventListener(b, c, !1);
};
wd.login.transports.util.extractOrigin = function(a) {
  /^https?:\/\//.test(a) || (a = window.location.href);
  var b = /^(https?:\/\/[\-_a-zA-Z\.0-9:]+)/.exec(a);
  return b ? b[1] : a;
};
wd.login.transports.util.extractRedirectCompletionHash = function(a) {
  var b = "";
  try {
    a = a.replace("#", "");
    var c = wd.util.querystringDecode(a);
    c && wd.util.obj.contains(c, wd.login.Constants.REDIR_REQUEST_COMPLETION_KEY) && (b = wd.util.obj.get(c, wd.login.Constants.REDIR_REQUEST_COMPLETION_KEY));
  } catch (d) {
  }
  return b;
};
wd.login.transports.util.replaceRedirectCompletionHash = function() {
  try {
    document.location.hash = document.location.hash.replace(new RegExp("&" + wd.login.Constants.REDIR_REQUEST_COMPLETION_KEY + "=([a-zA-z0-9]*)"), "");
  } catch (a) {
  }
};
wd.login.transports.util.getBaseUrl = function() {
  var a = wd.core.util.parseURL(wd.login.Constants.SERVER_HOST);
  return a.scheme + "://" + a.host + "/" + wd.login.Constants.API_VERSION;
};
wd.login.transports.util.getPopupChannelUrl = function(a) {
  return wd.login.transports.util.getBaseUrl() + "/" + a + wd.login.Constants.POPUP_PATH_TO_CHANNEL;
};
wd.login.transports.NodeHttp = function(a) {
  a.method || (a.method = "GET");
  a.headers || (a.headers = {});
  a.headers["Content-Type"] || (a.headers["Content-Type"] = "application/json");
  a.headers["Content-Type"] = a.headers["Content-Type"].toLowerCase();
  this.options = a;
};
wd.login.transports.NodeHttp.prototype.open = function(a, b, c) {
  var d = wd.core.util.parseURL(a);
  a = this.options.method;
  var e;
  try {
    var f = "http" === d.scheme ? require("http") : require("https");
  } catch (k) {
  }
  var g = {Accept:"application/json;text/plain"};
  goog.object.extend(g, this.options.headers);
  d = {host:d.host.split(":")[0], port:d.port, path:d.pathString, method:this.options.method.toUpperCase()};
  if ("GET" === a) {
    d.path += (/\?/.test(d.path) ? "" : "?") + wd.util.querystring(b), e = null;
  } else {
    var h = this.options.headers["Content-Type"];
    "application/json" === h && (e = wd.util.json.stringify(b));
    "application/x-www-form-urlencoded" === h && (e = wd.util.querystring(b));
    g["Content-Length"] = Buffer.byteLength(e, "utf8");
  }
  d.headers = g;
  b = f.request(d, function(a) {
    var b = "";
    a.setEncoding("utf8");
    a.on("data", function(a) {
      b += a;
    });
    a.on("end", function() {
      try {
        b = wd.util.json.eval(b + "");
      } catch (a) {
      }
      c && (c(null, b), c = null);
    });
  });
  "GET" !== a && b.write(e);
  b.on("error", function(a) {
    a && a.code && ("ENOTFOUND" === a.code || "ENETDOWN" === a.code) ? c(wd.login.Errors.get("NETWORK_ERROR")) : c(wd.login.Errors.get("SERVER_ERROR"));
    c = null;
  });
  b.end();
};
wd.login.transports.NodeHttp.isAvailable = function() {
  return NODE_CLIENT;
};
wd.login.transports.NodeHttp.prototype.classification = function() {
  return "json";
};
wd.login.transports.PopupReceiver = function(a) {
  var b = this;
  this.cb = a;
  this.targetOrigin = "*";
  wd.login.util.environment.isModernIE() ? this.messageTarget = this.inboundTarget = wd.login.transports.util.findRelay() : (this.messageTarget = window.opener, this.inboundTarget = window);
  if (!b.messageTarget) {
    throw "Unable to find relay frame";
  }
  wd.login.transports.util.addListener(this.inboundTarget, "message", goog.bind(this.onMessage_, this));
  wd.login.transports.util.addListener(this.inboundTarget, "message", goog.bind(this.onDie_, this));
  try {
    this.doPost_({a:"ready"});
  } catch (c) {
    wd.login.transports.util.addListener(this.messageTarget, "load", function(a) {
      b.doPost_({a:"ready"});
    });
  }
  wd.login.transports.util.addListener(window, "unload", goog.bind(this.onUnload_, this));
};
wd.login.transports.PopupReceiver.prototype.doPost_ = function(a) {
  a = wd.util.json.stringify(a);
  wd.login.util.environment.isModernIE() ? this.messageTarget.doPost(a, this.targetOrigin) : this.messageTarget.postMessage(a, this.targetOrigin);
};
wd.login.transports.PopupReceiver.prototype.onMessage_ = function(a) {
  var b = this, c;
  try {
    c = wd.util.json.eval(a.data);
  } catch (d) {
  }
  c && "request" === c.a && (wd.login.transports.util.removeListener(window, "message", this.onMessage_), this.targetOrigin = a.origin, this.cb && setTimeout(function() {
    b.cb(b.targetOrigin, c.d, function(a, c) {
      b.autoClose = !c;
      b.cb = void 0;
      b.doPost_({a:"response", d:a, forceKeepWindowOpen:c});
    });
  }, 0));
};
wd.login.transports.PopupReceiver.prototype.onUnload_ = function() {
  try {
    wd.login.transports.util.removeListener(this.inboundTarget, "message", this.onDie_);
  } catch (a) {
  }
  this.cb && (this.doPost_({a:"error", d:"unknown closed window"}), this.cb = void 0);
  try {
    window.close();
  } catch (a) {
  }
};
wd.login.transports.PopupReceiver.prototype.onDie_ = function(a) {
  if (this.autoClose && a.data === wd.login.Constants.POPUP_CLOSE_CMD) {
    try {
      window.close();
    } catch (b) {
    }
  }
};
wd.login.transports.Redirect = function(a) {
  this.requestId_ = goog.string.getRandomString() + goog.string.getRandomString() + goog.string.getRandomString();
  this.options_ = a;
};
wd.login.transports.Redirect.prototype.open = function(a, b, c) {
  wd.core.storage.SessionStorage.set(wd.login.Constants.REDIR_REQUEST_ID_KEY, this.requestId_);
  wd.core.storage.SessionStorage.set(wd.login.Constants.REDIR_REQUEST_ID_KEY, this.requestId_);
  b.requestId = this.requestId_;
  b.redirectTo = b.redirectTo || window.location.href;
  a += (/\?/.test(a) ? "" : "?") + wd.util.querystring(b);
  window.location = a;
};
wd.login.transports.Redirect.isAvailable = function() {
  return !NODE_CLIENT && !wd.login.util.environment.isLocalFile() && !wd.login.util.environment.isMobileCordova();
};
wd.login.transports.Redirect.prototype.classification = function() {
  return "redirect";
};
wd.login.transports.XHR = function(a) {
  a.method || (a.method = "GET");
  a.headers || (a.headers = {});
  a.headers["Content-Type"] || (a.headers["Content-Type"] = "application/json");
  a.headers["Content-Type"] = a.headers["Content-Type"].toLowerCase();
  this.options = a;
};
wd.login.transports.XHR.prototype.open = function(a, b, c) {
  function d(a) {
    c && (c(wd.login.Errors.get("REQUEST_INTERRUPTED")), c = null);
  }
  var e = new XMLHttpRequest, f = this.options.method.toUpperCase(), g;
  wd.login.transports.util.addListener(window, "beforeunload", d);
  e.onreadystatechange = function() {
    if (c && 4 === e.readyState) {
      var a;
      if (200 <= e.status && 300 > e.status) {
        try {
          a = wd.util.json.eval(e.responseText);
        } catch (b) {
        }
        c(null, a);
      } else {
        500 <= e.status && 600 > e.status ? c(wd.login.Errors.get("SERVER_ERROR")) : c(wd.login.Errors.get("NETWORK_ERROR"));
      }
      c = null;
      wd.login.transports.util.removeListener(window, "beforeunload", d);
    }
  };
  if ("GET" === f) {
    a += (/\?/.test(a) ? "" : "?") + wd.util.querystring(b), g = null;
  } else {
    var h = this.options.headers["Content-Type"];
    "application/json" === h && (g = wd.util.json.stringify(b));
    "application/x-www-form-urlencoded" === h && (g = wd.util.querystring(b));
  }
  e.open(f, a, !0);
  a = {"X-Requested-With":"XMLHttpRequest", Accept:"application/json;text/plain"};
  goog.object.extend(a, this.options.headers);
  for (var k in a) {
    e.setRequestHeader(k, a[k]);
  }
  e.send(g);
};
wd.login.transports.XHR.isAvailable = function() {
  return !NODE_CLIENT && !!window.XMLHttpRequest && (!wd.login.util.environment.isIE() || wd.login.util.environment.isModernIE());
};
wd.login.transports.XHR.prototype.classification = function() {
  return "json";
};
goog.object = {};
goog.object.is = function(a, b) {
  return a === b ? 0 !== a || 1 / a === 1 / b : a !== a && b !== b;
};
goog.object.forEach = function(a, b, c) {
  for (var d in a) {
    b.call(c, a[d], d, a);
  }
};
goog.object.filter = function(a, b, c) {
  var d = {}, e;
  for (e in a) {
    b.call(c, a[e], e, a) && (d[e] = a[e]);
  }
  return d;
};
goog.object.map = function(a, b, c) {
  var d = {}, e;
  for (e in a) {
    d[e] = b.call(c, a[e], e, a);
  }
  return d;
};
goog.object.some = function(a, b, c) {
  for (var d in a) {
    if (b.call(c, a[d], d, a)) {
      return !0;
    }
  }
  return !1;
};
goog.object.every = function(a, b, c) {
  for (var d in a) {
    if (!b.call(c, a[d], d, a)) {
      return !1;
    }
  }
  return !0;
};
goog.object.getCount = function(a) {
  var b = 0, c;
  for (c in a) {
    b++;
  }
  return b;
};
goog.object.getAnyKey = function(a) {
  for (var b in a) {
    return b;
  }
};
goog.object.getAnyValue = function(a) {
  for (var b in a) {
    return a[b];
  }
};
goog.object.contains = function(a, b) {
  return goog.object.containsValue(a, b);
};
goog.object.getValues = function(a) {
  var b = [], c = 0, d;
  for (d in a) {
    b[c++] = a[d];
  }
  return b;
};
goog.object.getKeys = function(a) {
  var b = [], c = 0, d;
  for (d in a) {
    b[c++] = d;
  }
  return b;
};
goog.object.getValueByKeys = function(a, b) {
  for (var c = goog.isArrayLike(b), d = c ? b : arguments, c = c ? 0 : 1;c < d.length && (a = a[d[c]], goog.isDef(a));c++) {
  }
  return a;
};
goog.object.containsKey = function(a, b) {
  return null !== a && b in a;
};
goog.object.containsValue = function(a, b) {
  for (var c in a) {
    if (a[c] == b) {
      return !0;
    }
  }
  return !1;
};
goog.object.findKey = function(a, b, c) {
  for (var d in a) {
    if (b.call(c, a[d], d, a)) {
      return d;
    }
  }
};
goog.object.findValue = function(a, b, c) {
  return (b = goog.object.findKey(a, b, c)) && a[b];
};
goog.object.isEmpty = function(a) {
  for (var b in a) {
    return !1;
  }
  return !0;
};
goog.object.clear = function(a) {
  for (var b in a) {
    delete a[b];
  }
};
goog.object.remove = function(a, b) {
  var c;
  (c = b in a) && delete a[b];
  return c;
};
goog.object.add = function(a, b, c) {
  if (null !== a && b in a) {
    throw Error('The object already contains the key "' + b + '"');
  }
  goog.object.set(a, b, c);
};
goog.object.get = function(a, b, c) {
  return null !== a && b in a ? a[b] : c;
};
goog.object.set = function(a, b, c) {
  a[b] = c;
};
goog.object.setIfUndefined = function(a, b, c) {
  return b in a ? a[b] : a[b] = c;
};
goog.object.setWithReturnValueIfNotSet = function(a, b, c) {
  if (b in a) {
    return a[b];
  }
  c = c();
  return a[b] = c;
};
goog.object.equals = function(a, b) {
  for (var c in a) {
    if (!(c in b) || a[c] !== b[c]) {
      return !1;
    }
  }
  for (c in b) {
    if (!(c in a)) {
      return !1;
    }
  }
  return !0;
};
goog.object.clone = function(a) {
  var b = {}, c;
  for (c in a) {
    b[c] = a[c];
  }
  return b;
};
goog.object.unsafeClone = function(a) {
  var b = goog.typeOf(a);
  if ("object" == b || "array" == b) {
    if (goog.isFunction(a.clone)) {
      return a.clone();
    }
    var b = "array" == b ? [] : {}, c;
    for (c in a) {
      b[c] = goog.object.unsafeClone(a[c]);
    }
    return b;
  }
  return a;
};
goog.object.transpose = function(a) {
  var b = {}, c;
  for (c in a) {
    b[a[c]] = c;
  }
  return b;
};
goog.object.PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend = function(a, b) {
  for (var c, d, e = 1;e < arguments.length;e++) {
    d = arguments[e];
    for (c in d) {
      a[c] = d[c];
    }
    for (var f = 0;f < goog.object.PROTOTYPE_FIELDS_.length;f++) {
      c = goog.object.PROTOTYPE_FIELDS_[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
    }
  }
};
goog.object.create = function(a) {
  var b = arguments.length;
  if (1 == b && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (b % 2) {
    throw Error("Uneven number of arguments");
  }
  for (var c = {}, d = 0;d < b;d += 2) {
    c[arguments[d]] = arguments[d + 1];
  }
  return c;
};
goog.object.createSet = function(a) {
  var b = arguments.length;
  if (1 == b && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  for (var c = {}, d = 0;d < b;d++) {
    c[arguments[d]] = !0;
  }
  return c;
};
goog.object.createImmutableView = function(a) {
  var b = a;
  Object.isFrozen && !Object.isFrozen(a) && (b = Object.create(a), Object.freeze(b));
  return b;
};
goog.object.isImmutableView = function(a) {
  return !!Object.isFrozen && Object.isFrozen(a);
};
goog.promise = {};
goog.promise.Resolver = function() {
};
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(a, b, c) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(a) {
  a.prototype.then = a.prototype.then;
  COMPILED ? a.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = !0 : a.prototype.$goog_Thenable = !0;
};
goog.Thenable.isImplementedBy = function(a) {
  if (!a) {
    return !1;
  }
  try {
    return COMPILED ? !!a[goog.Thenable.IMPLEMENTED_BY_PROP] : !!a.$goog_Thenable;
  } catch (b) {
    return !1;
  }
};
goog.reflect = {};
goog.reflect.object = function(a, b) {
  return b;
};
goog.reflect.objectProperty = function(a, b) {
  return a;
};
goog.reflect.sinkValue = function(a) {
  goog.reflect.sinkValue[" "](a);
  return a;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(a, b) {
  try {
    return goog.reflect.sinkValue(a[b]), !0;
  } catch (c) {
  }
  return !1;
};
goog.reflect.cache = function(a, b, c, d) {
  d = d ? d(b) : b;
  return Object.prototype.hasOwnProperty.call(a, d) ? a[d] : a[d] = c(b);
};
goog.string = {};
goog.string.DETECT_DOUBLE_ESCAPING = !1;
goog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(a, b) {
  return 0 == a.lastIndexOf(b, 0);
};
goog.string.endsWith = function(a, b) {
  var c = a.length - b.length;
  return 0 <= c && a.indexOf(b, c) == c;
};
goog.string.caseInsensitiveStartsWith = function(a, b) {
  return 0 == goog.string.caseInsensitiveCompare(b, a.substr(0, b.length));
};
goog.string.caseInsensitiveEndsWith = function(a, b) {
  return 0 == goog.string.caseInsensitiveCompare(b, a.substr(a.length - b.length, b.length));
};
goog.string.caseInsensitiveEquals = function(a, b) {
  return a.toLowerCase() == b.toLowerCase();
};
goog.string.subs = function(a, b) {
  for (var c = a.split("%s"), d = "", e = Array.prototype.slice.call(arguments, 1);e.length && 1 < c.length;) {
    d += c.shift() + e.shift();
  }
  return d + c.join("%s");
};
goog.string.collapseWhitespace = function(a) {
  return a.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(a) {
  return /^[\s\xa0]*$/.test(a);
};
goog.string.isEmptyString = function(a) {
  return 0 == a.length;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(a) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(a) {
  return !/[^\t\n\r ]/.test(a);
};
goog.string.isAlpha = function(a) {
  return !/[^a-zA-Z]/.test(a);
};
goog.string.isNumeric = function(a) {
  return !/[^0-9]/.test(a);
};
goog.string.isAlphaNumeric = function(a) {
  return !/[^a-zA-Z0-9]/.test(a);
};
goog.string.isSpace = function(a) {
  return " " == a;
};
goog.string.isUnicodeChar = function(a) {
  return 1 == a.length && " " <= a && "~" >= a || "\u0080" <= a && "\ufffd" >= a;
};
goog.string.stripNewlines = function(a) {
  return a.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(a) {
  return a.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(a) {
  return a.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(a) {
  return a.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(a) {
  return a.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(a) {
  return a.trim();
} : function(a) {
  return a.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(a) {
  return a.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(a) {
  return a.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(a, b) {
  var c = String(a).toLowerCase(), d = String(b).toLowerCase();
  return c < d ? -1 : c == d ? 0 : 1;
};
goog.string.numberAwareCompare_ = function(a, b, c) {
  if (a == b) {
    return 0;
  }
  if (!a) {
    return -1;
  }
  if (!b) {
    return 1;
  }
  for (var d = a.toLowerCase().match(c), e = b.toLowerCase().match(c), f = Math.min(d.length, e.length), g = 0;g < f;g++) {
    c = d[g];
    var h = e[g];
    if (c != h) {
      return a = parseInt(c, 10), !isNaN(a) && (b = parseInt(h, 10), !isNaN(b) && a - b) ? a - b : c < h ? -1 : 1;
    }
  }
  return d.length != e.length ? d.length - e.length : a < b ? -1 : 1;
};
goog.string.intAwareCompare = function(a, b) {
  return goog.string.numberAwareCompare_(a, b, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(a, b) {
  return goog.string.numberAwareCompare_(a, b, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(a) {
  return encodeURIComponent(String(a));
};
goog.string.urlDecode = function(a) {
  return decodeURIComponent(a.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(a, b) {
  return a.replace(/(\r\n|\r|\n)/g, b ? "<br />" : "<br>");
};
goog.string.htmlEscape = function(a, b) {
  if (b) {
    a = a.replace(goog.string.AMP_RE_, "&amp;").replace(goog.string.LT_RE_, "&lt;").replace(goog.string.GT_RE_, "&gt;").replace(goog.string.QUOT_RE_, "&quot;").replace(goog.string.SINGLE_QUOTE_RE_, "&#39;").replace(goog.string.NULL_RE_, "&#0;"), goog.string.DETECT_DOUBLE_ESCAPING && (a = a.replace(goog.string.E_RE_, "&#101;"));
  } else {
    if (!goog.string.ALL_RE_.test(a)) {
      return a;
    }
    -1 != a.indexOf("&") && (a = a.replace(goog.string.AMP_RE_, "&amp;"));
    -1 != a.indexOf("<") && (a = a.replace(goog.string.LT_RE_, "&lt;"));
    -1 != a.indexOf(">") && (a = a.replace(goog.string.GT_RE_, "&gt;"));
    -1 != a.indexOf('"') && (a = a.replace(goog.string.QUOT_RE_, "&quot;"));
    -1 != a.indexOf("'") && (a = a.replace(goog.string.SINGLE_QUOTE_RE_, "&#39;"));
    -1 != a.indexOf("\x00") && (a = a.replace(goog.string.NULL_RE_, "&#0;"));
    goog.string.DETECT_DOUBLE_ESCAPING && -1 != a.indexOf("e") && (a = a.replace(goog.string.E_RE_, "&#101;"));
  }
  return a;
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(a) {
  return goog.string.contains(a, "&") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(a) : goog.string.unescapePureXmlEntities_(a) : a;
};
goog.string.unescapeEntitiesWithDocument = function(a, b) {
  return goog.string.contains(a, "&") ? goog.string.unescapeEntitiesUsingDom_(a, b) : a;
};
goog.string.unescapeEntitiesUsingDom_ = function(a, b) {
  var c = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'}, d;
  d = b ? b.createElement("div") : goog.global.document.createElement("div");
  return a.replace(goog.string.HTML_ENTITY_PATTERN_, function(a, b) {
    var g = c[a];
    if (g) {
      return g;
    }
    if ("#" == b.charAt(0)) {
      var h = Number("0" + b.substr(1));
      isNaN(h) || (g = String.fromCharCode(h));
    }
    g || (d.innerHTML = a + " ", g = d.firstChild.nodeValue.slice(0, -1));
    return c[a] = g;
  });
};
goog.string.unescapePureXmlEntities_ = function(a) {
  return a.replace(/&([^;]+);/g, function(a, c) {
    switch(c) {
      case "amp":
        return "&";
      case "lt":
        return "<";
      case "gt":
        return ">";
      case "quot":
        return '"';
      default:
        if ("#" == c.charAt(0)) {
          var d = Number("0" + c.substr(1));
          if (!isNaN(d)) {
            return String.fromCharCode(d);
          }
        }
        return a;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(a, b) {
  return goog.string.newLineToBr(a.replace(/  /g, " &#160;"), b);
};
goog.string.preserveSpaces = function(a) {
  return a.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(a, b) {
  for (var c = b.length, d = 0;d < c;d++) {
    var e = 1 == c ? b : b.charAt(d);
    if (a.charAt(0) == e && a.charAt(a.length - 1) == e) {
      return a.substring(1, a.length - 1);
    }
  }
  return a;
};
goog.string.truncate = function(a, b, c) {
  c && (a = goog.string.unescapeEntities(a));
  a.length > b && (a = a.substring(0, b - 3) + "...");
  c && (a = goog.string.htmlEscape(a));
  return a;
};
goog.string.truncateMiddle = function(a, b, c, d) {
  c && (a = goog.string.unescapeEntities(a));
  if (d && a.length > b) {
    d > b && (d = b);
    var e = a.length - d;
    a = a.substring(0, b - d) + "..." + a.substring(e);
  } else {
    a.length > b && (d = Math.floor(b / 2), e = a.length - d, a = a.substring(0, d + b % 2) + "..." + a.substring(e));
  }
  c && (a = goog.string.htmlEscape(a));
  return a;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "<":"<"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(a) {
  a = String(a);
  for (var b = ['"'], c = 0;c < a.length;c++) {
    var d = a.charAt(c), e = d.charCodeAt(0);
    b[c + 1] = goog.string.specialEscapeChars_[d] || (31 < e && 127 > e ? d : goog.string.escapeChar(d));
  }
  b.push('"');
  return b.join("");
};
goog.string.escapeString = function(a) {
  for (var b = [], c = 0;c < a.length;c++) {
    b[c] = goog.string.escapeChar(a.charAt(c));
  }
  return b.join("");
};
goog.string.escapeChar = function(a) {
  if (a in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[a];
  }
  if (a in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[a] = goog.string.specialEscapeChars_[a];
  }
  var b = a, c = a.charCodeAt(0);
  if (31 < c && 127 > c) {
    b = a;
  } else {
    if (256 > c) {
      if (b = "\\x", 16 > c || 256 < c) {
        b += "0";
      }
    } else {
      b = "\\u", 4096 > c && (b += "0");
    }
    b += c.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[a] = b;
};
goog.string.contains = function(a, b) {
  return -1 != a.indexOf(b);
};
goog.string.caseInsensitiveContains = function(a, b) {
  return goog.string.contains(a.toLowerCase(), b.toLowerCase());
};
goog.string.countOf = function(a, b) {
  return a && b ? a.split(b).length - 1 : 0;
};
goog.string.removeAt = function(a, b, c) {
  var d = a;
  0 <= b && b < a.length && 0 < c && (d = a.substr(0, b) + a.substr(b + c, a.length - b - c));
  return d;
};
goog.string.remove = function(a, b) {
  return a.replace(b, "");
};
goog.string.removeAll = function(a, b) {
  var c = new RegExp(goog.string.regExpEscape(b), "g");
  return a.replace(c, "");
};
goog.string.regExpEscape = function(a) {
  return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(a, b) {
  return a.repeat(b);
} : function(a, b) {
  return Array(b + 1).join(a);
};
goog.string.padNumber = function(a, b, c) {
  a = goog.isDef(c) ? a.toFixed(c) : String(a);
  c = a.indexOf(".");
  -1 == c && (c = a.length);
  return goog.string.repeat("0", Math.max(0, b - c)) + a;
};
goog.string.makeSafe = function(a) {
  return null == a ? "" : String(a);
};
goog.string.buildString = function(a) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(a, b) {
  for (var c = 0, d = goog.string.trim(String(a)).split("."), e = goog.string.trim(String(b)).split("."), f = Math.max(d.length, e.length), g = 0;0 == c && g < f;g++) {
    var h = d[g] || "", k = e[g] || "";
    do {
      h = /(\d*)(\D*)(.*)/.exec(h) || ["", "", "", ""];
      k = /(\d*)(\D*)(.*)/.exec(k) || ["", "", "", ""];
      if (0 == h[0].length && 0 == k[0].length) {
        break;
      }
      var c = 0 == h[1].length ? 0 : parseInt(h[1], 10), l = 0 == k[1].length ? 0 : parseInt(k[1], 10), c = goog.string.compareElements_(c, l) || goog.string.compareElements_(0 == h[2].length, 0 == k[2].length) || goog.string.compareElements_(h[2], k[2]), h = h[3], k = k[3];
    } while (0 == c);
  }
  return c;
};
goog.string.compareElements_ = function(a, b) {
  return a < b ? -1 : a > b ? 1 : 0;
};
goog.string.hashCode = function(a) {
  for (var b = 0, c = 0;c < a.length;++c) {
    b = 31 * b + a.charCodeAt(c) >>> 0;
  }
  return b;
};
goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(a) {
  var b = Number(a);
  return 0 == b && goog.string.isEmptyOrWhitespace(a) ? NaN : b;
};
goog.string.isLowerCamelCase = function(a) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(a);
};
goog.string.isUpperCamelCase = function(a) {
  return /^([A-Z][a-z]*)+$/.test(a);
};
goog.string.toCamelCase = function(a) {
  return String(a).replace(/\-([a-z])/g, function(a, c) {
    return c.toUpperCase();
  });
};
goog.string.toSelectorCase = function(a) {
  return String(a).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(a, b) {
  var c = goog.isString(b) ? goog.string.regExpEscape(b) : "\\s";
  return a.replace(new RegExp("(^" + (c ? "|[" + c + "]+" : "") + ")([a-z])", "g"), function(a, b, c) {
    return b + c.toUpperCase();
  });
};
goog.string.capitalize = function(a) {
  return String(a.charAt(0)).toUpperCase() + String(a.substr(1)).toLowerCase();
};
goog.string.parseInt = function(a) {
  isFinite(a) && (a = String(a));
  return goog.isString(a) ? /^\s*-?0x/i.test(a) ? parseInt(a, 16) : parseInt(a, 10) : NaN;
};
goog.string.splitLimit = function(a, b, c) {
  a = a.split(b);
  for (var d = [];0 < c && a.length;) {
    d.push(a.shift()), c--;
  }
  a.length && d.push(a.join(b));
  return d;
};
goog.string.lastComponent = function(a, b) {
  if (b) {
    "string" == typeof b && (b = [b]);
  } else {
    return a;
  }
  for (var c = -1, d = 0;d < b.length;d++) {
    if ("" != b[d]) {
      var e = a.lastIndexOf(b[d]);
      e > c && (c = e);
    }
  }
  return -1 == c ? a : a.slice(c + 1);
};
goog.string.editDistance = function(a, b) {
  var c = [], d = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var e = 0;e < b.length + 1;e++) {
    c[e] = e;
  }
  for (e = 0;e < a.length;e++) {
    d[0] = e + 1;
    for (var f = 0;f < b.length;f++) {
      d[f + 1] = Math.min(d[f] + 1, c[f + 1] + 1, c[f] + Number(a[e] != b[f]));
    }
    for (f = 0;f < c.length;f++) {
      c[f] = d[f];
    }
  }
  return d[b.length];
};
goog.asserts = {};
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(a, b) {
  b.unshift(a);
  goog.debug.Error.call(this, goog.string.subs.apply(null, b));
  b.shift();
  this.messagePattern = a;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(a) {
  throw a;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(a, b, c, d) {
  var e = "Assertion failed";
  if (c) {
    var e = e + (": " + c), f = d
  } else {
    a && (e += ": " + a, f = b);
  }
  a = new goog.asserts.AssertionError("" + e, f || []);
  goog.asserts.errorHandler_(a);
};
goog.asserts.setErrorHandler = function(a) {
  goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a);
};
goog.asserts.assert = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !a && goog.asserts.doAssertFailure_("", null, b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.fail = function(a, b) {
  goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (a ? ": " + a : ""), Array.prototype.slice.call(arguments, 1)));
};
goog.asserts.assertNumber = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isNumber(a) && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertString = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isString(a) && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertFunction = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isFunction(a) && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertObject = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isObject(a) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertArray = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isArray(a) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertBoolean = function(a, b, c) {
  goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(a) && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertElement = function(a, b, c) {
  !goog.asserts.ENABLE_ASSERTS || goog.isObject(a) && a.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));
  return a;
};
goog.asserts.assertInstanceof = function(a, b, c, d) {
  !goog.asserts.ENABLE_ASSERTS || a instanceof b || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(b), goog.asserts.getType_(a)], c, Array.prototype.slice.call(arguments, 3));
  return a;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var a in Object.prototype) {
    goog.asserts.fail(a + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(a) {
  return a instanceof Function ? a.displayName || a.name || "unknown type name" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? "null" : typeof a;
};
goog.array = {};
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ASSUME_NATIVE_FUNCTIONS = !1;
goog.array.peek = function(a) {
  return a[a.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.indexOf.call(a, b, c);
} : function(a, b, c) {
  c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;
  if (goog.isString(a)) {
    return goog.isString(b) && 1 == b.length ? a.indexOf(b, c) : -1;
  }
  for (;c < a.length;c++) {
    if (c in a && a[c] === b) {
      return c;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.lastIndexOf.call(a, b, null == c ? a.length - 1 : c);
} : function(a, b, c) {
  c = null == c ? a.length - 1 : c;
  0 > c && (c = Math.max(0, a.length + c));
  if (goog.isString(a)) {
    return goog.isString(b) && 1 == b.length ? a.lastIndexOf(b, c) : -1;
  }
  for (;0 <= c;c--) {
    if (c in a && a[c] === b) {
      return c;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  Array.prototype.forEach.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0;f < d;f++) {
    f in e && b.call(c, e[f], f, a);
  }
};
goog.array.forEachRight = function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, d = d - 1;0 <= d;--d) {
    d in e && b.call(c, e[d], d, a);
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.filter.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = [], f = 0, g = goog.isString(a) ? a.split("") : a, h = 0;h < d;h++) {
    if (h in g) {
      var k = g[h];
      b.call(c, k, h, a) && (e[f++] = k);
    }
  }
  return e;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.map.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = Array(d), f = goog.isString(a) ? a.split("") : a, g = 0;g < d;g++) {
    g in f && (e[g] = b.call(c, f[g], g, a));
  }
  return e;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  d && (b = goog.bind(b, d));
  return Array.prototype.reduce.call(a, b, c);
} : function(a, b, c, d) {
  var e = c;
  goog.array.forEach(a, function(c, g) {
    e = b.call(d, e, c, g, a);
  });
  return e;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  goog.asserts.assert(null != b);
  d && (b = goog.bind(b, d));
  return Array.prototype.reduceRight.call(a, b, c);
} : function(a, b, c, d) {
  var e = c;
  goog.array.forEachRight(a, function(c, g) {
    e = b.call(d, e, c, g, a);
  });
  return e;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.some.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0;f < d;f++) {
    if (f in e && b.call(c, e[f], f, a)) {
      return !0;
    }
  }
  return !1;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.every.call(a, b, c);
} : function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0;f < d;f++) {
    if (f in e && !b.call(c, e[f], f, a)) {
      return !1;
    }
  }
  return !0;
};
goog.array.count = function(a, b, c) {
  var d = 0;
  goog.array.forEach(a, function(a, f, g) {
    b.call(c, a, f, g) && ++d;
  }, c);
  return d;
};
goog.array.find = function(a, b, c) {
  b = goog.array.findIndex(a, b, c);
  return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];
};
goog.array.findIndex = function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, f = 0;f < d;f++) {
    if (f in e && b.call(c, e[f], f, a)) {
      return f;
    }
  }
  return -1;
};
goog.array.findRight = function(a, b, c) {
  b = goog.array.findIndexRight(a, b, c);
  return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];
};
goog.array.findIndexRight = function(a, b, c) {
  for (var d = a.length, e = goog.isString(a) ? a.split("") : a, d = d - 1;0 <= d;d--) {
    if (d in e && b.call(c, e[d], d, a)) {
      return d;
    }
  }
  return -1;
};
goog.array.contains = function(a, b) {
  return 0 <= goog.array.indexOf(a, b);
};
goog.array.isEmpty = function(a) {
  return 0 == a.length;
};
goog.array.clear = function(a) {
  if (!goog.isArray(a)) {
    for (var b = a.length - 1;0 <= b;b--) {
      delete a[b];
    }
  }
  a.length = 0;
};
goog.array.insert = function(a, b) {
  goog.array.contains(a, b) || a.push(b);
};
goog.array.insertAt = function(a, b, c) {
  goog.array.splice(a, c, 0, b);
};
goog.array.insertArrayAt = function(a, b, c) {
  goog.partial(goog.array.splice, a, c, 0).apply(null, b);
};
goog.array.insertBefore = function(a, b, c) {
  var d;
  2 == arguments.length || 0 > (d = goog.array.indexOf(a, c)) ? a.push(b) : goog.array.insertAt(a, b, d);
};
goog.array.remove = function(a, b) {
  var c = goog.array.indexOf(a, b), d;
  (d = 0 <= c) && goog.array.removeAt(a, c);
  return d;
};
goog.array.removeLast = function(a, b) {
  var c = goog.array.lastIndexOf(a, b);
  return 0 <= c ? (goog.array.removeAt(a, c), !0) : !1;
};
goog.array.removeAt = function(a, b) {
  goog.asserts.assert(null != a.length);
  return 1 == Array.prototype.splice.call(a, b, 1).length;
};
goog.array.removeIf = function(a, b, c) {
  b = goog.array.findIndex(a, b, c);
  return 0 <= b ? (goog.array.removeAt(a, b), !0) : !1;
};
goog.array.removeAllIf = function(a, b, c) {
  var d = 0;
  goog.array.forEachRight(a, function(e, f) {
    b.call(c, e, f, a) && goog.array.removeAt(a, f) && d++;
  });
  return d;
};
goog.array.concat = function(a) {
  return Array.prototype.concat.apply(Array.prototype, arguments);
};
goog.array.join = function(a) {
  return Array.prototype.concat.apply(Array.prototype, arguments);
};
goog.array.toArray = function(a) {
  var b = a.length;
  if (0 < b) {
    for (var c = Array(b), d = 0;d < b;d++) {
      c[d] = a[d];
    }
    return c;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(a, b) {
  for (var c = 1;c < arguments.length;c++) {
    var d = arguments[c];
    if (goog.isArrayLike(d)) {
      var e = a.length || 0, f = d.length || 0;
      a.length = e + f;
      for (var g = 0;g < f;g++) {
        a[e + g] = d[g];
      }
    } else {
      a.push(d);
    }
  }
};
goog.array.splice = function(a, b, c, d) {
  goog.asserts.assert(null != a.length);
  return Array.prototype.splice.apply(a, goog.array.slice(arguments, 1));
};
goog.array.slice = function(a, b, c) {
  goog.asserts.assert(null != a.length);
  return 2 >= arguments.length ? Array.prototype.slice.call(a, b) : Array.prototype.slice.call(a, b, c);
};
goog.array.removeDuplicates = function(a, b, c) {
  b = b || a;
  var d = function(a) {
    return goog.isObject(a) ? "o" + goog.getUid(a) : (typeof a).charAt(0) + a;
  };
  c = c || d;
  for (var d = {}, e = 0, f = 0;f < a.length;) {
    var g = a[f++], h = c(g);
    Object.prototype.hasOwnProperty.call(d, h) || (d[h] = !0, b[e++] = g);
  }
  b.length = e;
};
goog.array.binarySearch = function(a, b, c) {
  return goog.array.binarySearch_(a, c || goog.array.defaultCompare, !1, b);
};
goog.array.binarySelect = function(a, b, c) {
  return goog.array.binarySearch_(a, b, !0, void 0, c);
};
goog.array.binarySearch_ = function(a, b, c, d, e) {
  for (var f = 0, g = a.length, h;f < g;) {
    var k = f + g >> 1, l;
    l = c ? b.call(e, a[k], k, a) : b(d, a[k]);
    0 < l ? f = k + 1 : (g = k, h = !l);
  }
  return h ? f : ~f;
};
goog.array.sort = function(a, b) {
  a.sort(b || goog.array.defaultCompare);
};
goog.array.stableSort = function(a, b) {
  for (var c = Array(a.length), d = 0;d < a.length;d++) {
    c[d] = {index:d, value:a[d]};
  }
  var e = b || goog.array.defaultCompare;
  goog.array.sort(c, function(a, b) {
    return e(a.value, b.value) || a.index - b.index;
  });
  for (d = 0;d < a.length;d++) {
    a[d] = c[d].value;
  }
};
goog.array.sortByKey = function(a, b, c) {
  var d = c || goog.array.defaultCompare;
  goog.array.sort(a, function(a, c) {
    return d(b(a), b(c));
  });
};
goog.array.sortObjectsByKey = function(a, b, c) {
  goog.array.sortByKey(a, function(a) {
    return a[b];
  }, c);
};
goog.array.isSorted = function(a, b, c) {
  b = b || goog.array.defaultCompare;
  for (var d = 1;d < a.length;d++) {
    var e = b(a[d - 1], a[d]);
    if (0 < e || 0 == e && c) {
      return !1;
    }
  }
  return !0;
};
goog.array.equals = function(a, b, c) {
  if (!goog.isArrayLike(a) || !goog.isArrayLike(b) || a.length != b.length) {
    return !1;
  }
  var d = a.length;
  c = c || goog.array.defaultCompareEquality;
  for (var e = 0;e < d;e++) {
    if (!c(a[e], b[e])) {
      return !1;
    }
  }
  return !0;
};
goog.array.compare3 = function(a, b, c) {
  c = c || goog.array.defaultCompare;
  for (var d = Math.min(a.length, b.length), e = 0;e < d;e++) {
    var f = c(a[e], b[e]);
    if (0 != f) {
      return f;
    }
  }
  return goog.array.defaultCompare(a.length, b.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(a, b, c) {
  c = goog.array.binarySearch(a, b, c);
  return 0 > c ? (goog.array.insertAt(a, b, -(c + 1)), !0) : !1;
};
goog.array.binaryRemove = function(a, b, c) {
  b = goog.array.binarySearch(a, b, c);
  return 0 <= b ? goog.array.removeAt(a, b) : !1;
};
goog.array.bucket = function(a, b, c) {
  for (var d = {}, e = 0;e < a.length;e++) {
    var f = a[e], g = b.call(c, f, e, a);
    goog.isDef(g) && (d[g] || (d[g] = [])).push(f);
  }
  return d;
};
goog.array.toObject = function(a, b, c) {
  var d = {};
  goog.array.forEach(a, function(e, f) {
    d[b.call(c, e, f, a)] = e;
  });
  return d;
};
goog.array.range = function(a, b, c) {
  var d = [], e = 0, f = a;
  c = c || 1;
  void 0 !== b && (e = a, f = b);
  if (0 > c * (f - e)) {
    return [];
  }
  if (0 < c) {
    for (a = e;a < f;a += c) {
      d.push(a);
    }
  } else {
    for (a = e;a > f;a += c) {
      d.push(a);
    }
  }
  return d;
};
goog.array.repeat = function(a, b) {
  for (var c = [], d = 0;d < b;d++) {
    c[d] = a;
  }
  return c;
};
goog.array.flatten = function(a) {
  for (var b = [], c = 0;c < arguments.length;c++) {
    var d = arguments[c];
    if (goog.isArray(d)) {
      for (var e = 0;e < d.length;e += 8192) {
        for (var f = goog.array.slice(d, e, e + 8192), f = goog.array.flatten.apply(null, f), g = 0;g < f.length;g++) {
          b.push(f[g]);
        }
      }
    } else {
      b.push(d);
    }
  }
  return b;
};
goog.array.rotate = function(a, b) {
  goog.asserts.assert(null != a.length);
  a.length && (b %= a.length, 0 < b ? Array.prototype.unshift.apply(a, a.splice(-b, b)) : 0 > b && Array.prototype.push.apply(a, a.splice(0, -b)));
  return a;
};
goog.array.moveItem = function(a, b, c) {
  goog.asserts.assert(0 <= b && b < a.length);
  goog.asserts.assert(0 <= c && c < a.length);
  b = Array.prototype.splice.call(a, b, 1);
  Array.prototype.splice.call(a, c, 0, b[0]);
};
goog.array.zip = function(a) {
  if (!arguments.length) {
    return [];
  }
  for (var b = [], c = arguments[0].length, d = 1;d < arguments.length;d++) {
    arguments[d].length < c && (c = arguments[d].length);
  }
  for (d = 0;d < c;d++) {
    for (var e = [], f = 0;f < arguments.length;f++) {
      e.push(arguments[f][d]);
    }
    b.push(e);
  }
  return b;
};
goog.array.shuffle = function(a, b) {
  for (var c = b || Math.random, d = a.length - 1;0 < d;d--) {
    var e = Math.floor(c() * (d + 1)), f = a[d];
    a[d] = a[e];
    a[e] = f;
  }
};
goog.array.copyByIndex = function(a, b) {
  var c = [];
  goog.array.forEach(b, function(b) {
    c.push(a[b]);
  });
  return c;
};
goog.array.concatMap = function(a, b, c) {
  return goog.array.concat.apply([], goog.array.map(a, b, c));
};
wd.core.stats.StatsCollection = function() {
  this.counters_ = {};
};
wd.core.stats.StatsCollection.prototype.incrementCounter = function(a, b) {
  goog.isDef(b) || (b = 1);
  wd.util.obj.contains(this.counters_, a) || (this.counters_[a] = 0);
  this.counters_[a] += b;
};
wd.core.stats.StatsCollection.prototype.get = function() {
  return goog.object.clone(this.counters_);
};
wd.core.stats.StatsManager = {};
wd.core.stats.StatsManager.collections_ = {};
wd.core.stats.StatsManager.reporters_ = {};
wd.core.stats.StatsManager.getCollection = function(a) {
  a = a.toString();
  wd.core.stats.StatsManager.collections_[a] || (wd.core.stats.StatsManager.collections_[a] = new wd.core.stats.StatsCollection);
  return wd.core.stats.StatsManager.collections_[a];
};
wd.core.stats.StatsManager.getOrCreateReporter = function(a, b) {
  var c = a.toString();
  wd.core.stats.StatsManager.reporters_[c] || (wd.core.stats.StatsManager.reporters_[c] = b());
  return wd.core.stats.StatsManager.reporters_[c];
};
wd.Comparator;
wd.core.util.SortedMap = function(a, b) {
  this.comparator_ = a;
  this.root_ = b ? b : wd.core.util.SortedMap.EMPTY_NODE_;
};
wd.core.util.SortedMap.prototype.insert = function(a, b) {
  return new wd.core.util.SortedMap(this.comparator_, this.root_.insert(a, b, this.comparator_).copy(null, null, wd.LLRBNode.BLACK, null, null));
};
wd.core.util.SortedMap.prototype.remove = function(a) {
  return new wd.core.util.SortedMap(this.comparator_, this.root_.remove(a, this.comparator_).copy(null, null, wd.LLRBNode.BLACK, null, null));
};
wd.core.util.SortedMap.prototype.get = function(a) {
  for (var b, c = this.root_;!c.isEmpty();) {
    b = this.comparator_(a, c.key);
    if (0 === b) {
      return c.value;
    }
    0 > b ? c = c.left : 0 < b && (c = c.right);
  }
  return null;
};
wd.core.util.SortedMap.prototype.getPredecessorKey = function(a) {
  for (var b, c = this.root_, d = null;!c.isEmpty();) {
    b = this.comparator_(a, c.key);
    if (0 === b) {
      if (c.left.isEmpty()) {
        return d ? d.key : null;
      }
      for (c = c.left;!c.right.isEmpty();) {
        c = c.right;
      }
      return c.key;
    }
    0 > b ? c = c.left : 0 < b && (d = c, c = c.right);
  }
  throw Error("Attempted to find predecessor key for a nonexistent key.  What gives?");
};
wd.core.util.SortedMap.prototype.isEmpty = function() {
  return this.root_.isEmpty();
};
wd.core.util.SortedMap.prototype.count = function() {
  return this.root_.count();
};
wd.core.util.SortedMap.prototype.minKey = function() {
  return this.root_.minKey();
};
wd.core.util.SortedMap.prototype.maxKey = function() {
  return this.root_.maxKey();
};
wd.core.util.SortedMap.prototype.inorderTraversal = function(a) {
  return this.root_.inorderTraversal(a);
};
wd.core.util.SortedMap.prototype.reverseTraversal = function(a) {
  return this.root_.reverseTraversal(a);
};
wd.core.util.SortedMap.prototype.getIterator = function(a) {
  return new wd.core.util.SortedMapIterator(this.root_, null, this.comparator_, !1, a);
};
wd.core.util.SortedMap.prototype.getIteratorFrom = function(a, b) {
  return new wd.core.util.SortedMapIterator(this.root_, a, this.comparator_, !1, b);
};
wd.core.util.SortedMap.prototype.getReverseIteratorFrom = function(a, b) {
  return new wd.core.util.SortedMapIterator(this.root_, a, this.comparator_, !0, b);
};
wd.core.util.SortedMap.prototype.getReverseIterator = function(a) {
  return new wd.core.util.SortedMapIterator(this.root_, null, this.comparator_, !0, a);
};
wd.core.util.SortedMapIterator = function(a, b, c, d, e) {
  this.resultGenerator_ = e || null;
  this.isReverse_ = d;
  this.nodeStack_ = [];
  for (e = 1;!a.isEmpty();) {
    if (e = b ? c(a.key, b) : 1, d && (e *= -1), 0 > e) {
      a = this.isReverse_ ? a.left : a.right;
    } else {
      if (0 === e) {
        this.nodeStack_.push(a);
        break;
      } else {
        this.nodeStack_.push(a), a = this.isReverse_ ? a.right : a.left;
      }
    }
  }
};
wd.core.util.SortedMapIterator.prototype.getNext = function() {
  if (0 === this.nodeStack_.length) {
    return null;
  }
  var a = this.nodeStack_.pop(), b;
  b = this.resultGenerator_ ? this.resultGenerator_(a.key, a.value) : {key:a.key, value:a.value};
  if (this.isReverse_) {
    for (a = a.left;!a.isEmpty();) {
      this.nodeStack_.push(a), a = a.right;
    }
  } else {
    for (a = a.right;!a.isEmpty();) {
      this.nodeStack_.push(a), a = a.left;
    }
  }
  return b;
};
wd.core.util.SortedMapIterator.prototype.hasNext = function() {
  return 0 < this.nodeStack_.length;
};
wd.core.util.SortedMapIterator.prototype.peek = function() {
  if (0 === this.nodeStack_.length) {
    return null;
  }
  var a = goog.array.peek(this.nodeStack_);
  return this.resultGenerator_ ? this.resultGenerator_(a.key, a.value) : {key:a.key, value:a.value};
};
wd.LLRBNode = function(a, b, c, d, e) {
  this.key = a;
  this.value = b;
  this.color = null != c ? c : wd.LLRBNode.RED;
  this.left = null != d ? d : wd.core.util.SortedMap.EMPTY_NODE_;
  this.right = null != e ? e : wd.core.util.SortedMap.EMPTY_NODE_;
};
wd.LLRBNode.RED = !0;
wd.LLRBNode.BLACK = !1;
wd.LLRBNode.prototype.copy = function(a, b, c, d, e) {
  return new wd.LLRBNode(null != a ? a : this.key, null != b ? b : this.value, null != c ? c : this.color, null != d ? d : this.left, null != e ? e : this.right);
};
wd.LLRBNode.prototype.count = function() {
  return this.left.count() + 1 + this.right.count();
};
wd.LLRBNode.prototype.isEmpty = function() {
  return !1;
};
wd.LLRBNode.prototype.inorderTraversal = function(a) {
  return this.left.inorderTraversal(a) || a(this.key, this.value) || this.right.inorderTraversal(a);
};
wd.LLRBNode.prototype.reverseTraversal = function(a) {
  return this.right.reverseTraversal(a) || a(this.key, this.value) || this.left.reverseTraversal(a);
};
wd.LLRBNode.prototype.min_ = function() {
  return this.left.isEmpty() ? this : this.left.min_();
};
wd.LLRBNode.prototype.minKey = function() {
  return this.min_().key;
};
wd.LLRBNode.prototype.maxKey = function() {
  return this.right.isEmpty() ? this.key : this.right.maxKey();
};
wd.LLRBNode.prototype.insert = function(a, b, c) {
  var d, e;
  e = this;
  d = c(a, e.key);
  e = 0 > d ? e.copy(null, null, null, e.left.insert(a, b, c), null) : 0 === d ? e.copy(null, b, null, null, null) : e.copy(null, null, null, null, e.right.insert(a, b, c));
  return e.fixUp_();
};
wd.LLRBNode.prototype.removeMin_ = function() {
  var a;
  if (this.left.isEmpty()) {
    return wd.core.util.SortedMap.EMPTY_NODE_;
  }
  a = this;
  a.left.isRed_() || a.left.left.isRed_() || (a = a.moveRedLeft_());
  a = a.copy(null, null, null, a.left.removeMin_(), null);
  return a.fixUp_();
};
wd.LLRBNode.prototype.remove = function(a, b) {
  var c, d;
  c = this;
  if (0 > b(a, c.key)) {
    c.left.isEmpty() || c.left.isRed_() || c.left.left.isRed_() || (c = c.moveRedLeft_()), c = c.copy(null, null, null, c.left.remove(a, b), null);
  } else {
    c.left.isRed_() && (c = c.rotateRight_());
    c.right.isEmpty() || c.right.isRed_() || c.right.left.isRed_() || (c = c.moveRedRight_());
    if (0 === b(a, c.key)) {
      if (c.right.isEmpty()) {
        return wd.core.util.SortedMap.EMPTY_NODE_;
      }
      d = c.right.min_();
      c = c.copy(d.key, d.value, null, null, c.right.removeMin_());
    }
    c = c.copy(null, null, null, null, c.right.remove(a, b));
  }
  return c.fixUp_();
};
wd.LLRBNode.prototype.isRed_ = function() {
  return this.color;
};
wd.LLRBNode.prototype.fixUp_ = function() {
  var a = this;
  a.right.isRed_() && !a.left.isRed_() && (a = a.rotateLeft_());
  a.left.isRed_() && a.left.left.isRed_() && (a = a.rotateRight_());
  a.left.isRed_() && a.right.isRed_() && (a = a.colorFlip_());
  return a;
};
wd.LLRBNode.prototype.moveRedLeft_ = function() {
  var a = this.colorFlip_();
  a.right.left.isRed_() && (a = a.copy(null, null, null, null, a.right.rotateRight_()), a = a.rotateLeft_(), a = a.colorFlip_());
  return a;
};
wd.LLRBNode.prototype.moveRedRight_ = function() {
  var a = this.colorFlip_();
  a.left.left.isRed_() && (a = a.rotateRight_(), a = a.colorFlip_());
  return a;
};
wd.LLRBNode.prototype.rotateLeft_ = function() {
  var a;
  a = this.copy(null, null, wd.LLRBNode.RED, null, this.right.left);
  return this.right.copy(null, null, this.color, a, null);
};
wd.LLRBNode.prototype.rotateRight_ = function() {
  var a;
  a = this.copy(null, null, wd.LLRBNode.RED, this.left.right, null);
  return this.left.copy(null, null, this.color, null, a);
};
wd.LLRBNode.prototype.colorFlip_ = function() {
  var a, b;
  a = this.left.copy(null, null, !this.left.color, null, null);
  b = this.right.copy(null, null, !this.right.color, null, null);
  return this.copy(null, null, !this.color, a, b);
};
wd.LLRBNode.prototype.checkMaxDepth_ = function() {
  var a;
  a = this.check_();
  return Math.pow(2, a) <= this.count() + 1 ? !0 : !1;
};
wd.LLRBNode.prototype.check_ = function() {
  var a;
  if (this.isRed_() && this.left.isRed_()) {
    throw Error("Red node has red child(" + this.key + "," + this.value + ")");
  }
  if (this.right.isRed_()) {
    throw Error("Right child of (" + this.key + "," + this.value + ") is red");
  }
  a = this.left.check_();
  if (a !== this.right.check_()) {
    throw Error("Black depths differ");
  }
  return a + (this.isRed_() ? 0 : 1);
};
wd.LLRBEmptyNode = function() {
};
wd.LLRBEmptyNode.prototype.copy = function() {
  return this;
};
wd.LLRBEmptyNode.prototype.insert = function(a, b, c) {
  return new wd.LLRBNode(a, b, null);
};
wd.LLRBEmptyNode.prototype.remove = function(a, b) {
  return this;
};
wd.LLRBEmptyNode.prototype.count = function() {
  return 0;
};
wd.LLRBEmptyNode.prototype.isEmpty = function() {
  return !0;
};
wd.LLRBEmptyNode.prototype.inorderTraversal = function(a) {
  return !1;
};
wd.LLRBEmptyNode.prototype.reverseTraversal = function(a) {
  return !1;
};
wd.LLRBEmptyNode.prototype.minKey = function() {
  return null;
};
wd.LLRBEmptyNode.prototype.maxKey = function() {
  return null;
};
wd.LLRBEmptyNode.prototype.check_ = function() {
  return 0;
};
wd.LLRBEmptyNode.prototype.isRed_ = function() {
  return !1;
};
wd.core.util.SortedMap.EMPTY_NODE_ = new wd.LLRBEmptyNode;
goog.async.WorkQueue = function() {
  this.workTail_ = this.workHead_ = null;
};
goog.async.WorkQueue.DEFAULT_MAX_UNUSED = 100;
goog.async.WorkQueue.freelist_ = new goog.async.FreeList(function() {
  return new goog.async.WorkItem;
}, function(a) {
  a.reset();
}, goog.async.WorkQueue.DEFAULT_MAX_UNUSED);
goog.async.WorkQueue.prototype.add = function(a, b) {
  var c = this.getUnusedItem_();
  c.set(a, b);
  this.workTail_ ? this.workTail_.next = c : (goog.asserts.assert(!this.workHead_), this.workHead_ = c);
  this.workTail_ = c;
};
goog.async.WorkQueue.prototype.remove = function() {
  var a = null;
  this.workHead_ && (a = this.workHead_, this.workHead_ = this.workHead_.next, this.workHead_ || (this.workTail_ = null), a.next = null);
  return a;
};
goog.async.WorkQueue.prototype.returnUnused = function(a) {
  goog.async.WorkQueue.freelist_.put(a);
};
goog.async.WorkQueue.prototype.getUnusedItem_ = function() {
  return goog.async.WorkQueue.freelist_.get();
};
goog.async.WorkItem = function() {
  this.next = this.scope = this.fn = null;
};
goog.async.WorkItem.prototype.set = function(a, b) {
  this.fn = a;
  this.scope = b;
  this.next = null;
};
goog.async.WorkItem.prototype.reset = function() {
  this.next = this.scope = this.fn = null;
};
goog.crypt.stringToByteArray = function(a) {
  for (var b = [], c = 0, d = 0;d < a.length;d++) {
    for (var e = a.charCodeAt(d);255 < e;) {
      b[c++] = e & 255, e >>= 8;
    }
    b[c++] = e;
  }
  return b;
};
goog.crypt.byteArrayToString = function(a) {
  if (8192 >= a.length) {
    return String.fromCharCode.apply(null, a);
  }
  for (var b = "", c = 0;c < a.length;c += 8192) {
    var d = goog.array.slice(a, c, c + 8192), b = b + String.fromCharCode.apply(null, d)
  }
  return b;
};
goog.crypt.byteArrayToHex = function(a) {
  return goog.array.map(a, function(a) {
    a = a.toString(16);
    return 1 < a.length ? a : "0" + a;
  }).join("");
};
goog.crypt.hexToByteArray = function(a) {
  goog.asserts.assert(0 == a.length % 2, "Key string length must be multiple of 2");
  for (var b = [], c = 0;c < a.length;c += 2) {
    b.push(parseInt(a.substring(c, c + 2), 16));
  }
  return b;
};
goog.crypt.stringToUtf8ByteArray = function(a) {
  for (var b = [], c = 0, d = 0;d < a.length;d++) {
    var e = a.charCodeAt(d);
    128 > e ? b[c++] = e : (2048 > e ? b[c++] = e >> 6 | 192 : (55296 == (e & 64512) && d + 1 < a.length && 56320 == (a.charCodeAt(d + 1) & 64512) ? (e = 65536 + ((e & 1023) << 10) + (a.charCodeAt(++d) & 1023), b[c++] = e >> 18 | 240, b[c++] = e >> 12 & 63 | 128) : b[c++] = e >> 12 | 224, b[c++] = e >> 6 & 63 | 128), b[c++] = e & 63 | 128);
  }
  return b;
};
goog.crypt.utf8ByteArrayToString = function(a) {
  for (var b = [], c = 0, d = 0;c < a.length;) {
    var e = a[c++];
    if (128 > e) {
      b[d++] = String.fromCharCode(e);
    } else {
      if (191 < e && 224 > e) {
        var f = a[c++];
        b[d++] = String.fromCharCode((e & 31) << 6 | f & 63);
      } else {
        if (239 < e && 365 > e) {
          var f = a[c++], g = a[c++], h = a[c++], e = ((e & 7) << 18 | (f & 63) << 12 | (g & 63) << 6 | h & 63) - 65536;
          b[d++] = String.fromCharCode(55296 + (e >> 10));
          b[d++] = String.fromCharCode(56320 + (e & 1023));
        } else {
          f = a[c++], g = a[c++], b[d++] = String.fromCharCode((e & 15) << 12 | (f & 63) << 6 | g & 63);
        }
      }
    }
  }
  return b.join("");
};
goog.crypt.xorByteArray = function(a, b) {
  goog.asserts.assert(a.length == b.length, "XOR array lengths must match");
  for (var c = [], d = 0;d < a.length;d++) {
    c.push(a[d] ^ b[d]);
  }
  return c;
};
goog.debug.entryPointRegistry = {};
goog.debug.EntryPointMonitor = function() {
};
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = !1;
goog.debug.entryPointRegistry.register = function(a) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = a;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    for (var b = goog.debug.entryPointRegistry.monitors_, c = 0;c < b.length;c++) {
      a(goog.bind(b[c].wrap, b[c]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(a) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = !0;
  for (var b = goog.bind(a.wrap, a), c = 0;c < goog.debug.entryPointRegistry.refList_.length;c++) {
    goog.debug.entryPointRegistry.refList_[c](b);
  }
  goog.debug.entryPointRegistry.monitors_.push(a);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(a) {
  var b = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(a == b[b.length - 1], "Only the most recent monitor can be unwrapped.");
  a = goog.bind(a.unwrap, a);
  for (var c = 0;c < goog.debug.entryPointRegistry.refList_.length;c++) {
    goog.debug.entryPointRegistry.refList_[c](a);
  }
  b.length--;
};
goog.labs = {};
goog.labs.userAgent = {};
goog.labs.userAgent.util = {};
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var a = goog.labs.userAgent.util.getNavigator_();
  return a && (a = a.userAgent) ? a : "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(a) {
  goog.labs.userAgent.util.userAgent_ = a || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(a) {
  var b = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(b, a);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(a) {
  var b = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(b, a);
};
goog.labs.userAgent.util.extractVersionTuples = function(a) {
  for (var b = RegExp("(\\w[\\w ]+)/([^\\s]+)\\s*(?:\\((.*?)\\))?", "g"), c = [], d;d = b.exec(a);) {
    c.push([d[1], d[2], d[3] || void 0]);
  }
  return c;
};
goog.labs.userAgent.browser = {};
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  function a(a) {
    a = goog.array.find(a, d);
    return c[a] || "";
  }
  var b = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(b);
  }
  var b = goog.labs.userAgent.util.extractVersionTuples(b), c = {};
  goog.array.forEach(b, function(a) {
    c[a[0]] = a[1];
  });
  var d = goog.partial(goog.object.containsKey, c);
  return goog.labs.userAgent.browser.isOpera() ? a(["Version", "Opera"]) : goog.labs.userAgent.browser.isEdge() ? a(["Edge"]) : goog.labs.userAgent.browser.isChrome() ? a(["Chrome", "CriOS"]) : (b = b[2]) && b[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(a) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), a);
};
goog.labs.userAgent.browser.getIEVersion_ = function(a) {
  var b = /rv: *([\d\.]*)/.exec(a);
  if (b && b[1]) {
    return b[1];
  }
  var b = "", c = /MSIE +([\d\.]+)/.exec(a);
  if (c && c[1]) {
    if (a = /Trident\/(\d.\d)/.exec(a), "7.0" == c[1]) {
      if (a && a[1]) {
        switch(a[1]) {
          case "4.0":
            b = "8.0";
            break;
          case "5.0":
            b = "9.0";
            break;
          case "6.0":
            b = "10.0";
            break;
          case "7.0":
            b = "11.0";
        }
      } else {
        b = "7.0";
      }
    } else {
      b = c[1];
    }
  }
  return b;
};
goog.labs.userAgent.engine = {};
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var a = goog.labs.userAgent.util.getUserAgent();
  if (a) {
    var a = goog.labs.userAgent.util.extractVersionTuples(a), b = goog.labs.userAgent.engine.getEngineTuple_(a);
    if (b) {
      return "Gecko" == b[0] ? goog.labs.userAgent.engine.getVersionForKey_(a, "Firefox") : b[1];
    }
    var a = a[0], c;
    if (a && (c = a[2]) && (c = /Trident\/([^\s;]+)/.exec(c))) {
      return c[1];
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(a) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return a[1];
  }
  for (var b = 0;b < a.length;b++) {
    var c = a[b];
    if ("Edge" == c[0]) {
      return c;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(a) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), a);
};
goog.labs.userAgent.engine.getVersionForKey_ = function(a, b) {
  var c = goog.array.find(a, function(a) {
    return b == a[0];
  });
  return c && c[1] || "";
};
goog.async.throwException = function(a) {
  goog.global.setTimeout(function() {
    throw a;
  }, 0);
};
goog.async.nextTick = function(a, b, c) {
  var d = a;
  b && (d = goog.bind(a, b));
  d = goog.async.nextTick.wrapCallback_(d);
  goog.isFunction(goog.global.setImmediate) && (c || goog.async.nextTick.useSetImmediate_()) ? goog.global.setImmediate(d) : (goog.async.nextTick.setImmediate_ || (goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_()), goog.async.nextTick.setImmediate_(d));
};
goog.async.nextTick.useSetImmediate_ = function() {
  return goog.global.Window && goog.global.Window.prototype && !goog.labs.userAgent.browser.isEdge() && goog.global.Window.prototype.setImmediate == goog.global.setImmediate ? !1 : !0;
};
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var a = goog.global.MessageChannel;
  "undefined" === typeof a && "undefined" !== typeof window && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto() && (a = function() {
    var a = document.createElement(String(goog.dom.TagName.IFRAME));
    a.style.display = "none";
    a.src = "";
    document.documentElement.appendChild(a);
    var b = a.contentWindow, a = b.document;
    a.open();
    a.write("");
    a.close();
    var c = "callImmediate" + Math.random(), d = "file:" == b.location.protocol ? "*" : b.location.protocol + "//" + b.location.host, a = goog.bind(function(a) {
      if (("*" == d || a.origin == d) && a.data == c) {
        this.port1.onmessage();
      }
    }, this);
    b.addEventListener("message", a, !1);
    this.port1 = {};
    this.port2 = {postMessage:function() {
      b.postMessage(c, d);
    }};
  });
  if ("undefined" !== typeof a && !goog.labs.userAgent.browser.isIE()) {
    var b = new a, c = {}, d = c;
    b.port1.onmessage = function() {
      if (goog.isDef(c.next)) {
        c = c.next;
        var a = c.cb;
        c.cb = null;
        a();
      }
    };
    return function(a) {
      d.next = {cb:a};
      d = d.next;
      b.port2.postMessage(0);
    };
  }
  return "undefined" !== typeof document && "onreadystatechange" in document.createElement(String(goog.dom.TagName.SCRIPT)) ? function(a) {
    var b = document.createElement(String(goog.dom.TagName.SCRIPT));
    b.onreadystatechange = function() {
      b.onreadystatechange = null;
      b.parentNode.removeChild(b);
      b = null;
      a();
      a = null;
    };
    document.documentElement.appendChild(b);
  } : function(a) {
    goog.global.setTimeout(a, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(a) {
  goog.async.nextTick.wrapCallback_ = a;
});
goog.async.run = function(a, b) {
  goog.async.run.schedule_ || goog.async.run.initializeRunner_();
  goog.async.run.workQueueScheduled_ || (goog.async.run.schedule_(), goog.async.run.workQueueScheduled_ = !0);
  goog.async.run.workQueue_.add(a, b);
};
goog.async.run.initializeRunner_ = function() {
  var a = goog.global.Promise;
  if (-1 != String(a).indexOf("[native code]")) {
    var b = a.resolve(void 0);
    goog.async.run.schedule_ = function() {
      b.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function(a) {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
    a && a(goog.async.run.processWorkQueue);
  };
};
goog.async.run.workQueueScheduled_ = !1;
goog.async.run.workQueue_ = new goog.async.WorkQueue;
goog.DEBUG && (goog.async.run.resetQueue = function() {
  goog.async.run.workQueueScheduled_ = !1;
  goog.async.run.workQueue_ = new goog.async.WorkQueue;
});
goog.async.run.processWorkQueue = function() {
  for (var a = null;a = goog.async.run.workQueue_.remove();) {
    try {
      a.fn.call(a.scope);
    } catch (b) {
      goog.async.throwException(b);
    }
    goog.async.run.workQueue_.returnUnused(a);
  }
  goog.async.run.workQueueScheduled_ = !1;
};
goog.Promise = function(a, b) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = void 0;
  this.callbackEntriesTail_ = this.callbackEntries_ = this.parent_ = null;
  this.executing_ = !1;
  0 < goog.Promise.UNHANDLED_REJECTION_DELAY ? this.unhandledRejectionId_ = 0 : 0 == goog.Promise.UNHANDLED_REJECTION_DELAY && (this.hadUnhandledRejection_ = !1);
  goog.Promise.LONG_STACK_TRACES && (this.stack_ = [], this.addStackTrace_(Error("created")), this.currentStep_ = 0);
  if (a != goog.nullFunction) {
    try {
      var c = this;
      a.call(b, function(a) {
        c.resolve_(goog.Promise.State_.FULFILLED, a);
      }, function(a) {
        if (goog.DEBUG && !(a instanceof goog.Promise.CancellationError)) {
          try {
            if (a instanceof Error) {
              throw a;
            }
            throw Error("Promise rejected.");
          } catch (b) {
          }
        }
        c.resolve_(goog.Promise.State_.REJECTED, a);
      });
    } catch (d) {
      this.resolve_(goog.Promise.State_.REJECTED, d);
    }
  }
};
goog.Promise.LONG_STACK_TRACES = !1;
goog.Promise.UNHANDLED_REJECTION_DELAY = 0;
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_ = function() {
  this.next = this.context = this.onRejected = this.onFulfilled = this.child = null;
  this.always = !1;
};
goog.Promise.CallbackEntry_.prototype.reset = function() {
  this.context = this.onRejected = this.onFulfilled = this.child = null;
  this.always = !1;
};
goog.Promise.DEFAULT_MAX_UNUSED = 100;
goog.Promise.freelist_ = new goog.async.FreeList(function() {
  return new goog.Promise.CallbackEntry_;
}, function(a) {
  a.reset();
}, goog.Promise.DEFAULT_MAX_UNUSED);
goog.Promise.getCallbackEntry_ = function(a, b, c) {
  var d = goog.Promise.freelist_.get();
  d.onFulfilled = a;
  d.onRejected = b;
  d.context = c;
  return d;
};
goog.Promise.returnEntry_ = function(a) {
  goog.Promise.freelist_.put(a);
};
goog.Promise.resolve = function(a) {
  if (a instanceof goog.Promise) {
    return a;
  }
  var b = new goog.Promise(goog.nullFunction);
  b.resolve_(goog.Promise.State_.FULFILLED, a);
  return b;
};
goog.Promise.reject = function(a) {
  return new goog.Promise(function(b, c) {
    c(a);
  });
};
goog.Promise.resolveThen_ = function(a, b, c) {
  goog.Promise.maybeThen_(a, b, c, null) || goog.async.run(goog.partial(b, a));
};
goog.Promise.race = function(a) {
  return new goog.Promise(function(b, c) {
    a.length || b(void 0);
    for (var d = 0, e;d < a.length;d++) {
      e = a[d], goog.Promise.resolveThen_(e, b, c);
    }
  });
};
goog.Promise.all = function(a) {
  return new goog.Promise(function(b, c) {
    var d = a.length, e = [];
    if (d) {
      for (var f = function(a, c) {
        d--;
        e[a] = c;
        0 == d && b(e);
      }, g = function(a) {
        c(a);
      }, h = 0, k;h < a.length;h++) {
        k = a[h], goog.Promise.resolveThen_(k, goog.partial(f, h), g);
      }
    } else {
      b(e);
    }
  });
};
goog.Promise.allSettled = function(a) {
  return new goog.Promise(function(b, c) {
    var d = a.length, e = [];
    if (d) {
      for (var f = function(a, c, f) {
        d--;
        e[a] = c ? {fulfilled:!0, value:f} : {fulfilled:!1, reason:f};
        0 == d && b(e);
      }, g = 0, h;g < a.length;g++) {
        h = a[g], goog.Promise.resolveThen_(h, goog.partial(f, g, !0), goog.partial(f, g, !1));
      }
    } else {
      b(e);
    }
  });
};
goog.Promise.firstFulfilled = function(a) {
  return new goog.Promise(function(b, c) {
    var d = a.length, e = [];
    if (d) {
      for (var f = function(a) {
        b(a);
      }, g = function(a, b) {
        d--;
        e[a] = b;
        0 == d && c(e);
      }, h = 0, k;h < a.length;h++) {
        k = a[h], goog.Promise.resolveThen_(k, f, goog.partial(g, h));
      }
    } else {
      b(void 0);
    }
  });
};
goog.Promise.withResolver = function() {
  var a, b, c = new goog.Promise(function(c, e) {
    a = c;
    b = e;
  });
  return new goog.Promise.Resolver_(c, a, b);
};
goog.Promise.prototype.then = function(a, b, c) {
  null != a && goog.asserts.assertFunction(a, "opt_onFulfilled should be a function.");
  null != b && goog.asserts.assertFunction(b, "opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?");
  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error("then"));
  return this.addChildPromise_(goog.isFunction(a) ? a : null, goog.isFunction(b) ? b : null, c);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenVoid = function(a, b, c) {
  null != a && goog.asserts.assertFunction(a, "opt_onFulfilled should be a function.");
  null != b && goog.asserts.assertFunction(b, "opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?");
  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error("then"));
  this.addCallbackEntry_(goog.Promise.getCallbackEntry_(a || goog.nullFunction, b || null, c));
};
goog.Promise.prototype.thenAlways = function(a, b) {
  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error("thenAlways"));
  var c = goog.Promise.getCallbackEntry_(a, a, b);
  c.always = !0;
  this.addCallbackEntry_(c);
  return this;
};
goog.Promise.prototype.thenCatch = function(a, b) {
  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error("thenCatch"));
  return this.addChildPromise_(null, a, b);
};
goog.Promise.prototype.cancel = function(a) {
  this.state_ == goog.Promise.State_.PENDING && goog.async.run(function() {
    var b = new goog.Promise.CancellationError(a);
    this.cancelInternal_(b);
  }, this);
};
goog.Promise.prototype.cancelInternal_ = function(a) {
  this.state_ == goog.Promise.State_.PENDING && (this.parent_ ? (this.parent_.cancelChild_(this, a), this.parent_ = null) : this.resolve_(goog.Promise.State_.REJECTED, a));
};
goog.Promise.prototype.cancelChild_ = function(a, b) {
  if (this.callbackEntries_) {
    for (var c = 0, d = null, e = null, f = this.callbackEntries_;f && (f.always || (c++, f.child == a && (d = f), !(d && 1 < c)));f = f.next) {
      d || (e = f);
    }
    d && (this.state_ == goog.Promise.State_.PENDING && 1 == c ? this.cancelInternal_(b) : (e ? this.removeEntryAfter_(e) : this.popEntry_(), this.executeCallback_(d, goog.Promise.State_.REJECTED, b)));
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(a) {
  this.hasEntry_() || this.state_ != goog.Promise.State_.FULFILLED && this.state_ != goog.Promise.State_.REJECTED || this.scheduleCallbacks_();
  this.queueEntry_(a);
};
goog.Promise.prototype.addChildPromise_ = function(a, b, c) {
  var d = goog.Promise.getCallbackEntry_(null, null, null);
  d.child = new goog.Promise(function(e, f) {
    d.onFulfilled = a ? function(b) {
      try {
        var d = a.call(c, b);
        e(d);
      } catch (k) {
        f(k);
      }
    } : e;
    d.onRejected = b ? function(a) {
      try {
        var d = b.call(c, a);
        !goog.isDef(d) && a instanceof goog.Promise.CancellationError ? f(a) : e(d);
      } catch (k) {
        f(k);
      }
    } : f;
  });
  d.child.parent_ = this;
  this.addCallbackEntry_(d);
  return d.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(a) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, a);
};
goog.Promise.prototype.unblockAndReject_ = function(a) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, a);
};
goog.Promise.prototype.resolve_ = function(a, b) {
  this.state_ == goog.Promise.State_.PENDING && (this === b && (a = goog.Promise.State_.REJECTED, b = new TypeError("Promise cannot resolve to itself")), this.state_ = goog.Promise.State_.BLOCKED, goog.Promise.maybeThen_(b, this.unblockAndFulfill_, this.unblockAndReject_, this) || (this.result_ = b, this.state_ = a, this.parent_ = null, this.scheduleCallbacks_(), a != goog.Promise.State_.REJECTED || b instanceof goog.Promise.CancellationError || goog.Promise.addUnhandledRejection_(this, b)));
};
goog.Promise.maybeThen_ = function(a, b, c, d) {
  if (a instanceof goog.Promise) {
    return a.thenVoid(b, c, d), !0;
  }
  if (goog.Thenable.isImplementedBy(a)) {
    return a.then(b, c, d), !0;
  }
  if (goog.isObject(a)) {
    try {
      var e = a.then;
      if (goog.isFunction(e)) {
        return goog.Promise.tryThen_(a, e, b, c, d), !0;
      }
    } catch (f) {
      return c.call(d, f), !0;
    }
  }
  return !1;
};
goog.Promise.tryThen_ = function(a, b, c, d, e) {
  var f = !1, g = function(a) {
    f || (f = !0, c.call(e, a));
  }, h = function(a) {
    f || (f = !0, d.call(e, a));
  };
  try {
    b.call(a, g, h);
  } catch (k) {
    h(k);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  this.executing_ || (this.executing_ = !0, goog.async.run(this.executeCallbacks_, this));
};
goog.Promise.prototype.hasEntry_ = function() {
  return !!this.callbackEntries_;
};
goog.Promise.prototype.queueEntry_ = function(a) {
  goog.asserts.assert(null != a.onFulfilled);
  this.callbackEntriesTail_ ? this.callbackEntriesTail_.next = a : this.callbackEntries_ = a;
  this.callbackEntriesTail_ = a;
};
goog.Promise.prototype.popEntry_ = function() {
  var a = null;
  this.callbackEntries_ && (a = this.callbackEntries_, this.callbackEntries_ = a.next, a.next = null);
  this.callbackEntries_ || (this.callbackEntriesTail_ = null);
  null != a && goog.asserts.assert(null != a.onFulfilled);
  return a;
};
goog.Promise.prototype.removeEntryAfter_ = function(a) {
  goog.asserts.assert(this.callbackEntries_);
  goog.asserts.assert(null != a);
  a.next == this.callbackEntriesTail_ && (this.callbackEntriesTail_ = a);
  a.next = a.next.next;
};
goog.Promise.prototype.executeCallbacks_ = function() {
  for (var a = null;a = this.popEntry_();) {
    goog.Promise.LONG_STACK_TRACES && this.currentStep_++, this.executeCallback_(a, this.state_, this.result_);
  }
  this.executing_ = !1;
};
goog.Promise.prototype.executeCallback_ = function(a, b, c) {
  b == goog.Promise.State_.REJECTED && a.onRejected && !a.always && this.removeUnhandledRejection_();
  if (a.child) {
    a.child.parent_ = null, goog.Promise.invokeCallback_(a, b, c);
  } else {
    try {
      a.always ? a.onFulfilled.call(a.context) : goog.Promise.invokeCallback_(a, b, c);
    } catch (d) {
      goog.Promise.handleRejection_.call(null, d);
    }
  }
  goog.Promise.returnEntry_(a);
};
goog.Promise.invokeCallback_ = function(a, b, c) {
  b == goog.Promise.State_.FULFILLED ? a.onFulfilled.call(a.context, c) : a.onRejected && a.onRejected.call(a.context, c);
};
goog.Promise.prototype.addStackTrace_ = function(a) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(a.stack)) {
    var b = a.stack.split("\n", 4)[3];
    a = a.message;
    a += Array(11 - a.length).join(" ");
    this.stack_.push(a + b);
  }
};
goog.Promise.prototype.appendLongStack_ = function(a) {
  if (goog.Promise.LONG_STACK_TRACES && a && goog.isString(a.stack) && this.stack_.length) {
    for (var b = ["Promise trace:"], c = this;c;c = c.parent_) {
      for (var d = this.currentStep_;0 <= d;d--) {
        b.push(c.stack_[d]);
      }
      b.push("Value: [" + (c.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] <" + String(c.result_) + ">");
    }
    a.stack += "\n\n" + b.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (0 < goog.Promise.UNHANDLED_REJECTION_DELAY) {
    for (var a = this;a && a.unhandledRejectionId_;a = a.parent_) {
      goog.global.clearTimeout(a.unhandledRejectionId_), a.unhandledRejectionId_ = 0;
    }
  } else {
    if (0 == goog.Promise.UNHANDLED_REJECTION_DELAY) {
      for (a = this;a && a.hadUnhandledRejection_;a = a.parent_) {
        a.hadUnhandledRejection_ = !1;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(a, b) {
  0 < goog.Promise.UNHANDLED_REJECTION_DELAY ? a.unhandledRejectionId_ = goog.global.setTimeout(function() {
    a.appendLongStack_(b);
    goog.Promise.handleRejection_.call(null, b);
  }, goog.Promise.UNHANDLED_REJECTION_DELAY) : 0 == goog.Promise.UNHANDLED_REJECTION_DELAY && (a.hadUnhandledRejection_ = !0, goog.async.run(function() {
    a.hadUnhandledRejection_ && (a.appendLongStack_(b), goog.Promise.handleRejection_.call(null, b));
  }));
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(a) {
  goog.Promise.handleRejection_ = a;
};
goog.Promise.CancellationError = function(a) {
  goog.debug.Error.call(this, a);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(a, b, c) {
  this.promise = a;
  this.resolve = b;
  this.reject = c;
};
wd.util.promise = {};
wd.util.promise.Promise = "undefined" != typeof Promise ? Promise : "undefined" != typeof goog.global.Promise ? goog.global.Promise : goog.Promise;
goog.global.setTimeout || (goog.global.setTimeout = function() {
  global.setTimeout.apply(global, arguments);
});
goog.exportProperty(goog.Promise.prototype, "catch", goog.Promise.prototype.thenCatch);
wd.util.promise.Deferred = function() {
  var a = this;
  this.reject = this.resolve = null;
  this.promise = new wd.util.promise.Promise(function(b, c) {
    a.resolve = b;
    a.reject = c;
  });
};
wd.util.promise.Deferred.prototype.wrapCallback = function(a) {
  var b = this;
  return function(c, d) {
    c ? b.reject(c) : b.resolve(d);
    goog.isFunction(a) && (wd.util.promise.attachDummyErrorHandler(b.promise), 1 === a.length ? a(c) : a(c, d));
  };
};
wd.util.promise.attachDummyErrorHandler = function(a) {
  a.then(void 0, goog.nullFunction);
};
wd.User = function(a, b, c, d) {
  wd.UserInfo.call(this, b.displayName, b.email, b.photoURL, b.providerId, b.uid);
  this.isAnonymous = "anonymous" === this.providerId;
  this.emailVerified = !0 === c;
  this.providerData = d || [];
  this.refreshToken = null;
  Object.defineProperty(this, "__authManager", {value:a, writable:!1});
};
goog.inherits(wd.User, wd.UserInfo);
goog.exportSymbol("wd.User", wd.User);
wd.User.prototype["delete"] = function(a) {
  var b = new wd.util.promise.Deferred;
  this.__authManager.removeUser(this.getToken(), b.wrapCallback(a));
  return b.promise;
};
goog.exportProperty(wd.User.prototype, "delete", wd.User.prototype["delete"]);
wd.User.prototype.getToken = function() {
  return this.__authManager.getAuth().idToken;
};
goog.exportProperty(wd.User.prototype, "getToken", wd.User.prototype.getToken);
wd.User.prototype.link = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.User.link", 1, 2, arguments.length);
  wd.core.util.validation.validateObject("wilddog.User.link", 1, a, !1);
  var c = a.provider, d = new wd.util.promise.Deferred, e = {};
  e.idToken = this.getToken();
  "password" == c ? (e.email = a.email, e.password = a.password, this.__authManager.updateUserAuth(e, d.wrapCallback(b))) : (e.providerId = a.provider, e.accessToken = a.accessToken, e.openId = a.openId || "", e.authType = "link", this.__authManager.authWithCredential(e, d.wrapCallback(b)));
  return d.promise;
};
goog.exportProperty(wd.User.prototype, "link", wd.User.prototype.link);
wd.User.prototype.unlink = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.User.unlink", 1, 2, arguments.length);
  wd.core.util.validation.validateString("wilddog.User.unlink", 1, a, !1);
  var c = new wd.util.promise.Deferred, d = this;
  this.__authManager.updateUserProfile("unlink", {idToken:this.getToken(), deleteProvider:[a]}, c.wrapCallback(function(c, f) {
    f && (d.providerData = d.providerData.filter(function(b) {
      if (b.providerId != a) {
        return b;
      }
    }), 0 === d.providerData.length && d.__authManager.unauthenticate());
    b && b(c, f);
  }));
  return c.promise;
};
goog.exportProperty(wd.User.prototype, "unlink", wd.User.prototype.unlink);
wd.User.prototype.linkWithPopup = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.auth().signInWithPopup", 1, 2, arguments.length);
  wd.core.util.validation.validateObject("wilddog.auth().signInWithPopup", 1, a, !1);
  var c = new wd.util.promise.Deferred;
  this.__authManager.authWithPopup(a, {authType:"link", idToken:this.getToken()}, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(wd.User.prototype, "linkWithPopup", wd.User.prototype.linkWithPopup);
wd.User.prototype.linkWithRedirect = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.auth().signInWithPopup", 1, 2, arguments.length);
  wd.core.util.validation.validateObject("wilddog.auth().signInWithPopup", 1, a, !1);
  var c = new wd.util.promise.Deferred;
  this.__authManager.authWithRedirect(a, {authType:"link", idToken:this.getToken()}, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(wd.User.prototype, "linkWithRedirect", wd.User.prototype.linkWithRedirect);
wd.User.prototype.updateProfile = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.User.updateProfile", 1, 2, arguments.length);
  wd.core.util.validation.validateObject("wilddog.User.updateProfile", 1, a, !1);
  var c = new wd.util.promise.Deferred;
  a.idToken = this.getToken();
  this.__authManager.updateUserProfile("profile", a, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(wd.User.prototype, "updateProfile", wd.User.prototype.updateProfile);
wd.User.prototype.updateEmail = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.User.updateEmail", 1, 2, arguments.length);
  wd.core.util.validation.validateString("wilddog.User.updateEmail", 1, a, !1);
  var c = new wd.util.promise.Deferred;
  this.__authManager.updateUserAuth({email:a, idToken:this.getToken()}, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(wd.User.prototype, "updateEmail", wd.User.prototype.updateEmail);
wd.User.prototype.updatePassword = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.User.updatePassword", 1, 2, arguments.length);
  wd.core.util.validation.validateString("wilddog.User.updatePassword", 1, a, !1);
  var c = new wd.util.promise.Deferred;
  this.__authManager.updateUserAuth({password:a, idToken:this.getToken()}, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(wd.User.prototype, "updatePassword", wd.User.prototype.updatePassword);
wd.User.prototype.sendEmailVerification = function(a) {
  wd.util.validation.validateArgCount("wilddog.User.sendEmailVerification", 0, 1, arguments.length);
  wd.util.validation.validateCallback("wilddog.User.sendEmailVerification", 1, a, !0);
  var b = new wd.util.promise.Deferred;
  this.__authManager.getOobConfirmationCode({idToken:this.getToken(), requestType:"VERIFY_EMAIL"}, b.wrapCallback(a));
  return b.promise;
};
goog.exportProperty(wd.User.prototype, "sendEmailVerification", wd.User.prototype.sendEmailVerification);
wd.User.prototype.reload = function(a) {
  wd.util.validation.validateArgCount("wilddog.User.reload", 0, 1, arguments.length);
  wd.util.validation.validateCallback("wilddog.User.reload", 1, a, !0);
  var b = new wd.util.promise.Deferred;
  this.__authManager.getAccountInfo(this.getToken(), b.wrapCallback(a));
  return b.promise;
};
goog.exportProperty(wd.User.prototype, "reload", wd.User.prototype.reload);
wd.User.prototype.reauthenticate = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.User.reload", 1, 2, arguments.length);
  wd.util.validation.validateCallback("wilddog.User.reload", 2, b, !0);
  if (!a || !a.provider) {
    throw Error("Unknown credential object.");
  }
  var c = new wd.util.promise.Deferred;
  this.__authManager.authWithCredential(a, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(wd.User.prototype, "reauthenticate", wd.User.prototype.reauthenticate);
wd.auth.util = {};
wd.auth.util.parsedUserInfo_ = function(a) {
  if (a && a.users && a.users[0]) {
    return a = a.users[0], new wd.UserInfo(a.displayName, a.email, a.photoUrl, a.providerId, a.localId);
  }
  throw Error("Bad response format.");
};
wd.auth.util.parsedUser = function(a, b) {
  var c = wd.auth.util.parsedUserInfo_(b);
  if (!c) {
    return null;
  }
  var d = b.users[0], e = d.providerUserInfo.map(function(a) {
    a.photoURL = a.photoUrl;
    delete a.photoUrl;
    return a;
  });
  return new wd.User(a, c, d.emailVerified, e);
};
wd.auth.util.parsedSession = function(a, b) {
  if (b.currentUser) {
    var c = b.currentUser, d = new wd.UserInfo(c.displayName, c.email, c.photoURL, c.providerId, c.uid);
    b.currentUser = new wd.User(a, d, c.emailVerified, c.providerData);
  }
  return b;
};
goog.labs.userAgent.platform = {};
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var a = goog.labs.userAgent.util.getUserAgent(), b = "";
  goog.labs.userAgent.platform.isWindows() ? (b = /Windows (?:NT|Phone) ([0-9.]+)/, b = (a = b.exec(a)) ? a[1] : "0.0") : goog.labs.userAgent.platform.isIos() ? (b = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/, b = (a = b.exec(a)) && a[1].replace(/_/g, ".")) : goog.labs.userAgent.platform.isMacintosh() ? (b = /Mac OS X ([0-9_.]+)/, b = (a = b.exec(a)) ? a[1].replace(/_/g, ".") : "10") : goog.labs.userAgent.platform.isAndroid() ? (b = /Android\s+([^\);]+)(\)|;)/, b = (a = b.exec(a)) && a[1]) : goog.labs.userAgent.platform.isChromeOS() && 
  (b = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/, b = (a = b.exec(a)) && a[1]);
  return b || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(a) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), a);
};
goog.userAgent = {};
goog.userAgent.ASSUME_IE = !1;
goog.userAgent.ASSUME_EDGE = !1;
goog.userAgent.ASSUME_GECKO = !1;
goog.userAgent.ASSUME_WEBKIT = !1;
goog.userAgent.ASSUME_MOBILE_WEBKIT = !1;
goog.userAgent.ASSUME_OPERA = !1;
goog.userAgent.ASSUME_ANY_VERSION = !1;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global.navigator || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var a = goog.userAgent.getNavigator();
  return a && a.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = !1;
goog.userAgent.ASSUME_WINDOWS = !1;
goog.userAgent.ASSUME_LINUX = !1;
goog.userAgent.ASSUME_X11 = !1;
goog.userAgent.ASSUME_ANDROID = !1;
goog.userAgent.ASSUME_IPHONE = !1;
goog.userAgent.ASSUME_IPAD = !1;
goog.userAgent.ASSUME_IPOD = !1;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var a = goog.userAgent.getNavigator();
  return !!a && goog.string.contains(a.appVersion || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod();
goog.userAgent.determineVersion_ = function() {
  var a = "", b = goog.userAgent.getVersionRegexResult_();
  b && (a = b ? b[1] : "");
  return goog.userAgent.IE && (b = goog.userAgent.getDocumentMode_(), null != b && b > parseFloat(a)) ? String(b) : a;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var a = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv\:([^\);]+)(\)|;)/.exec(a);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(a);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(a);
  }
  if (goog.userAgent.OPERA) {
    return /(?:Version)[ \/]?(\S+)/.exec(a);
  }
};
goog.userAgent.getDocumentMode_ = function() {
  var a = goog.global.document;
  return a ? a.documentMode : void 0;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(a, b) {
  return goog.string.compareVersions(a, b);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(a) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, a, function() {
    return 0 <= goog.string.compareVersions(goog.userAgent.VERSION, a);
  });
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(a) {
  return Number(goog.userAgent.DOCUMENT_MODE) >= a;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var a = goog.global.document, b = goog.userAgent.getDocumentMode_();
  return a && goog.userAgent.IE ? b || ("CSS1Compat" == a.compatMode ? parseInt(goog.userAgent.VERSION, 10) : 5) : void 0;
}();
goog.userAgent.product = {};
goog.userAgent.product.ASSUME_FIREFOX = !1;
goog.userAgent.product.ASSUME_IPHONE = !1;
goog.userAgent.product.ASSUME_IPAD = !1;
goog.userAgent.product.ASSUME_ANDROID = !1;
goog.userAgent.product.ASSUME_CHROME = !1;
goog.userAgent.product.ASSUME_SAFARI = !1;
goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
goog.userAgent.product.OPERA = goog.userAgent.OPERA;
goog.userAgent.product.IE = goog.userAgent.IE;
goog.userAgent.product.EDGE = goog.userAgent.EDGE;
goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox();
goog.userAgent.product.isIphoneOrIpod_ = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();
};
goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser();
goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_ = function() {
  return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();
};
goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();
goog.crypt.base64 = {};
goog.crypt.base64.byteToCharMap_ = null;
goog.crypt.base64.charToByteMap_ = null;
goog.crypt.base64.byteToCharMapWebSafe_ = null;
goog.crypt.base64.ENCODED_VALS_BASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + "+/=";
goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.ENCODED_VALS_BASE + "-_.";
goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI || goog.userAgent.OPERA;
goog.crypt.base64.HAS_NATIVE_ENCODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || "function" == typeof goog.global.btoa;
goog.crypt.base64.HAS_NATIVE_DECODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || !goog.userAgent.product.SAFARI && !goog.userAgent.IE && "function" == typeof goog.global.atob;
goog.crypt.base64.encodeByteArray = function(a, b) {
  goog.asserts.assert(goog.isArrayLike(a), "encodeByteArray takes an array as a parameter");
  goog.crypt.base64.init_();
  for (var c = b ? goog.crypt.base64.byteToCharMapWebSafe_ : goog.crypt.base64.byteToCharMap_, d = [], e = 0;e < a.length;e += 3) {
    var f = a[e], g = e + 1 < a.length, h = g ? a[e + 1] : 0, k = e + 2 < a.length, l = k ? a[e + 2] : 0, m = f >> 2, f = (f & 3) << 4 | h >> 4, h = (h & 15) << 2 | l >> 6, l = l & 63;
    k || (l = 64, g || (h = 64));
    d.push(c[m], c[f], c[h], c[l]);
  }
  return d.join("");
};
goog.crypt.base64.encodeString = function(a, b) {
  return goog.crypt.base64.HAS_NATIVE_ENCODE_ && !b ? goog.global.btoa(a) : goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a), b);
};
goog.crypt.base64.decodeString = function(a, b) {
  if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !b) {
    return goog.global.atob(a);
  }
  var c = "";
  goog.crypt.base64.decodeStringInternal_(a, function(a) {
    c += String.fromCharCode(a);
  });
  return c;
};
goog.crypt.base64.decodeStringToByteArray = function(a, b) {
  var c = [];
  goog.crypt.base64.decodeStringInternal_(a, function(a) {
    c.push(a);
  });
  return c;
};
goog.crypt.base64.decodeStringToUint8Array = function(a) {
  goog.asserts.assert(!goog.userAgent.IE || goog.userAgent.isVersionOrHigher("10"), "Browser does not support typed arrays");
  var b = new Uint8Array(Math.ceil(3 * a.length / 4)), c = 0;
  goog.crypt.base64.decodeStringInternal_(a, function(a) {
    b[c++] = a;
  });
  return b.subarray(0, c);
};
goog.crypt.base64.decodeStringInternal_ = function(a, b) {
  function c(b) {
    for (;d < a.length;) {
      var c = a.charAt(d++), e = goog.crypt.base64.charToByteMap_[c];
      if (null != e) {
        return e;
      }
      if (!goog.string.isEmptyOrWhitespace(c)) {
        throw Error("Unknown base64 encoding at char: " + c);
      }
    }
    return b;
  }
  goog.crypt.base64.init_();
  for (var d = 0;;) {
    var e = c(-1), f = c(0), g = c(64), h = c(64);
    if (64 === h && -1 === e) {
      break;
    }
    b(e << 2 | f >> 4);
    64 != g && (b(f << 4 & 240 | g >> 2), 64 != h && b(g << 6 & 192 | h));
  }
};
goog.crypt.base64.init_ = function() {
  if (!goog.crypt.base64.byteToCharMap_) {
    goog.crypt.base64.byteToCharMap_ = {};
    goog.crypt.base64.charToByteMap_ = {};
    goog.crypt.base64.byteToCharMapWebSafe_ = {};
    for (var a = 0;a < goog.crypt.base64.ENCODED_VALS.length;a++) {
      goog.crypt.base64.byteToCharMap_[a] = goog.crypt.base64.ENCODED_VALS.charAt(a), goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[a]] = a, goog.crypt.base64.byteToCharMapWebSafe_[a] = goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a), a >= goog.crypt.base64.ENCODED_VALS_BASE.length && (goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a)] = a);
    }
  }
};
wd.core.util.LUIDGenerator = function() {
  var a = 1;
  return function() {
    return a++;
  };
}();
wd.core.util.assert = function(a, b) {
  if (!a) {
    throw wd.core.util.assertionError(b);
  }
};
wd.core.util.assertionError = function(a) {
  return Error("Wilddog (" + Wilddog.SDK_VERSION + ") INTERNAL ASSERT FAILED: " + a);
};
wd.core.util.assertWeak = function(a, b) {
  a || wd.core.util.error(b);
};
wd.core.util.base64Encode = function(a) {
  a = wd.util.utf8.stringToByteArray(a);
  return goog.crypt.base64.encodeByteArray(a, !0);
};
wd.core.util.base64Decode = function(a) {
  try {
    return NODE_CLIENT ? (new Buffer(a, "base64")).toString("utf8") : "undefined" !== typeof atob ? atob(a) : goog.crypt.base64.decodeString(a, !0);
  } catch (b) {
    wd.core.util.log("base64Decode failed: ", b);
  }
  return null;
};
wd.core.util.sha1 = function(a) {
  a = wd.util.utf8.stringToByteArray(a);
  var b = new goog.crypt.Sha1;
  b.update(a);
  a = b.digest();
  return goog.crypt.base64.encodeByteArray(a);
};
wd.core.util.buildLogMessage_ = function(a) {
  for (var b = "", c = 0;c < arguments.length;c++) {
    b = goog.isArrayLike(arguments[c]) ? b + wd.core.util.buildLogMessage_.apply(null, arguments[c]) : "object" === typeof arguments[c] ? b + wd.util.json.stringify(arguments[c]) : b + arguments[c], b += " ";
  }
  return b;
};
wd.core.util.logger = null;
wd.core.util.firstLog_ = !0;
wd.core.util.log = function(a) {
  !0 === wd.core.util.firstLog_ && (wd.core.util.firstLog_ = !1, null === wd.core.util.logger && !0 === wd.core.storage.SessionStorage.get("logging_enabled") && Wilddog.enableLogging(!0));
  if (wd.core.util.logger) {
    var b = wd.core.util.buildLogMessage_.apply(null, arguments);
    wd.core.util.logger(b);
  }
};
wd.core.util.logWrapper = function(a) {
  return function() {
    wd.core.util.log(a, arguments);
  };
};
wd.core.util.error = function(a) {
  if ("undefined" !== typeof console) {
    var b = "WILDDOG INTERNAL ERROR: " + wd.core.util.buildLogMessage_.apply(null, arguments);
    "undefined" !== typeof console.error ? console.error(b) : console.log(b);
  }
};
wd.core.util.fatal = function(a) {
  var b = wd.core.util.buildLogMessage_.apply(null, arguments);
  throw Error("WILDDOG FATAL ERROR: " + b);
};
wd.core.util.warn = function(a) {
  if ("undefined" !== typeof console) {
    var b = "WILDDOG WARNING: " + wd.core.util.buildLogMessage_.apply(null, arguments);
    "undefined" !== typeof console.warn ? console.warn(b) : console.log(b);
  }
};
wd.core.util.warnIfPageIsSecure = function() {
  "undefined" !== typeof window && window.location && window.location.protocol && -1 !== window.location.protocol.indexOf("https:") && wd.core.util.warn("Insecure Wilddog access from a secure page. Please use https in calls to new Wilddog().");
};
wd.core.util.warnAboutUnsupportedMethod = function(a) {
  wd.core.util.warn(a + " is unsupported and will likely change soon.  Please do not use.");
};
wd.core.util.parseURL = function(a) {
  var b = "", c = "", d = "", e = "", f = !0, g = "https", h = 443;
  if (goog.isString(a)) {
    var k = a.indexOf("//");
    0 <= k && (g = a.substring(0, k - 1), a = a.substring(k + 2));
    e = a.indexOf("/");
    -1 === e && (e = a.length);
    b = a.substring(0, e);
    e = wd.core.util.decodePath(a.substring(e));
    a = b.split(".");
    3 === a.length ? (c = a[1], d = a[0].toLowerCase()) : 2 === a.length && (c = a[0]);
    k = b.indexOf(":");
    0 <= k && (f = "https" === g || "wss" === g, h = goog.string.parseInt(b.substring(k + 1)));
  }
  return {host:b, port:h, domain:c, subdomain:d, secure:f, scheme:g, pathString:e};
};
wd.core.util.decodePath = function(a) {
  var b = "";
  a = a.split("/");
  for (var c = 0;c < a.length;c++) {
    if (0 < a[c].length) {
      var d = a[c];
      try {
        d = goog.string.urlDecode(d);
      } catch (e) {
      }
      b += "/" + d;
    }
  }
  return b;
};
wd.core.util.isInvalidJSONNumber = function(a) {
  return goog.isNumber(a) && (a != a || a == Number.POSITIVE_INFINITY || a == Number.NEGATIVE_INFINITY);
};
wd.core.util.executeWhenDOMReady = function(a) {
  if (NODE_CLIENT || "complete" === document.readyState) {
    a();
  } else {
    var b = !1, c = function() {
      document.body ? b || (b = !0, a()) : setTimeout(c, Math.floor(10));
    };
    document.addEventListener ? (document.addEventListener("DOMContentLoaded", c, !1), window.addEventListener("load", c, !1)) : document.attachEvent && (document.attachEvent("onreadystatechange", function() {
      "complete" === document.readyState && c();
    }), window.attachEvent("onload", c));
  }
};
wd.core.util.MIN_NAME = "[MIN_NAME]";
wd.core.util.MAX_NAME = "[MAX_NAME]";
wd.core.util.nameCompare = function(a, b) {
  if (a === b) {
    return 0;
  }
  if (a === wd.core.util.MIN_NAME || b === wd.core.util.MAX_NAME) {
    return -1;
  }
  if (b === wd.core.util.MIN_NAME || a === wd.core.util.MAX_NAME) {
    return 1;
  }
  var c = wd.core.util.tryParseInt(a), d = wd.core.util.tryParseInt(b);
  return null !== c ? null !== d ? 0 == c - d ? a.length - b.length : c - d : -1 : null !== d ? 1 : a < b ? -1 : 1;
};
wd.core.util.stringCompare = function(a, b) {
  return a === b ? 0 : a < b ? -1 : 1;
};
wd.core.util.requireKey = function(a, b) {
  if (b && a in b) {
    return b[a];
  }
  throw Error("Missing required key (" + a + ") in object: " + wd.util.json.stringify(b));
};
wd.core.util.ObjectToUniqueKey = function(a) {
  if ("object" !== typeof a || null === a) {
    return wd.util.json.stringify(a);
  }
  var b = [], c;
  for (c in a) {
    b.push(c);
  }
  b.sort();
  c = "{";
  for (var d = 0;d < b.length;d++) {
    0 !== d && (c += ","), c += wd.util.json.stringify(b[d]), c += ":", c += wd.core.util.ObjectToUniqueKey(a[b[d]]);
  }
  return c + "}";
};
wd.core.util.splitStringBySize = function(a, b) {
  if (a.length <= b) {
    return [a];
  }
  for (var c = [], d = 0;d < a.length;d += b) {
    d + b > a ? c.push(a.substring(d, a.length)) : c.push(a.substring(d, d + b));
  }
  return c;
};
wd.core.util.each = function(a, b) {
  if (goog.isArray(a)) {
    for (var c = 0;c < a.length;++c) {
      b(c, a[c]);
    }
  } else {
    goog.object.forEach(a, b);
  }
};
wd.core.util.bindCallback = function(a, b) {
  return b ? goog.bind(a, b) : a;
};
wd.core.util.doubleToIEEE754String = function(a) {
  wd.core.util.assert(!wd.core.util.isInvalidJSONNumber(a), "Invalid JSON number");
  var b, c, d, e;
  0 === a ? (d = c = 0, b = -Infinity === 1 / a ? 1 : 0) : (b = 0 > a, a = Math.abs(a), a >= Math.pow(2, -1022) ? (d = Math.min(Math.floor(Math.log(a) / Math.LN2), 1023), c = d + 1023, d = Math.round(a * Math.pow(2, 52 - d) - Math.pow(2, 52))) : (c = 0, d = Math.round(a / Math.pow(2, -1074))));
  e = [];
  for (a = 52;a;--a) {
    e.push(d % 2 ? 1 : 0), d = Math.floor(d / 2);
  }
  for (a = 11;a;--a) {
    e.push(c % 2 ? 1 : 0), c = Math.floor(c / 2);
  }
  e.push(b ? 1 : 0);
  e.reverse();
  b = e.join("");
  c = "";
  for (a = 0;64 > a;a += 8) {
    d = parseInt(b.substr(a, 8), 2).toString(16), 1 === d.length && (d = "0" + d), c += d;
  }
  return c.toLowerCase();
};
wd.core.util.isChromeExtensionContentScript = function() {
  return !("object" !== typeof window || !window.chrome || !window.chrome.extension || /^chrome/.test(window.location.href));
};
wd.core.util.isWindowsStoreApp = function() {
  return "object" === typeof Windows && "object" === typeof Windows.UI;
};
wd.core.util.errorForServerCode = function(a) {
  var b;
  switch(a) {
    case "too_big":
      b = "The data requested exceeds the maximum size,that can be accessed with a single request.";
      break;
    case "limits_exceeded":
      b = "The request is refused by server side because of the resource limit of your APP plan.";
      break;
    case "permission_denied":
      b = "Client doesn't have permission to access the desired data.";
      break;
    case "unavailable":
      b = "The service is unavailable";
      break;
    default:
      b = "Unknown error.";
  }
  b = Error(a + ": " + b);
  b.code = a.toUpperCase();
  return b;
};
wd.core.util.INTEGER_REGEXP_ = /^-?\d{1,10}$/;
wd.core.util.tryParseInt = function(a) {
  return wd.core.util.INTEGER_REGEXP_.test(a) && (a = Number(a), -2147483648 <= a && 2147483647 >= a) ? a : null;
};
wd.core.util.exceptionGuard = function(a) {
  try {
    a();
  } catch (b) {
    setTimeout(function() {
      wd.core.util.warn("Exception was thrown by user callback.", b.stack || "");
      throw b;
    }, Math.floor(0));
  }
};
wd.core.util.callUserCallback = function(a, b) {
  if (goog.isFunction(a)) {
    var c = Array.prototype.slice.call(arguments, 1).slice();
    wd.core.util.exceptionGuard(function() {
      a.apply(null, c);
    });
  }
};
wd.core.util.beingCrawled = function() {
  return 0 <= ("object" === typeof window && window.navigator && window.navigator.userAgent || "").search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i);
};
wd.core.operation.Merge = function(a, b, c) {
  this.type = wd.core.OperationType.MERGE;
  this.source = a;
  this.path = b;
  this.children = c;
};
wd.core.operation.Merge.prototype.operationForChild = function(a) {
  if (this.path.isEmpty()) {
    return a = this.children.subtree(new wd.core.util.Path(a)), a.isEmpty() ? null : a.value ? new wd.core.operation.Overwrite(this.source, wd.core.util.Path.Empty, a.value) : new wd.core.operation.Merge(this.source, wd.core.util.Path.Empty, a);
  }
  wd.core.util.assert(this.path.getFront() === a, "Can't get a merge for a child not on the path of the operation");
  return new wd.core.operation.Merge(this.source, this.path.popFront(), this.children);
};
goog.DEBUG && (wd.core.operation.Merge.prototype.toString = function() {
  return "Operation(" + this.path + ": " + this.source.toString() + " merge: " + this.children.toString() + ")";
});
wd.core.OperationType = {OVERWRITE:0, MERGE:1, ACK_USER_WRITE:2, LISTEN_COMPLETE:3};
wd.core.Operation = function() {
};
wd.core.Operation.prototype.source;
wd.core.Operation.prototype.type;
wd.core.Operation.prototype.path;
wd.core.OperationSource = function(a, b, c, d) {
  this.fromUser = a;
  this.fromServer = b;
  this.queryId = c;
  this.tagged = d;
  wd.core.util.assert(!d || b, "Tagged queries must be from server.");
};
wd.core.OperationSource.User = new wd.core.OperationSource(!0, !1, null, !1);
wd.core.OperationSource.Server = new wd.core.OperationSource(!1, !0, null, !1);
wd.core.OperationSource.forServerTaggedQuery = function(a) {
  return new wd.core.OperationSource(!1, !0, a, !0);
};
goog.DEBUG && (wd.core.OperationSource.prototype.toString = function() {
  return this.fromUser ? "user" : this.tagged ? "server(queryID=" + this.queryId + ")" : "server";
});
wd.core.snap.Index = function() {
};
wd.core.snap.Index.FallbackType;
wd.core.snap.Index.Fallback = {};
wd.core.snap.Index.prototype.getCompare = function() {
  return goog.bind(this.compare, this);
};
wd.core.snap.Index.prototype.indexedValueChanged = function(a, b) {
  var c = new wd.core.snap.NamedNode(wd.core.util.MIN_NAME, a), d = new wd.core.snap.NamedNode(wd.core.util.MIN_NAME, b);
  return 0 !== this.compare(c, d);
};
wd.core.snap.Index.prototype.minPost = function() {
  return wd.core.snap.NamedNode.MIN;
};
wd.core.snap.SubKeyIndex = function(a) {
  wd.core.snap.Index.call(this);
  this.indexKey_ = a;
};
goog.inherits(wd.core.snap.SubKeyIndex, wd.core.snap.Index);
wd.core.snap.SubKeyIndex.prototype.extractChild = function(a) {
  return a.getImmediateChild(this.indexKey_);
};
wd.core.snap.SubKeyIndex.prototype.isDefinedOn = function(a) {
  return !a.getImmediateChild(this.indexKey_).isEmpty();
};
wd.core.snap.SubKeyIndex.prototype.compare = function(a, b) {
  var c = this.extractChild(a.node), d = this.extractChild(b.node), c = c.compareTo(d);
  return 0 === c ? wd.core.util.nameCompare(a.name, b.name) : c;
};
wd.core.snap.SubKeyIndex.prototype.makePost = function(a, b) {
  var c = wd.core.snap.NodeFromJSON(a), c = wd.core.snap.EMPTY_NODE.updateImmediateChild(this.indexKey_, c);
  return new wd.core.snap.NamedNode(b, c);
};
wd.core.snap.SubKeyIndex.prototype.maxPost = function() {
  var a = wd.core.snap.EMPTY_NODE.updateImmediateChild(this.indexKey_, wd.core.snap.MAX_NODE);
  return new wd.core.snap.NamedNode(wd.core.util.MAX_NAME, a);
};
wd.core.snap.SubKeyIndex.prototype.toString = function() {
  return this.indexKey_;
};
wd.core.snap.PriorityIndex_ = function() {
  wd.core.snap.Index.call(this);
};
goog.inherits(wd.core.snap.PriorityIndex_, wd.core.snap.Index);
wd.core.snap.PriorityIndex_.prototype.compare = function(a, b) {
  var c = a.node.getPriority(), d = b.node.getPriority(), c = c.compareTo(d);
  return 0 === c ? wd.core.util.nameCompare(a.name, b.name) : c;
};
wd.core.snap.PriorityIndex_.prototype.isDefinedOn = function(a) {
  return !a.getPriority().isEmpty();
};
wd.core.snap.PriorityIndex_.prototype.indexedValueChanged = function(a, b) {
  return !a.getPriority().equals(b.getPriority());
};
wd.core.snap.PriorityIndex_.prototype.minPost = function() {
  return wd.core.snap.NamedNode.MIN;
};
wd.core.snap.PriorityIndex_.prototype.maxPost = function() {
  return new wd.core.snap.NamedNode(wd.core.util.MAX_NAME, new wd.core.snap.LeafNode("[PRIORITY-POST]", wd.core.snap.MAX_NODE));
};
wd.core.snap.PriorityIndex_.prototype.makePost = function(a, b) {
  var c = wd.core.snap.NodeFromJSON(a);
  return new wd.core.snap.NamedNode(b, new wd.core.snap.LeafNode("[PRIORITY-POST]", c));
};
wd.core.snap.PriorityIndex_.prototype.toString = function() {
  return ".priority";
};
wd.core.snap.PriorityIndex = new wd.core.snap.PriorityIndex_;
wd.core.snap.KeyIndex_ = function() {
  wd.core.snap.Index.call(this);
};
goog.inherits(wd.core.snap.KeyIndex_, wd.core.snap.Index);
wd.core.snap.KeyIndex_.prototype.compare = function(a, b) {
  return wd.core.util.nameCompare(a.name, b.name);
};
wd.core.snap.KeyIndex_.prototype.isDefinedOn = function(a) {
  throw wd.core.util.assertionError("KeyIndex.isDefinedOn not expected to be called.");
};
wd.core.snap.KeyIndex_.prototype.indexedValueChanged = function(a, b) {
  return !1;
};
wd.core.snap.KeyIndex_.prototype.minPost = function() {
  return wd.core.snap.NamedNode.MIN;
};
wd.core.snap.KeyIndex_.prototype.maxPost = function() {
  return new wd.core.snap.NamedNode(wd.core.util.MAX_NAME, wd.core.snap.EMPTY_NODE);
};
wd.core.snap.KeyIndex_.prototype.makePost = function(a, b) {
  wd.core.util.assert(goog.isString(a), "KeyIndex indexValue must always be a string.");
  return new wd.core.snap.NamedNode(a, wd.core.snap.EMPTY_NODE);
};
wd.core.snap.KeyIndex_.prototype.toString = function() {
  return ".key";
};
wd.core.snap.KeyIndex = new wd.core.snap.KeyIndex_;
wd.core.snap.ValueIndex_ = function() {
  wd.core.snap.Index.call(this);
};
goog.inherits(wd.core.snap.ValueIndex_, wd.core.snap.Index);
wd.core.snap.ValueIndex_.prototype.compare = function(a, b) {
  var c = a.node.compareTo(b.node);
  return 0 === c ? wd.core.util.nameCompare(a.name, b.name) : c;
};
wd.core.snap.ValueIndex_.prototype.isDefinedOn = function(a) {
  return !0;
};
wd.core.snap.ValueIndex_.prototype.indexedValueChanged = function(a, b) {
  return !a.equals(b);
};
wd.core.snap.ValueIndex_.prototype.minPost = function() {
  return wd.core.snap.NamedNode.MIN;
};
wd.core.snap.ValueIndex_.prototype.maxPost = function() {
  return wd.core.snap.NamedNode.MAX;
};
wd.core.snap.ValueIndex_.prototype.makePost = function(a, b) {
  var c = wd.core.snap.NodeFromJSON(a);
  return new wd.core.snap.NamedNode(b, c);
};
wd.core.snap.ValueIndex_.prototype.toString = function() {
  return ".value";
};
wd.core.snap.ValueIndex = new wd.core.snap.ValueIndex_;
wd.core.snap.IndexMap = function(a, b) {
  this.indexes_ = a;
  this.indexSet_ = b;
};
wd.core.snap.IndexMap.prototype.get = function(a) {
  var b = wd.util.obj.get(this.indexes_, a);
  if (!b) {
    throw Error("No index defined for " + a);
  }
  return b === wd.core.snap.Index.Fallback ? null : b;
};
wd.core.snap.IndexMap.prototype.hasIndex = function(a) {
  return goog.object.contains(this.indexSet_, a.toString());
};
wd.core.snap.IndexMap.prototype.addIndex = function(a, b) {
  wd.core.util.assert(a !== wd.core.snap.KeyIndex, "KeyIndex always exists and isn't meant to be added to the IndexMap.");
  for (var c = [], d = !1, e = b.getIterator(wd.core.snap.NamedNode.Wrap), f = e.getNext();f;) {
    d = d || a.isDefinedOn(f.node), c.push(f), f = e.getNext();
  }
  c = d ? wd.core.snap.buildChildSet(c, a.getCompare()) : wd.core.snap.Index.Fallback;
  d = a.toString();
  e = goog.object.clone(this.indexSet_);
  e[d] = a;
  f = goog.object.clone(this.indexes_);
  f[d] = c;
  return new wd.core.snap.IndexMap(f, e);
};
wd.core.snap.IndexMap.prototype.addToIndexes = function(a, b) {
  var c = this, d = goog.object.map(this.indexes_, function(d, f) {
    var g = wd.util.obj.get(c.indexSet_, f);
    wd.core.util.assert(g, "Missing index implementation for " + f);
    if (d === wd.core.snap.Index.Fallback) {
      if (g.isDefinedOn(a.node)) {
        for (var h = [], k = b.getIterator(wd.core.snap.NamedNode.Wrap), l = k.getNext();l;) {
          l.name != a.name && h.push(l), l = k.getNext();
        }
        h.push(a);
        return wd.core.snap.buildChildSet(h, g.getCompare());
      }
      return wd.core.snap.Index.Fallback;
    }
    g = b.get(a.name);
    h = d;
    g && (h = h.remove(new wd.core.snap.NamedNode(a.name, g)));
    return h.insert(a, a.node);
  });
  return new wd.core.snap.IndexMap(d, this.indexSet_);
};
wd.core.snap.IndexMap.prototype.removeFromIndexes = function(a, b) {
  var c = goog.object.map(this.indexes_, function(c) {
    if (c === wd.core.snap.Index.Fallback) {
      return c;
    }
    var e = b.get(a.name);
    return e ? c.remove(new wd.core.snap.NamedNode(a.name, e)) : c;
  });
  return new wd.core.snap.IndexMap(c, this.indexSet_);
};
wd.core.snap.IndexMap.Default = new wd.core.snap.IndexMap({".priority":wd.core.snap.Index.Fallback}, {".priority":wd.core.snap.PriorityIndex});
wd.core.snap.LeafNode = function(a, b) {
  this.value_ = a;
  wd.core.util.assert(goog.isDef(this.value_) && null !== this.value_, "LeafNode shouldn't be created with null/undefined value.");
  this.priorityNode_ = b || wd.core.snap.EMPTY_NODE;
  wd.core.snap.validatePriorityNode(this.priorityNode_);
  this.lazyHash_ = null;
};
wd.core.snap.LeafNode.prototype.isLeafNode = function() {
  return !0;
};
wd.core.snap.LeafNode.prototype.getPriority = function() {
  return this.priorityNode_;
};
wd.core.snap.LeafNode.prototype.updatePriority = function(a) {
  return new wd.core.snap.LeafNode(this.value_, a);
};
wd.core.snap.LeafNode.prototype.getImmediateChild = function(a) {
  return ".priority" === a ? this.priorityNode_ : wd.core.snap.EMPTY_NODE;
};
wd.core.snap.LeafNode.prototype.getChild = function(a) {
  return a.isEmpty() ? this : ".priority" === a.getFront() ? this.priorityNode_ : wd.core.snap.EMPTY_NODE;
};
wd.core.snap.LeafNode.prototype.hasChild = function() {
  return !1;
};
wd.core.snap.LeafNode.prototype.getPredecessorChildName = function(a, b) {
  return null;
};
wd.core.snap.LeafNode.prototype.updateImmediateChild = function(a, b) {
  return ".priority" === a ? this.updatePriority(b) : b.isEmpty() && ".priority" !== a ? this : wd.core.snap.EMPTY_NODE.updateImmediateChild(a, b).updatePriority(this.priorityNode_);
};
wd.core.snap.LeafNode.prototype.updateChild = function(a, b) {
  var c = a.getFront();
  if (null === c) {
    return b;
  }
  if (b.isEmpty() && ".priority" !== c) {
    return this;
  }
  wd.core.util.assert(".priority" !== c || 1 === a.getLength(), ".priority must be the last token in a path");
  return this.updateImmediateChild(c, wd.core.snap.EMPTY_NODE.updateChild(a.popFront(), b));
};
wd.core.snap.LeafNode.prototype.isEmpty = function() {
  return !1;
};
wd.core.snap.LeafNode.prototype.numChildren = function() {
  return 0;
};
wd.core.snap.LeafNode.prototype.val = function(a) {
  return a && !this.getPriority().isEmpty() ? {".value":this.getValue(), ".priority":this.getPriority().val()} : this.getValue();
};
wd.core.snap.LeafNode.prototype.hash = function() {
  if (null === this.lazyHash_) {
    var a = "";
    this.priorityNode_.isEmpty() || (a += "priority:" + wd.core.snap.priorityHashText(this.priorityNode_.val()) + ":");
    var b = typeof this.value_, a = a + (b + ":"), a = "number" === b ? a + wd.core.util.doubleToIEEE754String(this.value_) : a + this.value_;
    this.lazyHash_ = wd.core.util.sha1(a);
  }
  return this.lazyHash_;
};
wd.core.snap.LeafNode.prototype.getValue = function() {
  return this.value_;
};
wd.core.snap.LeafNode.prototype.compareTo = function(a) {
  if (a === wd.core.snap.EMPTY_NODE) {
    return 1;
  }
  if (a instanceof wd.core.snap.ChildrenNode) {
    return -1;
  }
  wd.core.util.assert(a.isLeafNode(), "Unknown node type");
  return this.compareToLeafNode_(a);
};
wd.core.snap.LeafNode.VALUE_TYPE_ORDER = ["object", "boolean", "number", "string"];
wd.core.snap.LeafNode.prototype.compareToLeafNode_ = function(a) {
  var b = typeof a.value_, c = typeof this.value_, d = goog.array.indexOf(wd.core.snap.LeafNode.VALUE_TYPE_ORDER, b), e = goog.array.indexOf(wd.core.snap.LeafNode.VALUE_TYPE_ORDER, c);
  wd.core.util.assert(0 <= d, "Unknown leaf type: " + b);
  wd.core.util.assert(0 <= e, "Unknown leaf type: " + c);
  return d === e ? "object" === c ? 0 : this.value_ < a.value_ ? -1 : this.value_ === a.value_ ? 0 : 1 : e - d;
};
wd.core.snap.LeafNode.prototype.withIndex = function() {
  return this;
};
wd.core.snap.LeafNode.prototype.isIndexed = function() {
  return !0;
};
wd.core.snap.LeafNode.prototype.equals = function(a) {
  return a === this ? !0 : a.isLeafNode() ? this.value_ === a.value_ && this.priorityNode_.equals(a.priorityNode_) : !1;
};
goog.DEBUG && (wd.core.snap.LeafNode.prototype.toString = function() {
  return wd.util.json.stringify(this.val(!0));
});
wd.core.snap.ChildrenNode = function(a, b, c) {
  this.children_ = a;
  (this.priorityNode_ = b) && wd.core.snap.validatePriorityNode(this.priorityNode_);
  a.isEmpty() && wd.core.util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), "An empty node cannot have a priority");
  this.indexMap_ = c;
  this.lazyHash_ = null;
};
wd.core.snap.ChildrenNode.prototype.isLeafNode = function() {
  return !1;
};
wd.core.snap.ChildrenNode.prototype.getPriority = function() {
  return this.priorityNode_ || wd.core.snap.EMPTY_NODE;
};
wd.core.snap.ChildrenNode.prototype.updatePriority = function(a) {
  return this.children_.isEmpty() ? this : new wd.core.snap.ChildrenNode(this.children_, a, this.indexMap_);
};
wd.core.snap.ChildrenNode.prototype.getImmediateChild = function(a) {
  if (".priority" === a) {
    return this.getPriority();
  }
  a = this.children_.get(a);
  return null === a ? wd.core.snap.EMPTY_NODE : a;
};
wd.core.snap.ChildrenNode.prototype.getChild = function(a) {
  var b = a.getFront();
  return null === b ? this : this.getImmediateChild(b).getChild(a.popFront());
};
wd.core.snap.ChildrenNode.prototype.hasChild = function(a) {
  return null !== this.children_.get(a);
};
wd.core.snap.ChildrenNode.prototype.updateImmediateChild = function(a, b) {
  wd.core.util.assert(b, "We should always be passing snapshot nodes");
  if (".priority" === a) {
    return this.updatePriority(b);
  }
  var c = new wd.core.snap.NamedNode(a, b), d, e;
  b.isEmpty() ? (d = this.children_.remove(a), c = this.indexMap_.removeFromIndexes(c, this.children_)) : (d = this.children_.insert(a, b), c = this.indexMap_.addToIndexes(c, this.children_));
  e = d.isEmpty() ? wd.core.snap.EMPTY_NODE : this.priorityNode_;
  return new wd.core.snap.ChildrenNode(d, e, c);
};
wd.core.snap.ChildrenNode.prototype.updateChild = function(a, b) {
  var c = a.getFront();
  if (null === c) {
    return b;
  }
  wd.core.util.assert(".priority" !== a.getFront() || 1 === a.getLength(), ".priority must be the last token in a path");
  var d = this.getImmediateChild(c).updateChild(a.popFront(), b);
  return this.updateImmediateChild(c, d);
};
wd.core.snap.ChildrenNode.prototype.isEmpty = function() {
  return this.children_.isEmpty();
};
wd.core.snap.ChildrenNode.prototype.numChildren = function() {
  return this.children_.count();
};
wd.core.snap.ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\d*)$/;
wd.core.snap.ChildrenNode.prototype.val = function(a) {
  if (this.isEmpty()) {
    return null;
  }
  var b = {}, c = 0, d = 0, e = !0;
  this.forEachChild(wd.core.snap.PriorityIndex, function(f, g) {
    b[f] = g.val(a);
    c++;
    e && wd.core.snap.ChildrenNode.INTEGER_REGEXP_.test(f) ? d = Math.max(d, Number(f)) : e = !1;
  });
  if (!a && e && d < 2 * c) {
    var f = [], g;
    for (g in b) {
      f[g] = b[g];
    }
    return f;
  }
  a && !this.getPriority().isEmpty() && (b[".priority"] = this.getPriority().val());
  return b;
};
wd.core.snap.ChildrenNode.prototype.hash = function() {
  if (null === this.lazyHash_) {
    var a = "";
    this.getPriority().isEmpty() || (a += "priority:" + wd.core.snap.priorityHashText(this.getPriority().val()) + ":");
    this.forEachChild(wd.core.snap.PriorityIndex, function(b, c) {
      var d = c.hash();
      "" !== d && (a += ":" + b + ":" + d);
    });
    this.lazyHash_ = "" === a ? "" : wd.core.util.sha1(a);
  }
  return this.lazyHash_;
};
wd.core.snap.ChildrenNode.prototype.getPredecessorChildName = function(a, b, c) {
  return (c = this.resolveIndex_(c)) ? (a = c.getPredecessorKey(new wd.core.snap.NamedNode(a, b))) ? a.name : null : this.children_.getPredecessorKey(a);
};
wd.core.snap.ChildrenNode.prototype.getFirstChildName = function(a) {
  return (a = this.resolveIndex_(a)) ? (a = a.minKey()) && a.name : this.children_.minKey();
};
wd.core.snap.ChildrenNode.prototype.getFirstChild = function(a) {
  return (a = this.getFirstChildName(a)) ? new wd.core.snap.NamedNode(a, this.children_.get(a)) : null;
};
wd.core.snap.ChildrenNode.prototype.getLastChildName = function(a) {
  return (a = this.resolveIndex_(a)) ? (a = a.maxKey()) && a.name : this.children_.maxKey();
};
wd.core.snap.ChildrenNode.prototype.getLastChild = function(a) {
  return (a = this.getLastChildName(a)) ? new wd.core.snap.NamedNode(a, this.children_.get(a)) : null;
};
wd.core.snap.ChildrenNode.prototype.forEachChild = function(a, b) {
  var c = this.resolveIndex_(a);
  return c ? c.inorderTraversal(function(a) {
    return b(a.name, a.node);
  }) : this.children_.inorderTraversal(b);
};
wd.core.snap.ChildrenNode.prototype.getIterator = function(a) {
  return this.getIteratorFrom(a.minPost(), a);
};
wd.core.snap.ChildrenNode.prototype.getIteratorFrom = function(a, b) {
  var c = this.resolveIndex_(b);
  if (c) {
    return c.getIteratorFrom(a, function(a) {
      return a;
    });
  }
  for (var c = this.children_.getIteratorFrom(a.name, wd.core.snap.NamedNode.Wrap), d = c.peek();null != d && 0 > b.compare(d, a);) {
    c.getNext(), d = c.peek();
  }
  return c;
};
wd.core.snap.ChildrenNode.prototype.getReverseIterator = function(a) {
  return this.getReverseIteratorFrom(a.maxPost(), a);
};
wd.core.snap.ChildrenNode.prototype.getReverseIteratorFrom = function(a, b) {
  var c = this.resolveIndex_(b);
  if (c) {
    return c.getReverseIteratorFrom(a, function(a) {
      return a;
    });
  }
  for (var c = this.children_.getReverseIteratorFrom(a.name, wd.core.snap.NamedNode.Wrap), d = c.peek();null != d && 0 < b.compare(d, a);) {
    c.getNext(), d = c.peek();
  }
  return c;
};
wd.core.snap.ChildrenNode.prototype.compareTo = function(a) {
  return this.isEmpty() ? a.isEmpty() ? 0 : -1 : a.isLeafNode() || a.isEmpty() ? 1 : a === wd.core.snap.MAX_NODE ? -1 : 0;
};
wd.core.snap.ChildrenNode.prototype.withIndex = function(a) {
  if (a === wd.core.snap.KeyIndex || this.indexMap_.hasIndex(a)) {
    return this;
  }
  a = this.indexMap_.addIndex(a, this.children_);
  return new wd.core.snap.ChildrenNode(this.children_, this.priorityNode_, a);
};
wd.core.snap.ChildrenNode.prototype.isIndexed = function(a) {
  return a === wd.core.snap.KeyIndex || this.indexMap_.hasIndex(a);
};
wd.core.snap.ChildrenNode.prototype.equals = function(a) {
  if (a === this) {
    return !0;
  }
  if (a.isLeafNode()) {
    return !1;
  }
  if (this.getPriority().equals(a.getPriority()) && this.children_.count() === a.children_.count()) {
    var b = this.getIterator(wd.core.snap.PriorityIndex);
    a = a.getIterator(wd.core.snap.PriorityIndex);
    for (var c = b.getNext(), d = a.getNext();c && d;) {
      if (c.name !== d.name || !c.node.equals(d.node)) {
        return !1;
      }
      c = b.getNext();
      d = a.getNext();
    }
    return null === c && null === d;
  }
  return !1;
};
wd.core.snap.ChildrenNode.prototype.resolveIndex_ = function(a) {
  return a === wd.core.snap.KeyIndex ? null : this.indexMap_.get(a.toString());
};
goog.DEBUG && (wd.core.snap.ChildrenNode.prototype.toString = function() {
  return wd.util.json.stringify(this.val(!0));
});
var USE_HINZE = !0;
wd.core.snap.NodeFromJSON = function(a, b) {
  if (null === a) {
    return wd.core.snap.EMPTY_NODE;
  }
  var c = null;
  "object" === typeof a && ".priority" in a ? c = a[".priority"] : "undefined" !== typeof b && (c = b);
  wd.core.util.assert(null === c || "string" === typeof c || "number" === typeof c || "object" === typeof c && ".sv" in c, "Invalid priority type found: " + typeof c);
  "object" === typeof a && ".value" in a && null !== a[".value"] && (a = a[".value"]);
  if ("object" !== typeof a || ".sv" in a) {
    return new wd.core.snap.LeafNode(a, wd.core.snap.NodeFromJSON(c));
  }
  if (a instanceof Array || !USE_HINZE) {
    var d = wd.core.snap.EMPTY_NODE, e = a;
    goog.object.forEach(e, function(a, b) {
      if (wd.util.obj.contains(e, b) && "." !== b.substring(0, 1)) {
        var c = wd.core.snap.NodeFromJSON(a);
        if (c.isLeafNode() || !c.isEmpty()) {
          d = d.updateImmediateChild(b, c);
        }
      }
    });
    return d.updatePriority(wd.core.snap.NodeFromJSON(c));
  }
  var f = [], g = !1, h = a;
  wd.util.obj.foreach(h, function(a, b) {
    if ("string" !== typeof a || "." !== a.substring(0, 1)) {
      var c = wd.core.snap.NodeFromJSON(h[a]);
      c.isEmpty() || (g = g || !c.getPriority().isEmpty(), f.push(new wd.core.snap.NamedNode(a, c)));
    }
  });
  if (0 == f.length) {
    return wd.core.snap.EMPTY_NODE;
  }
  var k = wd.core.snap.buildChildSet(f, wd.core.snap.NAME_ONLY_COMPARATOR, function(a) {
    return a.name;
  }, wd.core.snap.NAME_COMPARATOR);
  if (g) {
    var l = wd.core.snap.buildChildSet(f, wd.core.snap.PriorityIndex.getCompare());
    return new wd.core.snap.ChildrenNode(k, wd.core.snap.NodeFromJSON(c), new wd.core.snap.IndexMap({".priority":l}, {".priority":wd.core.snap.PriorityIndex}));
  }
  return new wd.core.snap.ChildrenNode(k, wd.core.snap.NodeFromJSON(c), wd.core.snap.IndexMap.Default);
};
var LOG_2 = Math.log(2);
wd.core.snap.Base12Num = function(a) {
  this.count = parseInt(Math.log(a + 1) / LOG_2, 10);
  this.current_ = this.count - 1;
  var b = parseInt(Array(this.count + 1).join("1"), 2);
  this.bits_ = a + 1 & b;
};
wd.core.snap.Base12Num.prototype.nextBitIsOne = function() {
  var a = !(this.bits_ & 1 << this.current_);
  this.current_--;
  return a;
};
wd.core.snap.buildChildSet = function(a, b, c, d) {
  a.sort(b);
  var e = function(b, d) {
    var f = d - b;
    if (0 == f) {
      return null;
    }
    if (1 == f) {
      var l = a[b], m = c ? c(l) : l;
      return new wd.LLRBNode(m, l.node, wd.LLRBNode.BLACK, null, null);
    }
    var l = parseInt(f / 2, 10) + b, f = e(b, l), n = e(l + 1, d), l = a[l], m = c ? c(l) : l;
    return new wd.LLRBNode(m, l.node, wd.LLRBNode.BLACK, f, n);
  }, f = function(b) {
    for (var d = null, f = null, l = a.length, m = function(b, g) {
      var m = l - b, n = l;
      l -= b;
      var n = e(m + 1, n), m = a[m], p = c ? c(m) : m, n = new wd.LLRBNode(p, m.node, g, null, n);
      d ? d.left = n : f = n;
      d = n;
    }, n = 0;n < b.count;++n) {
      var p = b.nextBitIsOne(), q = Math.pow(2, b.count - (n + 1));
      p ? m(q, wd.LLRBNode.BLACK) : (m(q, wd.LLRBNode.BLACK), m(q, wd.LLRBNode.RED));
    }
    return f;
  }(new wd.core.snap.Base12Num(a.length));
  return null !== f ? new wd.core.util.SortedMap(d || b, f) : new wd.core.util.SortedMap(d || b);
};
wd.core.snap.priorityHashText = function(a) {
  return "number" === typeof a ? "number:" + wd.core.util.doubleToIEEE754String(a) : "string:" + a;
};
wd.core.snap.validatePriorityNode = function(a) {
  if (a.isLeafNode()) {
    var b = a.val();
    wd.core.util.assert("string" === typeof b || "number" === typeof b || "object" === typeof b && wd.util.obj.contains(b, ".sv"), "Priority must be a string or number.");
  } else {
    wd.core.util.assert(a === wd.core.snap.MAX_NODE || a.isEmpty(), "priority of unexpected type.");
  }
  wd.core.util.assert(a === wd.core.snap.MAX_NODE || a.getPriority().isEmpty(), "Priority nodes can't have a priority of their own.");
};
wd.core.snap.EMPTY_NODE = new wd.core.snap.ChildrenNode(new wd.core.util.SortedMap(wd.core.snap.NAME_COMPARATOR), null, wd.core.snap.IndexMap.Default);
wd.core.snap.MAX_NODE_ = function() {
  wd.core.snap.ChildrenNode.call(this, new wd.core.util.SortedMap(wd.core.snap.NAME_COMPARATOR), wd.core.snap.EMPTY_NODE, wd.core.snap.IndexMap.Default);
};
goog.inherits(wd.core.snap.MAX_NODE_, wd.core.snap.ChildrenNode);
wd.core.snap.MAX_NODE_.prototype.compareTo = function(a) {
  return a === this ? 0 : 1;
};
wd.core.snap.MAX_NODE_.prototype.equals = function(a) {
  return a === this;
};
wd.core.snap.MAX_NODE_.prototype.getPriority = function() {
  return this;
};
wd.core.snap.MAX_NODE_.prototype.getImmediateChild = function(a) {
  return wd.core.snap.EMPTY_NODE;
};
wd.core.snap.MAX_NODE_.prototype.isEmpty = function() {
  return !1;
};
wd.core.snap.MAX_NODE = new wd.core.snap.MAX_NODE_;
wd.core.snap.NamedNode.MIN = new wd.core.snap.NamedNode(wd.core.util.MIN_NAME, wd.core.snap.EMPTY_NODE);
wd.core.snap.NamedNode.MAX = new wd.core.snap.NamedNode(wd.core.util.MAX_NAME, wd.core.snap.MAX_NODE);
wd.core.util.CountedSet = function() {
  this.set = {};
};
wd.core.util.CountedSet.prototype.add = function(a, b) {
  this.set[a] = null !== b ? b : !0;
};
wd.core.util.CountedSet.prototype.contains = function(a) {
  return wd.util.obj.contains(this.set, a);
};
wd.core.util.CountedSet.prototype.get = function(a) {
  return this.contains(a) ? this.set[a] : void 0;
};
wd.core.util.CountedSet.prototype.remove = function(a) {
  delete this.set[a];
};
wd.core.util.CountedSet.prototype.clear = function() {
  this.set = {};
};
wd.core.util.CountedSet.prototype.isEmpty = function() {
  return goog.object.isEmpty(this.set);
};
wd.core.util.CountedSet.prototype.count = function() {
  return goog.object.getCount(this.set);
};
wd.core.util.CountedSet.prototype.each = function(a) {
  goog.object.forEach(this.set, function(b, c) {
    a(c, b);
  });
};
wd.core.util.CountedSet.prototype.keys = function() {
  var a = [];
  goog.object.forEach(this.set, function(b, c) {
    a.push(c);
  });
  return a;
};
wd.core.SparseSnapshotTree = function() {
  this.children_ = this.value_ = null;
};
wd.core.SparseSnapshotTree.prototype.find = function(a) {
  if (null != this.value_) {
    return this.value_.getChild(a);
  }
  if (a.isEmpty() || null == this.children_) {
    return null;
  }
  var b = a.getFront();
  a = a.popFront();
  return this.children_.contains(b) ? this.children_.get(b).find(a) : null;
};
wd.core.SparseSnapshotTree.prototype.remember = function(a, b) {
  if (a.isEmpty()) {
    this.value_ = b, this.children_ = null;
  } else {
    if (null !== this.value_) {
      this.value_ = this.value_.updateChild(a, b);
    } else {
      null == this.children_ && (this.children_ = new wd.core.util.CountedSet);
      var c = a.getFront();
      this.children_.contains(c) || this.children_.add(c, new wd.core.SparseSnapshotTree);
      c = this.children_.get(c);
      a = a.popFront();
      c.remember(a, b);
    }
  }
};
wd.core.SparseSnapshotTree.prototype.forget = function(a) {
  if (a.isEmpty()) {
    return this.children_ = this.value_ = null, !0;
  }
  if (null !== this.value_) {
    if (this.value_.isLeafNode()) {
      return !1;
    }
    var b = this.value_;
    this.value_ = null;
    var c = this;
    b.forEachChild(wd.core.snap.PriorityIndex, function(a, b) {
      c.remember(new wd.core.util.Path(a), b);
    });
    return this.forget(a);
  }
  return null !== this.children_ ? (b = a.getFront(), a = a.popFront(), this.children_.contains(b) && this.children_.get(b).forget(a) && this.children_.remove(b), this.children_.isEmpty() ? (this.children_ = null, !0) : !1) : !0;
};
wd.core.SparseSnapshotTree.prototype.forEachTree = function(a, b) {
  null !== this.value_ ? b(a, this.value_) : this.forEachChild(function(c, d) {
    var e = new wd.core.util.Path(a.toString() + "/" + c);
    d.forEachTree(e, b);
  });
};
wd.core.SparseSnapshotTree.prototype.forEachChild = function(a) {
  null !== this.children_ && this.children_.each(function(b, c) {
    a(b, c);
  });
};
wd.core.util.EventEmitter = function(a) {
  wd.core.util.assert(goog.isArray(a) && 0 < a.length, "Requires a non-empty array");
  this.allowedEvents_ = a;
  this.listeners_ = {};
};
wd.core.util.EventEmitter.prototype.trigger = function(a, b) {
  for (var c = this.listeners_[a] || [], d = 0;d < c.length;d++) {
    c[d].callback.apply(c[d].context, Array.prototype.slice.call(arguments, 1));
  }
};
wd.core.util.EventEmitter.prototype.on = function(a, b, c) {
  this.validateEventType_(a);
  this.listeners_[a] = this.listeners_[a] || [];
  this.listeners_[a].push({callback:b, context:c});
  (a = this.getInitialEvent(a)) && b.apply(c, a);
};
wd.core.util.EventEmitter.prototype.off = function(a, b, c) {
  this.validateEventType_(a);
  a = this.listeners_[a] || [];
  for (var d = 0;d < a.length;d++) {
    if (a[d].callback === b && (!c || c === a[d].context)) {
      a.splice(d, 1);
      break;
    }
  }
};
wd.core.util.EventEmitter.prototype.validateEventType_ = function(a) {
  wd.core.util.assert(goog.array.find(this.allowedEvents_, function(b) {
    return b === a;
  }), "Unknown event: " + a);
};
wd.app = {};
wd.app.App = function(a, b) {
  wd.core.util.EventEmitter.call(this, ["authStateChanged", "authTokenExpired"]);
  this.__status = {signed:!1};
  this.__emits = {};
  Object.defineProperty(this, "name", {value:b, writable:!1});
  Object.defineProperty(this, "options", {value:a, writable:!1});
  var c = this;
  ["auth", "sync"].forEach(function(a) {
    c[a] = function() {
      var b = "__" + a, f = goog.global.wilddog.__getService(a);
      if (!f) {
        throw Error("Could not found module " + a);
      }
      c[b] || (c[b] = f(this));
      return c[b];
    };
  });
};
goog.inherits(wd.app.App, wd.core.util.EventEmitter);
wd.app.App.prototype.emit = function(a, b) {
  var c = !0, d;
  for (d in wd.app.App.EventType) {
    if (wd.app.App.EventType.hasOwnProperty(d) && wd.app.App.EventType[d] === a) {
      c = !1;
      break;
    }
  }
  if (c) {
    throw Error("Unknown event " + a);
  }
  this.__emits[a] = b;
  switch(a) {
    case wd.app.App.EventType.authStateChanged:
      this.__status.signed = b && b.signed;
  }
  this.trigger(a, b);
};
goog.exportProperty(wd.app.App.prototype, "emit", wd.app.App.prototype.emit);
wd.app.App.prototype.bind = function(a, b) {
  this.on(a, b);
};
goog.exportProperty(wd.app.App.prototype, "bind", wd.app.App.prototype.bind);
wd.app.App.prototype.unbind = function(a, b) {
  this.off(a, b);
};
goog.exportProperty(wd.app.App.prototype, "unbind", wd.app.App.prototype.unbind);
wd.app.App.prototype.getInitialEvent = function(a) {
  switch(a) {
    case wd.app.App.EventType.authStateChanged:
      return [this.__emits[wd.app.App.EventType.authStateChanged]];
  }
  return null;
};
wd.app.App.prototype.isSigned = function() {
  return this.__status.signed;
};
wd.app.App.EventType = {authStateChanged:"authStateChanged", authTokenExpired:"authTokenExpired"};
wd.wilddog = function() {
  var a = "undefined" !== typeof window ? window : global;
  if (!a.wilddog) {
    a.wilddog = {};
    var b = {};
    a.wilddog.initializeApp = function(b, d) {
      var e = d || "DEFAULT";
      a.wilddog[e] = new wd.app.App(b, e);
      return a.wilddog[e];
    };
    a.wilddog.__regService = function(a, d) {
      b[a] = d;
    };
    a.wilddog.__getService = function(a) {
      return b[a];
    };
    ["auth", "sync"].forEach(function(b) {
      a.wilddog[b] = function() {
        if (!a.wilddog.DEFAULT) {
          throw Error("App has not been initialized.");
        }
        return a.wilddog.DEFAULT[b]();
      };
    });
    goog.global.wilddog = a.wilddog;
  }
  return a.wilddog || goog.global.wilddog;
};
wd.core.util.ImmutableTree = function(a, b) {
  this.value = a;
  this.children = b || wd.core.util.ImmutableTree.EmptyChildren_;
};
wd.core.util.ImmutableTree.EmptyChildren_ = new wd.core.util.SortedMap(wd.core.util.stringCompare);
wd.core.util.ImmutableTree.fromObject = function(a) {
  var b = wd.core.util.ImmutableTree.Empty;
  goog.object.forEach(a, function(a, d) {
    b = b.set(new wd.core.util.Path(d), a);
  });
  return b;
};
wd.core.util.ImmutableTree.prototype.isEmpty = function() {
  return null === this.value && this.children.isEmpty();
};
wd.core.util.ImmutableTree.prototype.findRootMostMatchingPathAndValue = function(a, b) {
  if (null != this.value && b(this.value)) {
    return {path:wd.core.util.Path.Empty, value:this.value};
  }
  if (a.isEmpty()) {
    return null;
  }
  var c = a.getFront(), d = this.children.get(c);
  return null !== d ? (d = d.findRootMostMatchingPathAndValue(a.popFront(), b), null != d ? {path:(new wd.core.util.Path(c)).child(d.path), value:d.value} : null) : null;
};
wd.core.util.ImmutableTree.prototype.findRootMostValueAndPath = function(a) {
  return this.findRootMostMatchingPathAndValue(a, function() {
    return !0;
  });
};
wd.core.util.ImmutableTree.prototype.subtree = function(a) {
  if (a.isEmpty()) {
    return this;
  }
  var b = a.getFront(), b = this.children.get(b);
  return null !== b ? b.subtree(a.popFront()) : wd.core.util.ImmutableTree.Empty;
};
wd.core.util.ImmutableTree.prototype.set = function(a, b) {
  if (a.isEmpty()) {
    return new wd.core.util.ImmutableTree(b, this.children);
  }
  var c = a.getFront(), d = (this.children.get(c) || wd.core.util.ImmutableTree.Empty).set(a.popFront(), b), c = this.children.insert(c, d);
  return new wd.core.util.ImmutableTree(this.value, c);
};
wd.core.util.ImmutableTree.prototype.remove = function(a) {
  if (a.isEmpty()) {
    return this.children.isEmpty() ? wd.core.util.ImmutableTree.Empty : new wd.core.util.ImmutableTree(null, this.children);
  }
  var b = a.getFront(), c = this.children.get(b);
  return c ? (a = c.remove(a.popFront()), b = a.isEmpty() ? this.children.remove(b) : this.children.insert(b, a), null === this.value && b.isEmpty() ? wd.core.util.ImmutableTree.Empty : new wd.core.util.ImmutableTree(this.value, b)) : this;
};
wd.core.util.ImmutableTree.prototype.get = function(a) {
  if (a.isEmpty()) {
    return this.value;
  }
  var b = a.getFront();
  return (b = this.children.get(b)) ? b.get(a.popFront()) : null;
};
wd.core.util.ImmutableTree.prototype.setTree = function(a, b) {
  if (a.isEmpty()) {
    return b;
  }
  var c = a.getFront(), d = (this.children.get(c) || wd.core.util.ImmutableTree.Empty).setTree(a.popFront(), b), c = d.isEmpty() ? this.children.remove(c) : this.children.insert(c, d);
  return new wd.core.util.ImmutableTree(this.value, c);
};
wd.core.util.ImmutableTree.prototype.fold = function(a) {
  return this.fold_(wd.core.util.Path.Empty, a);
};
wd.core.util.ImmutableTree.prototype.fold_ = function(a, b) {
  var c = {};
  this.children.inorderTraversal(function(d, e) {
    c[d] = e.fold_(a.child(d), b);
  });
  return b(a, this.value, c);
};
wd.core.util.ImmutableTree.prototype.findOnPath = function(a, b) {
  return this.findOnPath_(a, wd.core.util.Path.Empty, b);
};
wd.core.util.ImmutableTree.prototype.findOnPath_ = function(a, b, c) {
  var d = this.value ? c(b, this.value) : !1;
  if (d) {
    return d;
  }
  if (a.isEmpty()) {
    return null;
  }
  var d = a.getFront(), e = this.children.get(d);
  return e ? e.findOnPath_(a.popFront(), b.child(d), c) : null;
};
wd.core.util.ImmutableTree.prototype.foreachOnPathWhile = function(a, b) {
  return this.foreachOnPathWhile_(a, wd.core.util.Path.Empty, b);
};
wd.core.util.ImmutableTree.prototype.foreachOnPathWhile_ = function(a, b, c) {
  if (a.isEmpty()) {
    return b;
  }
  var d = !0;
  this.value && (d = c(b, this.value));
  if (!0 === d) {
    var d = a.getFront(), e = this.children.get(d);
    return e ? e.foreachOnPath_(a.popFront(), b.child(d), c) : b;
  }
  return b;
};
wd.core.util.ImmutableTree.prototype.foreachOnPath = function(a, b) {
  return this.foreachOnPath_(a, wd.core.util.Path.Empty, b);
};
wd.core.util.ImmutableTree.prototype.foreachOnPath_ = function(a, b, c) {
  if (a.isEmpty()) {
    return this;
  }
  this.value && c(b, this.value);
  var d = a.getFront(), e = this.children.get(d);
  return e ? e.foreachOnPath_(a.popFront(), b.child(d), c) : wd.core.util.ImmutableTree.Empty;
};
wd.core.util.ImmutableTree.prototype.foreach = function(a) {
  this.foreach_(wd.core.util.Path.Empty, a);
};
wd.core.util.ImmutableTree.prototype.foreach_ = function(a, b) {
  this.children.inorderTraversal(function(c, d) {
    d.foreach_(a.child(c), b);
  });
  this.value && b(a, this.value);
};
wd.core.util.ImmutableTree.prototype.foreachChild = function(a) {
  this.children.inorderTraversal(function(b, c) {
    c.value && a(b, c.value);
  });
};
wd.core.util.ImmutableTree.Empty = new wd.core.util.ImmutableTree(null);
goog.DEBUG && (wd.core.util.ImmutableTree.prototype.toString = function() {
  var a = {};
  this.foreach(function(b, c) {
    a[b.toString()] = c.toString();
  });
  return wd.util.json.stringify(a);
});
wd.core.CompoundWrite = function(a) {
  this.writeTree_ = a;
};
wd.core.CompoundWrite.Empty = new wd.core.CompoundWrite(new wd.core.util.ImmutableTree(null));
wd.core.CompoundWrite.prototype.addWrite = function(a, b) {
  if (a.isEmpty()) {
    return new wd.core.CompoundWrite(new wd.core.util.ImmutableTree(b));
  }
  var c = this.writeTree_.findRootMostValueAndPath(a);
  if (null != c) {
    var d = c.path, c = c.value, e = wd.core.util.Path.relativePath(d, a), c = c.updateChild(e, b);
    return new wd.core.CompoundWrite(this.writeTree_.set(d, c));
  }
  d = new wd.core.util.ImmutableTree(b);
  d = this.writeTree_.setTree(a, d);
  return new wd.core.CompoundWrite(d);
};
wd.core.CompoundWrite.prototype.addWrites = function(a, b) {
  var c = this;
  wd.util.obj.foreach(b, function(b, e) {
    c = c.addWrite(a.child(b), e);
  });
  return c;
};
wd.core.CompoundWrite.prototype.removeWrite = function(a) {
  if (a.isEmpty()) {
    return wd.core.CompoundWrite.Empty;
  }
  a = this.writeTree_.setTree(a, wd.core.util.ImmutableTree.Empty);
  return new wd.core.CompoundWrite(a);
};
wd.core.CompoundWrite.prototype.hasCompleteWrite = function(a) {
  return null != this.getCompleteNode(a);
};
wd.core.CompoundWrite.prototype.getCompleteNode = function(a) {
  var b = this.writeTree_.findRootMostValueAndPath(a);
  return null != b ? this.writeTree_.get(b.path).getChild(wd.core.util.Path.relativePath(b.path, a)) : null;
};
wd.core.CompoundWrite.prototype.getCompleteChildren = function() {
  var a = [], b = this.writeTree_.value;
  null != b ? b.isLeafNode() || b.forEachChild(wd.core.snap.PriorityIndex, function(b, d) {
    a.push(new wd.core.snap.NamedNode(b, d));
  }) : this.writeTree_.children.inorderTraversal(function(b, d) {
    null != d.value && a.push(new wd.core.snap.NamedNode(b, d.value));
  });
  return a;
};
wd.core.CompoundWrite.prototype.childCompoundWrite = function(a) {
  if (a.isEmpty()) {
    return this;
  }
  var b = this.getCompleteNode(a);
  return null != b ? new wd.core.CompoundWrite(new wd.core.util.ImmutableTree(b)) : new wd.core.CompoundWrite(this.writeTree_.subtree(a));
};
wd.core.CompoundWrite.prototype.isEmpty = function() {
  return this.writeTree_.isEmpty();
};
wd.core.CompoundWrite.prototype.apply = function(a) {
  return wd.core.CompoundWrite.applySubtreeWrite_(wd.core.util.Path.Empty, this.writeTree_, a);
};
wd.core.CompoundWrite.applySubtreeWrite_ = function(a, b, c) {
  if (null != b.value) {
    return c.updateChild(a, b.value);
  }
  var d = null;
  b.children.inorderTraversal(function(b, f) {
    ".priority" === b ? (wd.core.util.assert(null !== f.value, "Priority writes must always be leaf nodes"), d = f.value) : c = wd.core.CompoundWrite.applySubtreeWrite_(a.child(b), f, c);
  });
  c.getChild(a).isEmpty() || null === d || (c = c.updateChild(a.child(".priority"), d));
  return c;
};
wd.core.WriteRecord;
wd.core.WriteTree = function() {
  this.visibleWrites_ = wd.core.CompoundWrite.Empty;
  this.allWrites_ = [];
  this.lastWriteId_ = -1;
};
wd.core.WriteTree.prototype.childWrites = function(a) {
  return new wd.core.WriteTreeRef(a, this);
};
wd.core.WriteTree.prototype.addOverwrite = function(a, b, c, d) {
  wd.core.util.assert(c > this.lastWriteId_, "Stacking an older write on top of newer ones");
  goog.isDef(d) || (d = !0);
  this.allWrites_.push({path:a, snap:b, writeId:c, visible:d});
  d && (this.visibleWrites_ = this.visibleWrites_.addWrite(a, b));
  this.lastWriteId_ = c;
};
wd.core.WriteTree.prototype.addMerge = function(a, b, c) {
  wd.core.util.assert(c > this.lastWriteId_, "Stacking an older merge on top of newer ones");
  this.allWrites_.push({path:a, children:b, writeId:c, visible:!0});
  this.visibleWrites_ = this.visibleWrites_.addWrites(a, b);
  this.lastWriteId_ = c;
};
wd.core.WriteTree.prototype.removeWrite = function(a) {
  var b = goog.array.findIndex(this.allWrites_, function(b) {
    return b.writeId === a;
  });
  wd.core.util.assert(0 <= b, "removeWrite called with nonexistent writeId.");
  var c = this.allWrites_[b];
  this.allWrites_.splice(b, 1);
  for (var d = c.visible, e = !1, f = this.allWrites_.length - 1;d && 0 <= f;) {
    var g = this.allWrites_[f];
    g.visible && (f >= b && this.recordContainsPath_(g, c.path) ? d = !1 : c.path.contains(g.path) && (e = !0));
    f--;
  }
  if (d) {
    if (e) {
      this.resetTree_();
    } else {
      if (c.snap) {
        this.visibleWrites_ = this.visibleWrites_.removeWrite(c.path);
      } else {
        var h = this;
        goog.object.forEach(c.children, function(a, b) {
          h.visibleWrites_ = h.visibleWrites_.removeWrite(c.path.child(b));
        });
      }
    }
    return c.path;
  }
  return null;
};
wd.core.WriteTree.prototype.getCompleteWriteData = function(a) {
  return this.visibleWrites_.getCompleteNode(a);
};
wd.core.WriteTree.prototype.calcCompleteEventCache = function(a, b, c, d) {
  if (c || d) {
    var e = this.visibleWrites_.childCompoundWrite(a);
    return !d && e.isEmpty() ? b : d || null != b || e.hasCompleteWrite(wd.core.util.Path.Empty) ? (e = wd.core.WriteTree.layerTree_(this.allWrites_, function(b) {
      return (b.visible || d) && (!c || !goog.array.contains(c, b.writeId)) && (b.path.contains(a) || a.contains(b.path));
    }, a), b = b || wd.core.snap.EMPTY_NODE, e.apply(b)) : null;
  }
  e = this.visibleWrites_.getCompleteNode(a);
  if (null != e) {
    return e;
  }
  e = this.visibleWrites_.childCompoundWrite(a);
  return e.isEmpty() ? b : null != b || e.hasCompleteWrite(wd.core.util.Path.Empty) ? (b = b || wd.core.snap.EMPTY_NODE, e.apply(b)) : null;
};
wd.core.WriteTree.prototype.calcCompleteEventChildren = function(a, b) {
  var c = wd.core.snap.EMPTY_NODE, d = this.visibleWrites_.getCompleteNode(a);
  if (d) {
    d.isLeafNode() || d.forEachChild(wd.core.snap.PriorityIndex, function(a, b) {
      c = c.updateImmediateChild(a, b);
    });
  } else {
    if (b) {
      var e = this.visibleWrites_.childCompoundWrite(a);
      b.forEachChild(wd.core.snap.PriorityIndex, function(a, b) {
        var d = e.childCompoundWrite(new wd.core.util.Path(a)).apply(b);
        c = c.updateImmediateChild(a, d);
      });
      goog.array.forEach(e.getCompleteChildren(), function(a) {
        c = c.updateImmediateChild(a.name, a.node);
      });
    } else {
      e = this.visibleWrites_.childCompoundWrite(a), goog.array.forEach(e.getCompleteChildren(), function(a) {
        c = c.updateImmediateChild(a.name, a.node);
      });
    }
  }
  return c;
};
wd.core.WriteTree.prototype.calcEventCacheAfterServerOverwrite = function(a, b, c, d) {
  wd.core.util.assert(c || d, "Either existingEventSnap or existingServerSnap must exist");
  a = a.child(b);
  if (this.visibleWrites_.hasCompleteWrite(a)) {
    return null;
  }
  a = this.visibleWrites_.childCompoundWrite(a);
  return a.isEmpty() ? d.getChild(b) : a.apply(d.getChild(b));
};
wd.core.WriteTree.prototype.calcCompleteChild = function(a, b, c) {
  a = a.child(b);
  var d = this.visibleWrites_.getCompleteNode(a);
  return null != d ? d : c.isCompleteForChild(b) ? this.visibleWrites_.childCompoundWrite(a).apply(c.getNode().getImmediateChild(b)) : null;
};
wd.core.WriteTree.prototype.shadowingWrite = function(a) {
  return this.visibleWrites_.getCompleteNode(a);
};
wd.core.WriteTree.prototype.calcIndexedSlice = function(a, b, c, d, e, f) {
  var g;
  a = this.visibleWrites_.childCompoundWrite(a);
  g = a.getCompleteNode(wd.core.util.Path.Empty);
  if (null == g) {
    if (null != b) {
      g = a.apply(b);
    } else {
      return [];
    }
  }
  g = g.withIndex(f);
  if (g.isEmpty() || g.isLeafNode()) {
    return [];
  }
  b = [];
  a = f.getCompare();
  e = e ? g.getReverseIteratorFrom(c, f) : g.getIteratorFrom(c, f);
  for (f = e.getNext();f && b.length < d;) {
    0 !== a(f, c) && b.push(f), f = e.getNext();
  }
  return b;
};
wd.core.WriteTree.prototype.recordContainsPath_ = function(a, b) {
  return a.snap ? a.path.contains(b) : !!goog.object.findKey(a.children, function(c, d) {
    return a.path.child(d).contains(b);
  });
};
wd.core.WriteTree.prototype.resetTree_ = function() {
  this.visibleWrites_ = wd.core.WriteTree.layerTree_(this.allWrites_, wd.core.WriteTree.DefaultFilter_, wd.core.util.Path.Empty);
  this.lastWriteId_ = 0 < this.allWrites_.length ? this.allWrites_[this.allWrites_.length - 1].writeId : -1;
};
wd.core.WriteTree.DefaultFilter_ = function(a) {
  return a.visible;
};
wd.core.WriteTree.layerTree_ = function(a, b, c) {
  for (var d = wd.core.CompoundWrite.Empty, e = 0;e < a.length;++e) {
    var f = a[e];
    if (b(f)) {
      var g = f.path;
      if (f.snap) {
        c.contains(g) ? (g = wd.core.util.Path.relativePath(c, g), d = d.addWrite(g, f.snap)) : g.contains(c) && (g = wd.core.util.Path.relativePath(g, c), d = d.addWrite(wd.core.util.Path.Empty, f.snap.getChild(g)));
      } else {
        if (f.children) {
          if (c.contains(g)) {
            g = wd.core.util.Path.relativePath(c, g), d = d.addWrites(g, f.children);
          } else {
            if (g.contains(c)) {
              if (g = wd.core.util.Path.relativePath(g, c), g.isEmpty()) {
                d = d.addWrites(wd.core.util.Path.Empty, f.children);
              } else {
                if (f = wd.util.obj.get(f.children, g.getFront())) {
                  f = f.getChild(g.popFront()), d = d.addWrite(wd.core.util.Path.Empty, f);
                }
              }
            }
          }
        } else {
          throw wd.core.util.assertionError("WriteRecord should have .snap or .children");
        }
      }
    }
  }
  return d;
};
wd.core.WriteTreeRef = function(a, b) {
  this.treePath_ = a;
  this.writeTree_ = b;
};
wd.core.WriteTreeRef.prototype.calcCompleteEventCache = function(a, b, c) {
  return this.writeTree_.calcCompleteEventCache(this.treePath_, a, b, c);
};
wd.core.WriteTreeRef.prototype.calcCompleteEventChildren = function(a) {
  return this.writeTree_.calcCompleteEventChildren(this.treePath_, a);
};
wd.core.WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function(a, b, c) {
  return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, a, b, c);
};
wd.core.WriteTreeRef.prototype.shadowingWrite = function(a) {
  return this.writeTree_.shadowingWrite(this.treePath_.child(a));
};
wd.core.WriteTreeRef.prototype.calcIndexedSlice = function(a, b, c, d, e) {
  return this.writeTree_.calcIndexedSlice(this.treePath_, a, b, c, d, e);
};
wd.core.WriteTreeRef.prototype.calcCompleteChild = function(a, b) {
  return this.writeTree_.calcCompleteChild(this.treePath_, a, b);
};
wd.core.WriteTreeRef.prototype.child = function(a) {
  return new wd.core.WriteTreeRef(this.treePath_.child(a), this.writeTree_);
};
wd.core.util.OnlineMonitor = function() {
  wd.core.util.EventEmitter.call(this, ["online"]);
  this.online_ = !0;
  if ("undefined" !== typeof window && "undefined" !== typeof window.addEventListener) {
    var a = this;
    window.addEventListener("online", function() {
      a.online_ || (a.online_ = !0, a.trigger("online", !0));
    }, !1);
    window.addEventListener("offline", function() {
      a.online_ && (a.online_ = !1, a.trigger("online", !1));
    }, !1);
  }
};
goog.inherits(wd.core.util.OnlineMonitor, wd.core.util.EventEmitter);
wd.core.util.OnlineMonitor.prototype.getInitialEvent = function(a) {
  wd.core.util.assert("online" === a, "Unknown event type: " + a);
  return [this.online_];
};
wd.core.util.OnlineMonitor.prototype.currentlyOnline = function() {
  return this.online_;
};
goog.addSingletonGetter(wd.core.util.OnlineMonitor);
wd.core.util.TreeNode = function() {
  this.children = {};
  this.childCount = 0;
  this.value = null;
};
wd.core.util.Tree = function(a, b, c) {
  this.name_ = a ? a : "";
  this.parent_ = b ? b : null;
  this.node_ = c ? c : new wd.core.util.TreeNode;
};
wd.core.util.Tree.prototype.subTree = function(a) {
  a = a instanceof wd.core.util.Path ? a : new wd.core.util.Path(a);
  for (var b = this, c;null !== (c = a.getFront());) {
    var d = wd.util.obj.get(b.node_.children, c) || new wd.core.util.TreeNode, b = new wd.core.util.Tree(c, b, d);
    a = a.popFront();
  }
  return b;
};
wd.core.util.Tree.prototype.getValue = function() {
  return this.node_.value;
};
wd.core.util.Tree.prototype.setValue = function(a) {
  wd.core.util.assert("undefined" !== typeof a, "Cannot set value to undefined");
  this.node_.value = a;
  this.updateParents_();
};
wd.core.util.Tree.prototype.clear = function() {
  this.node_.value = null;
  this.node_.children = {};
  this.node_.childCount = 0;
  this.updateParents_();
};
wd.core.util.Tree.prototype.hasChildren = function() {
  return 0 < this.node_.childCount;
};
wd.core.util.Tree.prototype.isEmpty = function() {
  return null === this.getValue() && !this.hasChildren();
};
wd.core.util.Tree.prototype.forEachChild = function(a) {
  var b = this;
  goog.object.forEach(this.node_.children, function(c, d) {
    a(new wd.core.util.Tree(d, b, c));
  });
};
wd.core.util.Tree.prototype.forEachDescendant = function(a, b, c) {
  b && !c && a(this);
  this.forEachChild(function(b) {
    b.forEachDescendant(a, !0, c);
  });
  b && c && a(this);
};
wd.core.util.Tree.prototype.forEachAncestor = function(a, b) {
  for (var c = b ? this : this.parent();null !== c;) {
    if (a(c)) {
      return !0;
    }
    c = c.parent();
  }
  return !1;
};
wd.core.util.Tree.prototype.forEachImmediateDescendantWithValue = function(a) {
  this.forEachChild(function(b) {
    null !== b.getValue() ? a(b) : b.forEachImmediateDescendantWithValue(a);
  });
};
wd.core.util.Tree.prototype.path = function() {
  return new wd.core.util.Path(null === this.parent_ ? this.name_ : this.parent_.path() + "/" + this.name_);
};
wd.core.util.Tree.prototype.name = function() {
  return this.name_;
};
wd.core.util.Tree.prototype.parent = function() {
  return this.parent_;
};
wd.core.util.Tree.prototype.updateParents_ = function() {
  null !== this.parent_ && this.parent_.updateChild_(this.name_, this);
};
wd.core.util.Tree.prototype.updateChild_ = function(a, b) {
  var c = b.isEmpty(), d = wd.util.obj.contains(this.node_.children, a);
  c && d ? (delete this.node_.children[a], this.node_.childCount--, this.updateParents_()) : c || d || (this.node_.children[a] = b.node_, this.node_.childCount++, this.updateParents_());
};
wd.core.util.VisibilityMonitor = function() {
  wd.core.util.EventEmitter.call(this, ["visible"]);
  var a, b;
  "undefined" !== typeof document && "undefined" !== typeof document.addEventListener && ("undefined" !== typeof document.hidden ? (b = "visibilitychange", a = "hidden") : "undefined" !== typeof document.mozHidden ? (b = "mozvisibilitychange", a = "mozHidden") : "undefined" !== typeof document.msHidden ? (b = "msvisibilitychange", a = "msHidden") : "undefined" !== typeof document.webkitHidden && (b = "webkitvisibilitychange", a = "webkitHidden"));
  this.visible_ = !0;
  if (b) {
    var c = this;
    document.addEventListener(b, function() {
      var b = !document[a];
      b !== c.visible_ && (c.visible_ = b, c.trigger("visible", b));
    }, !1);
  }
};
goog.inherits(wd.core.util.VisibilityMonitor, wd.core.util.EventEmitter);
wd.core.util.VisibilityMonitor.prototype.getInitialEvent = function(a) {
  wd.core.util.assert("visible" === a, "Unknown event type: " + a);
  return [this.visible_];
};
goog.addSingletonGetter(wd.core.util.VisibilityMonitor);
wd.core.util.nextPushId = function() {
  var a = 0, b = [];
  return function(c) {
    var d = c === a;
    a = c;
    for (var e = Array(8), f = 7;0 <= f;f--) {
      e[f] = "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(c % 64), c = Math.floor(c / 64);
    }
    wd.core.util.assert(0 === c, "Cannot push at time == 0");
    c = e.join("");
    if (d) {
      for (f = 11;0 <= f && 63 === b[f];f--) {
        b[f] = 0;
      }
      b[f]++;
    } else {
      for (f = 0;12 > f;f++) {
        b[f] = Math.floor(64 * Math.random());
      }
    }
    for (f = 0;12 > f;f++) {
      c += "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(b[f]);
    }
    wd.core.util.assert(20 === c.length, "nextPushId: Length should be 20.");
    return c;
  };
}();
wd.core.view.ChildChangeAccumulator = function() {
  this.changeMap_ = {};
};
wd.core.view.ChildChangeAccumulator.prototype.trackChildChange = function(a) {
  var b = wd.core.view.Change, c = a.type, d = a.childName;
  wd.core.util.assert(c == wd.core.view.Change.CHILD_ADDED || c == wd.core.view.Change.CHILD_CHANGED || c == wd.core.view.Change.CHILD_REMOVED, "Only child changes supported for tracking");
  wd.core.util.assert(".priority" !== d, "Only non-priority child changes can be tracked.");
  var e = wd.util.obj.get(this.changeMap_, d);
  if (e) {
    var f = e.type;
    if (c == b.CHILD_ADDED && f == b.CHILD_REMOVED) {
      this.changeMap_[d] = b.childChangedChange(d, a.snapshotNode, e.snapshotNode);
    } else {
      if (c == b.CHILD_REMOVED && f == b.CHILD_ADDED) {
        delete this.changeMap_[d];
      } else {
        if (c == b.CHILD_REMOVED && f == b.CHILD_CHANGED) {
          this.changeMap_[d] = b.childRemovedChange(d, e.oldSnap);
        } else {
          if (c == b.CHILD_CHANGED && f == b.CHILD_ADDED) {
            this.changeMap_[d] = b.childAddedChange(d, a.snapshotNode);
          } else {
            if (c == b.CHILD_CHANGED && f == b.CHILD_CHANGED) {
              this.changeMap_[d] = b.childChangedChange(d, a.snapshotNode, e.oldSnap);
            } else {
              throw wd.core.util.assertionError("Illegal combination of changes: " + a + " occurred after " + e);
            }
          }
        }
      }
    }
  } else {
    this.changeMap_[d] = a;
  }
};
wd.core.view.ChildChangeAccumulator.prototype.getChanges = function() {
  return goog.object.getValues(this.changeMap_);
};
wd.core.view.EventGenerator = function(a) {
  this.query_ = a;
  this.index_ = a.getQueryParams().getIndex();
};
wd.core.view.EventGenerator.prototype.generateEventsForChanges = function(a, b, c) {
  var d = [], e = this, f = [];
  goog.array.forEach(a, function(a) {
    a.type === wd.core.view.Change.CHILD_CHANGED && e.index_.indexedValueChanged(a.oldSnap, a.snapshotNode) && f.push(wd.core.view.Change.childMovedChange(a.childName, a.snapshotNode));
  });
  this.generateEventsForType_(d, wd.core.view.Change.CHILD_REMOVED, a, c, b);
  this.generateEventsForType_(d, wd.core.view.Change.CHILD_ADDED, a, c, b);
  this.generateEventsForType_(d, wd.core.view.Change.CHILD_MOVED, f, c, b);
  this.generateEventsForType_(d, wd.core.view.Change.CHILD_CHANGED, a, c, b);
  this.generateEventsForType_(d, wd.core.view.Change.VALUE, a, c, b);
  return d;
};
wd.core.view.EventGenerator.prototype.generateEventsForType_ = function(a, b, c, d, e) {
  c = goog.array.filter(c, function(a) {
    return a.type === b;
  });
  var f = this;
  goog.array.sort(c, goog.bind(this.compareChanges_, this));
  goog.array.forEach(c, function(b) {
    var c = f.materializeSingleChange_(b, e);
    goog.array.forEach(d, function(d) {
      d.respondsTo(b.type) && a.push(d.createEvent(c, f.query_));
    });
  });
};
wd.core.view.EventGenerator.prototype.materializeSingleChange_ = function(a, b) {
  "value" !== a.type && "child_removed" !== a.type && (a.prevName = b.getPredecessorChildName(a.childName, a.snapshotNode, this.index_));
  return a;
};
wd.core.view.EventGenerator.prototype.compareChanges_ = function(a, b) {
  if (null == a.childName || null == b.childName) {
    throw wd.core.util.assertionError("Should only compare child_ events.");
  }
  var c = new wd.core.snap.NamedNode(a.childName, a.snapshotNode), d = new wd.core.snap.NamedNode(b.childName, b.snapshotNode);
  return this.index_.compare(c, d);
};
wd.core.view.EventRegistration = function() {
};
wd.core.view.EventRegistration.prototype.respondsTo;
wd.core.view.EventRegistration.prototype.createEvent;
wd.core.view.EventRegistration.prototype.getEventRunner;
wd.core.view.EventRegistration.prototype.createCancelEvent;
wd.core.view.EventRegistration.prototype.matches;
wd.core.view.EventRegistration.prototype.hasAnyCallback;
wd.core.view.ValueEventRegistration = function(a, b, c) {
  this.callback_ = a;
  this.cancelCallback_ = b;
  this.context_ = c || null;
};
wd.core.view.ValueEventRegistration.prototype.respondsTo = function(a) {
  return "value" === a;
};
wd.core.view.ValueEventRegistration.prototype.createEvent = function(a, b) {
  var c = b.getQueryParams().getIndex();
  return new wd.core.view.DataEvent("value", this, new wd.api.DataSnapshot(a.snapshotNode, b.ref(), c));
};
wd.core.view.ValueEventRegistration.prototype.getEventRunner = function(a) {
  var b = this.context_;
  if ("cancel" === a.getEventType()) {
    wd.core.util.assert(this.cancelCallback_, "Raising a cancel event on a listener with no cancel callback");
    var c = this.cancelCallback_;
    return function() {
      c.call(b, a.error);
    };
  }
  var d = this.callback_;
  return function() {
    d.call(b, a.snapshot);
  };
};
wd.core.view.ValueEventRegistration.prototype.createCancelEvent = function(a, b) {
  return this.cancelCallback_ ? new wd.core.view.CancelEvent(this, a, b) : null;
};
wd.core.view.ValueEventRegistration.prototype.matches = function(a) {
  return a instanceof wd.core.view.ValueEventRegistration ? a.callback_ && this.callback_ ? a.callback_ === this.callback_ && a.context_ === this.context_ : !0 : !1;
};
wd.core.view.ValueEventRegistration.prototype.hasAnyCallback = function() {
  return null !== this.callback_;
};
wd.core.view.ChildEventRegistration = function(a, b, c) {
  this.callbacks_ = a;
  this.cancelCallback_ = b;
  this.context_ = c;
};
wd.core.view.ChildEventRegistration.prototype.respondsTo = function(a) {
  a = "children_added" === a ? "child_added" : a;
  return goog.object.containsKey(this.callbacks_, "children_removed" === a ? "child_removed" : a);
};
wd.core.view.ChildEventRegistration.prototype.createCancelEvent = function(a, b) {
  return this.cancelCallback_ ? new wd.core.view.CancelEvent(this, a, b) : null;
};
wd.core.view.ChildEventRegistration.prototype.createEvent = function(a, b) {
  wd.core.util.assert(null != a.childName, "Child events should have a childName.");
  var c = b.ref().child(a.childName), d = b.getQueryParams().getIndex();
  return new wd.core.view.DataEvent(a.type, this, new wd.api.DataSnapshot(a.snapshotNode, c, d), a.prevName);
};
wd.core.view.ChildEventRegistration.prototype.getEventRunner = function(a) {
  var b = this.context_;
  if ("cancel" === a.getEventType()) {
    wd.core.util.assert(this.cancelCallback_, "Raising a cancel event on a listener with no cancel callback");
    var c = this.cancelCallback_;
    return function() {
      c.call(b, a.error);
    };
  }
  var d = this.callbacks_[a.eventType];
  return function() {
    d.call(b, a.snapshot, a.prevName);
  };
};
wd.core.view.ChildEventRegistration.prototype.matches = function(a) {
  if (a instanceof wd.core.view.ChildEventRegistration) {
    if (!this.callbacks_ || !a.callbacks_) {
      return !0;
    }
    if (this.context_ === a.context_) {
      var b = goog.object.getCount(a.callbacks_), c = goog.object.getCount(this.callbacks_);
      if (b === c) {
        return 1 === b ? (b = goog.object.getAnyKey(a.callbacks_), c = goog.object.getAnyKey(this.callbacks_), c === b && (!a.callbacks_[b] || !this.callbacks_[c] || a.callbacks_[b] === this.callbacks_[c])) : goog.object.every(this.callbacks_, function(b, c) {
          return a.callbacks_[c] === b;
        });
      }
    }
  }
  return !1;
};
wd.core.view.ChildEventRegistration.prototype.hasAnyCallback = function() {
  return null !== this.callbacks_;
};
wd.core.view.ViewCache = function(a, b) {
  this.eventCache_ = a;
  this.serverCache_ = b;
};
wd.core.view.ViewCache.Empty = new wd.core.view.ViewCache(new wd.core.view.CacheNode(wd.core.snap.EMPTY_NODE, !1, !1), new wd.core.view.CacheNode(wd.core.snap.EMPTY_NODE, !1, !1));
wd.core.view.ViewCache.prototype.updateEventSnap = function(a, b, c) {
  return new wd.core.view.ViewCache(new wd.core.view.CacheNode(a, b, c), this.serverCache_);
};
wd.core.view.ViewCache.prototype.updateServerSnap = function(a, b, c) {
  return new wd.core.view.ViewCache(this.eventCache_, new wd.core.view.CacheNode(a, b, c));
};
wd.core.view.ViewCache.prototype.getEventCache = function() {
  return this.eventCache_;
};
wd.core.view.ViewCache.prototype.getCompleteEventSnap = function() {
  return this.eventCache_.isFullyInitialized() ? this.eventCache_.getNode() : null;
};
wd.core.view.ViewCache.prototype.getServerCache = function() {
  return this.serverCache_;
};
wd.core.view.ViewCache.prototype.getCompleteServerSnap = function() {
  return this.serverCache_.isFullyInitialized() ? this.serverCache_.getNode() : null;
};
wd.core.view.ProcessorResult = function(a, b) {
  this.viewCache = a;
  this.changes = b;
};
wd.core.view.ViewProcessor = function(a) {
  this.filter_ = a;
};
wd.core.view.ViewProcessor.prototype.assertIndexed = function(a) {
  wd.core.util.assert(a.getEventCache().getNode().isIndexed(this.filter_.getIndex()), "Event snap not indexed");
  wd.core.util.assert(a.getServerCache().getNode().isIndexed(this.filter_.getIndex()), "Server snap not indexed");
};
wd.core.view.ViewProcessor.prototype.applyOperation = function(a, b, c, d) {
  var e = new wd.core.view.ChildChangeAccumulator, f;
  if (b.type === wd.core.OperationType.OVERWRITE) {
    b.source.fromUser ? b = this.applyUserOverwrite_(a, b.path, b.snap, c, d, e) : (wd.core.util.assert(b.source.fromServer, "Unknown source."), f = b.source.tagged, b = this.applyServerOverwrite_(a, b.path, b.snap, c, d, f, e));
  } else {
    if (b.type === wd.core.OperationType.MERGE) {
      b.source.fromUser ? b = this.applyUserMerge_(a, b.path, b.children, c, d, e) : (wd.core.util.assert(b.source.fromServer, "Unknown source."), f = b.source.tagged, b = this.applyServerMerge_(a, b.path, b.children, c, d, f, e));
    } else {
      if (b.type === wd.core.OperationType.ACK_USER_WRITE) {
        b = b.revert ? this.revertUserWrite_(a, b.path, c, d, e) : this.ackUserWrite_(a, b.path, c, d, e);
      } else {
        if (b.type === wd.core.OperationType.LISTEN_COMPLETE) {
          b = this.listenComplete_(a, b.path, c, d, e);
        } else {
          throw wd.core.util.assertionError("Unknown operation type: " + b.type);
        }
      }
    }
  }
  e = e.getChanges();
  this.maybeAddValueEvent_(a, b, e);
  return new wd.core.view.ProcessorResult(b, e);
};
wd.core.view.ViewProcessor.prototype.maybeAddValueEvent_ = function(a, b, c) {
  var d = b.getEventCache();
  if (d.isFullyInitialized()) {
    var e = d.getNode().isLeafNode() || d.getNode().isEmpty(), f = a.getCompleteEventSnap();
    (0 < c.length || !a.getEventCache().isFullyInitialized() || e && !d.getNode().equals(f) || !d.getNode().getPriority().equals(f.getPriority())) && c.push(wd.core.view.Change.valueChange(b.getCompleteEventSnap()));
  }
};
wd.core.view.ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function(a, b, c, d, e) {
  var f = a.getEventCache();
  if (null != c.shadowingWrite(b)) {
    return a;
  }
  var g;
  if (b.isEmpty()) {
    wd.core.util.assert(a.getServerCache().isFullyInitialized(), "If change path is empty, we must have complete server data"), a.getServerCache().isFiltered() ? (d = a.getCompleteServerSnap(), c = c.calcCompleteEventChildren(d instanceof wd.core.snap.ChildrenNode ? d : wd.core.snap.EMPTY_NODE)) : c = c.calcCompleteEventCache(a.getCompleteServerSnap()), e = this.filter_.updateFullNode(a.getEventCache().getNode(), c, e);
  } else {
    var h = b.getFront();
    if (".priority" == h) {
      wd.core.util.assert(1 == b.getLength(), "Can't have a priority with additional path components"), e = f.getNode(), g = a.getServerCache().getNode(), c = c.calcEventCacheAfterServerOverwrite(b, e, g), e = null != c ? this.filter_.updatePriority(e, c) : f.getNode();
    } else {
      var k = b.popFront();
      f.isCompleteForChild(h) ? (g = a.getServerCache().getNode(), c = c.calcEventCacheAfterServerOverwrite(b, f.getNode(), g), c = null != c ? f.getNode().getImmediateChild(h).updateChild(k, c) : f.getNode().getImmediateChild(h)) : c = c.calcCompleteChild(h, a.getServerCache());
      e = null != c ? this.filter_.updateChild(f.getNode(), h, c, d, e) : f.getNode();
    }
  }
  return a.updateEventSnap(e, f.isFullyInitialized() || b.isEmpty(), this.filter_.filtersNodes());
};
wd.core.view.ViewProcessor.prototype.applyServerOverwrite_ = function(a, b, c, d, e, f, g) {
  var h = a.getServerCache();
  f = f ? this.filter_ : this.filter_.getIndexedFilter();
  if (b.isEmpty()) {
    c = f.updateFullNode(h.getNode(), c, null);
  } else {
    if (f.filtersNodes() && !h.isFiltered()) {
      c = h.getNode().updateChild(b, c), c = f.updateFullNode(h.getNode(), c, null);
    } else {
      var k = b.getFront();
      if (!h.isCompleteForPath(b) && 1 < b.getLength()) {
        return a;
      }
      c = h.getNode().getImmediateChild(k).updateChild(b.popFront(), c);
      c = ".priority" == k ? f.updatePriority(h.getNode(), c) : f.updateChild(h.getNode(), k, c, wd.core.view.NO_COMPLETE_CHILD_SOURCE, null);
    }
  }
  a = a.updateServerSnap(c, h.isFullyInitialized() || b.isEmpty(), f.filtersNodes());
  e = new wd.core.view.WriteTreeCompleteChildSource(d, a, e);
  return this.generateEventCacheAfterServerEvent_(a, b, d, e, g);
};
wd.core.view.ViewProcessor.prototype.applyUserOverwrite_ = function(a, b, c, d, e, f) {
  var g = a.getEventCache();
  d = new wd.core.view.WriteTreeCompleteChildSource(d, a, e);
  if (b.isEmpty()) {
    f = this.filter_.updateFullNode(a.getEventCache().getNode(), c, f), a = a.updateEventSnap(f, !0, this.filter_.filtersNodes());
  } else {
    if (e = b.getFront(), ".priority" === e) {
      f = this.filter_.updatePriority(a.getEventCache().getNode(), c), a = a.updateEventSnap(f, g.isFullyInitialized(), g.isFiltered());
    } else {
      var h = b.popFront();
      b = g.getNode().getImmediateChild(e);
      if (!h.isEmpty()) {
        var k = d.getCompleteChild(e);
        c = null != k ? ".priority" === h.getBack() && k.getChild(h.parent()).isEmpty() ? k : k.updateChild(h, c) : wd.core.snap.EMPTY_NODE;
      }
      b.equals(c) || (f = this.filter_.updateChild(g.getNode(), e, c, d, f), a = a.updateEventSnap(f, g.isFullyInitialized(), this.filter_.filtersNodes()));
    }
  }
  return a;
};
wd.core.view.ViewProcessor.cacheHasChild_ = function(a, b) {
  return a.getEventCache().isCompleteForChild(b);
};
wd.core.view.ViewProcessor.prototype.applyUserMerge_ = function(a, b, c, d, e, f) {
  var g = this, h = a;
  c.foreach(function(c, l) {
    var m = b.child(c);
    wd.core.view.ViewProcessor.cacheHasChild_(a, m.getFront()) && (h = g.applyUserOverwrite_(h, m, l, d, e, f));
  });
  c.foreach(function(c, l) {
    var m = b.child(c);
    wd.core.view.ViewProcessor.cacheHasChild_(a, m.getFront()) || (h = g.applyUserOverwrite_(h, m, l, d, e, f));
  });
  return h;
};
wd.core.view.ViewProcessor.prototype.applyMerge_ = function(a, b) {
  b.foreach(function(b, d) {
    a = a.updateChild(b, d);
  });
  return a;
};
wd.core.view.ViewProcessor.prototype.applyServerMerge_ = function(a, b, c, d, e, f, g) {
  if (a.getServerCache().getNode().isEmpty() && !a.getServerCache().isFullyInitialized()) {
    return a;
  }
  var h = a;
  b = b.isEmpty() ? c : wd.core.util.ImmutableTree.Empty.setTree(b, c);
  var k = a.getServerCache().getNode(), l = this;
  b.children.inorderTraversal(function(b, c) {
    if (k.hasChild(b)) {
      var p = a.getServerCache().getNode().getImmediateChild(b), p = l.applyMerge_(p, c);
      h = l.applyServerOverwrite_(h, new wd.core.util.Path(b), p, d, e, f, g);
    }
  });
  b.children.inorderTraversal(function(b, c) {
    var p = !a.getServerCache().isFullyInitialized() && null == c.value;
    k.hasChild(b) || p || (p = a.getServerCache().getNode().getImmediateChild(b), p = l.applyMerge_(p, c), h = l.applyServerOverwrite_(h, new wd.core.util.Path(b), p, d, e, f, g));
  });
  return h;
};
wd.core.view.ViewProcessor.prototype.ackUserWrite_ = function(a, b, c, d, e) {
  if (null != c.shadowingWrite(b)) {
    return a;
  }
  var f = new wd.core.view.WriteTreeCompleteChildSource(c, a, d), g = d = a.getEventCache().getNode();
  if (a.getServerCache().isFullyInitialized()) {
    if (b.isEmpty()) {
      d = c.calcCompleteEventCache(a.getCompleteServerSnap()), g = this.filter_.updateFullNode(a.getEventCache().getNode(), d, e);
    } else {
      if (".priority" === b.getFront()) {
        var h = c.calcCompleteChild(b.getFront(), a.getServerCache());
        null == h || d.isEmpty() || d.getPriority().equals(h) || (g = this.filter_.updatePriority(d, h));
      } else {
        h = b.getFront(), d = c.calcCompleteChild(h, a.getServerCache()), null != d && (g = this.filter_.updateChild(a.getEventCache().getNode(), h, d, f, e));
      }
    }
    d = !0;
  } else {
    if (a.getEventCache().isFullyInitialized() || b.isEmpty()) {
      g = d;
      d = a.getEventCache().getNode();
      if (!d.isLeafNode()) {
        var k = this;
        d.forEachChild(wd.core.snap.PriorityIndex, function(b, d) {
          var h = c.calcCompleteChild(b, a.getServerCache());
          null != h && (g = k.filter_.updateChild(g, b, h, f, e));
        });
      }
      d = a.getEventCache().isFullyInitialized();
    } else {
      h = b.getFront();
      if (1 == b.getLength() || a.getEventCache().isCompleteForChild(h)) {
        b = c.calcCompleteChild(h, a.getServerCache()), null != b && (g = this.filter_.updateChild(d, h, b, f, e));
      }
      d = !1;
    }
  }
  return a.updateEventSnap(g, d, this.filter_.filtersNodes());
};
wd.core.view.ViewProcessor.prototype.revertUserWrite_ = function(a, b, c, d, e) {
  if (null != c.shadowingWrite(b)) {
    return a;
  }
  var f = new wd.core.view.WriteTreeCompleteChildSource(c, a, d);
  d = a.getEventCache().getNode();
  if (b.isEmpty() || ".priority" === b.getFront()) {
    a.getServerCache().isFullyInitialized() ? f = c.calcCompleteEventCache(a.getCompleteServerSnap()) : (f = a.getServerCache().getNode(), wd.core.util.assert(f instanceof wd.core.snap.ChildrenNode, "serverChildren would be complete if leaf node"), f = c.calcCompleteEventChildren(f)), f = this.filter_.updateFullNode(d, f, e);
  } else {
    b = b.getFront();
    var g = c.calcCompleteChild(b, a.getServerCache());
    null == g && a.getServerCache().isCompleteForChild(b) && (g = d.getImmediateChild(b));
    f = null != g ? this.filter_.updateChild(d, b, g, f, e) : a.getEventCache().getNode().hasChild(b) ? this.filter_.updateChild(d, b, wd.core.snap.EMPTY_NODE, f, e) : d;
    f.isEmpty() && a.getServerCache().isFullyInitialized() && (d = c.calcCompleteEventCache(a.getCompleteServerSnap()), d.isLeafNode() && (f = this.filter_.updateFullNode(f, d, e)));
  }
  d = a.getServerCache().isFullyInitialized() || null != c.shadowingWrite(wd.core.util.Path.Empty);
  return a.updateEventSnap(f, d, this.filter_.filtersNodes());
};
wd.core.view.ViewProcessor.prototype.listenComplete_ = function(a, b, c, d, e) {
  d = a.getServerCache();
  a = a.updateServerSnap(d.getNode(), d.isFullyInitialized() || b.isEmpty(), d.isFiltered());
  return this.generateEventCacheAfterServerEvent_(a, b, c, wd.core.view.NO_COMPLETE_CHILD_SOURCE, e);
};
wd.core.view.View = function(a, b) {
  this.query_ = a;
  var c = a.getQueryParams(), d = new wd.core.view.filter.IndexedFilter(c.getIndex()), c = c.getNodeFilter();
  this.processor_ = new wd.core.view.ViewProcessor(c);
  var e = b.getServerCache(), f = b.getEventCache(), g = d.updateFullNode(wd.core.snap.EMPTY_NODE, e.getNode(), null), h = c.updateFullNode(wd.core.snap.EMPTY_NODE, f.getNode(), null), d = new wd.core.view.CacheNode(g, e.isFullyInitialized(), d.filtersNodes()), c = new wd.core.view.CacheNode(h, f.isFullyInitialized(), c.filtersNodes());
  this.viewCache_ = new wd.core.view.ViewCache(c, d);
  this.eventRegistrations_ = [];
  this.eventGenerator_ = new wd.core.view.EventGenerator(a);
};
wd.core.view.View.prototype.getQuery = function() {
  return this.query_;
};
wd.core.view.View.prototype.getServerCache = function() {
  return this.viewCache_.getServerCache().getNode();
};
wd.core.view.View.prototype.getCompleteServerCache = function(a) {
  var b = this.viewCache_.getCompleteServerSnap();
  return b && (this.query_.getQueryParams().loadsAllData() || !a.isEmpty() && !b.getImmediateChild(a.getFront()).isEmpty()) ? b.getChild(a) : null;
};
wd.core.view.View.prototype.isEmpty = function() {
  return 0 === this.eventRegistrations_.length;
};
wd.core.view.View.prototype.addEventRegistration = function(a) {
  this.eventRegistrations_.push(a);
};
wd.core.view.View.prototype.removeEventRegistration = function(a, b) {
  var c = [];
  if (b) {
    wd.core.util.assert(null == a, "A cancel should cancel all event registrations.");
    var d = this.query_.path;
    goog.array.forEach(this.eventRegistrations_, function(a) {
      (a = a.createCancelEvent(b, d)) && c.push(a);
    });
  }
  if (a) {
    for (var e = [], f = 0;f < this.eventRegistrations_.length;++f) {
      var g = this.eventRegistrations_[f];
      if (!g.matches(a)) {
        e.push(g);
      } else {
        if (a.hasAnyCallback()) {
          e = e.concat(this.eventRegistrations_.slice(f + 1));
          break;
        }
      }
    }
    this.eventRegistrations_ = e;
  } else {
    this.eventRegistrations_ = [];
  }
  return c;
};
wd.core.view.View.prototype.applyOperation = function(a, b, c) {
  a.type === wd.core.OperationType.MERGE && null !== a.source.queryId && (wd.core.util.assert(this.viewCache_.getCompleteServerSnap(), "We should always have a full cache before handling merges"), wd.core.util.assert(this.viewCache_.getCompleteEventSnap(), "Missing event cache, even though we have a server cache"));
  var d = this.viewCache_;
  a = this.processor_.applyOperation(d, a, b, c);
  this.processor_.assertIndexed(a.viewCache);
  wd.core.util.assert(a.viewCache.getServerCache().isFullyInitialized() || !d.getServerCache().isFullyInitialized(), "Once a server snap is complete, it should never go back");
  this.viewCache_ = a.viewCache;
  return this.generateEventsForChanges_(a.changes, a.viewCache.getEventCache().getNode(), null);
};
wd.core.view.View.prototype.getInitialEvents = function(a) {
  var b = this.viewCache_.getEventCache(), c = [];
  b.getNode().isLeafNode() || b.getNode().forEachChild(wd.core.snap.PriorityIndex, function(a, b) {
    c.push(wd.core.view.Change.childAddedChange(a, b));
  });
  b.isFullyInitialized() && c.push(wd.core.view.Change.valueChange(b.getNode()));
  return this.generateEventsForChanges_(c, b.getNode(), a);
};
wd.core.view.View.prototype.generateEventsForChanges_ = function(a, b, c) {
  return this.eventGenerator_.generateEventsForChanges(a, b, c ? [c] : this.eventRegistrations_);
};
wd.core.SyncPoint = function() {
  this.views_ = {};
};
wd.core.SyncPoint.prototype.isEmpty = function() {
  return goog.object.isEmpty(this.views_);
};
wd.core.SyncPoint.prototype.applyOperation = function(a, b, c) {
  var d = a.source.queryId;
  if (null !== d) {
    return d = wd.util.obj.get(this.views_, d), wd.core.util.assert(null != d, "SyncTree gave us an op for an invalid query."), d.applyOperation(a, b, c);
  }
  var e = [];
  goog.object.forEach(this.views_, function(d) {
    e = e.concat(d.applyOperation(a, b, c));
  });
  return e;
};
wd.core.SyncPoint.prototype.addEventRegistration = function(a, b, c, d, e) {
  var f = a.queryIdentifier(), g = wd.util.obj.get(this.views_, f);
  if (!g) {
    var g = c.calcCompleteEventCache(e ? d : null), h = !1;
    g ? h = !0 : (g = d instanceof wd.core.snap.ChildrenNode ? c.calcCompleteEventChildren(d) : wd.core.snap.EMPTY_NODE, h = !1);
    c = new wd.core.view.ViewCache(new wd.core.view.CacheNode(g, h, !1), new wd.core.view.CacheNode(d, e, !1));
    g = new wd.core.view.View(a, c);
    this.views_[f] = g;
  }
  g.addEventRegistration(b);
  return g.getInitialEvents(b);
};
wd.core.SyncPoint.prototype.removeEventRegistration = function(a, b, c) {
  var d = a.queryIdentifier(), e = [], f = [], g = this.hasCompleteView();
  if ("default" === d) {
    var h = this;
    goog.object.forEach(this.views_, function(a, d) {
      f = f.concat(a.removeEventRegistration(b, c));
      a.isEmpty() && (delete h.views_[d], a.getQuery().getQueryParams().loadsAllData() || e.push(a.getQuery()));
    });
  } else {
    var k = wd.util.obj.get(this.views_, d);
    k && (f = f.concat(k.removeEventRegistration(b, c)), k.isEmpty() && (delete this.views_[d], k.getQuery().getQueryParams().loadsAllData() || e.push(k.getQuery())));
  }
  g && !this.hasCompleteView() && e.push(new Wilddog(a.repo.app_, a.repo, a.path));
  return {removed:e, events:f};
};
wd.core.SyncPoint.prototype.getQueryViews = function() {
  return goog.array.filter(goog.object.getValues(this.views_), function(a) {
    return !a.getQuery().getQueryParams().loadsAllData();
  });
};
wd.core.SyncPoint.prototype.getCompleteServerCache = function(a) {
  var b = null;
  goog.object.forEach(this.views_, function(c) {
    b = b || c.getCompleteServerCache(a);
  });
  return b;
};
wd.core.SyncPoint.prototype.viewForQuery = function(a) {
  if (a.getQueryParams().loadsAllData()) {
    return this.getCompleteView();
  }
  a = a.queryIdentifier();
  return wd.util.obj.get(this.views_, a);
};
wd.core.SyncPoint.prototype.viewExistsForQuery = function(a) {
  return null != this.viewForQuery(a);
};
wd.core.SyncPoint.prototype.hasCompleteView = function() {
  return null != this.getCompleteView();
};
wd.core.SyncPoint.prototype.getCompleteView = function() {
  return goog.object.findValue(this.views_, function(a) {
    return a.getQuery().getQueryParams().loadsAllData();
  }) || null;
};
wd.core.ListenProvider;
wd.core.SyncTree = function(a) {
  this.syncPointTree_ = wd.core.util.ImmutableTree.Empty;
  this.pendingWriteTree_ = new wd.core.WriteTree;
  this.tagToQueryMap_ = {};
  this.queryToTagMap_ = {};
  this.listenProvider_ = a;
};
wd.core.SyncTree.prototype.applyUserOverwrite = function(a, b, c, d) {
  this.pendingWriteTree_.addOverwrite(a, b, c, d);
  return d ? this.applyOperationToSyncPoints_(new wd.core.operation.Overwrite(wd.core.OperationSource.User, a, b)) : [];
};
wd.core.SyncTree.prototype.applyUserMerge = function(a, b, c) {
  this.pendingWriteTree_.addMerge(a, b, c);
  b = wd.core.util.ImmutableTree.fromObject(b);
  return this.applyOperationToSyncPoints_(new wd.core.operation.Merge(wd.core.OperationSource.User, a, b));
};
wd.core.SyncTree.prototype.ackUserWrite = function(a, b) {
  b = b || !1;
  var c = this.pendingWriteTree_.removeWrite(a);
  return null == c ? [] : this.applyOperationToSyncPoints_(new wd.core.operation.AckUserWrite(c, b));
};
wd.core.SyncTree.prototype.applyServerOverwrite = function(a, b) {
  return this.applyOperationToSyncPoints_(new wd.core.operation.Overwrite(wd.core.OperationSource.Server, a, b));
};
wd.core.SyncTree.prototype.applyServerMerge = function(a, b) {
  var c = wd.core.util.ImmutableTree.fromObject(b);
  return this.applyOperationToSyncPoints_(new wd.core.operation.Merge(wd.core.OperationSource.Server, a, c));
};
wd.core.SyncTree.prototype.applyListenComplete = function(a) {
  return this.applyOperationToSyncPoints_(new wd.core.operation.ListenComplete(wd.core.OperationSource.Server, a));
};
wd.core.SyncTree.prototype.applyTaggedQueryOverwrite = function(a, b, c) {
  c = this.queryKeyForTag_(c);
  if (null != c) {
    var d = this.parseQueryKey_(c);
    c = d.path;
    d = d.queryId;
    a = wd.core.util.Path.relativePath(c, a);
    b = new wd.core.operation.Overwrite(wd.core.OperationSource.forServerTaggedQuery(d), a, b);
    return this.applyTaggedOperation_(c, d, b);
  }
  return [];
};
wd.core.SyncTree.prototype.applyTaggedQueryMerge = function(a, b, c) {
  if (c = this.queryKeyForTag_(c)) {
    var d = this.parseQueryKey_(c);
    c = d.path;
    d = d.queryId;
    a = wd.core.util.Path.relativePath(c, a);
    b = wd.core.util.ImmutableTree.fromObject(b);
    b = new wd.core.operation.Merge(wd.core.OperationSource.forServerTaggedQuery(d), a, b);
    return this.applyTaggedOperation_(c, d, b);
  }
  return [];
};
wd.core.SyncTree.prototype.applyTaggedListenComplete = function(a, b) {
  var c = this.queryKeyForTag_(b);
  if (c) {
    var d = this.parseQueryKey_(c), c = d.path, d = d.queryId, e = wd.core.util.Path.relativePath(c, a), e = new wd.core.operation.ListenComplete(wd.core.OperationSource.forServerTaggedQuery(d), e);
    return this.applyTaggedOperation_(c, d, e);
  }
  return [];
};
wd.core.SyncTree.prototype.addEventRegistration = function(a, b) {
  var c = a.path, d = null, e = !1;
  this.syncPointTree_.foreachOnPathWhile(c, function(a, b) {
    var f = wd.core.util.Path.relativePath(a, c);
    d = b.getCompleteServerCache(f);
    e = e || b.hasCompleteView();
    return !d;
  });
  var f = this.syncPointTree_.get(c);
  f ? (e = e || f.hasCompleteView(), d = d || f.getCompleteServerCache(wd.core.util.Path.Empty)) : (f = new wd.core.SyncPoint, this.syncPointTree_ = this.syncPointTree_.set(c, f));
  var g;
  null != d ? g = !0 : (g = !1, d = wd.core.snap.EMPTY_NODE, this.syncPointTree_.subtree(c).foreachChild(function(a, b) {
    var c = b.getCompleteServerCache(wd.core.util.Path.Empty);
    c && (d = d.updateImmediateChild(a, c));
  }));
  var h = f.viewExistsForQuery(a);
  if (!h && !a.getQueryParams().loadsAllData()) {
    var k = this.makeQueryKey_(a);
    wd.core.util.assert(!goog.object.containsKey(this.queryToTagMap_, k), "View does not exist, but we have a tag");
    var l = wd.core.SyncTree.getNextQueryTag_();
    this.queryToTagMap_[k] = l;
    this.tagToQueryMap_["_" + l] = k;
  }
  k = this.pendingWriteTree_.childWrites(c);
  g = f.addEventRegistration(a, b, k, d, g);
  h || e || (f = f.viewForQuery(a), g = g.concat(this.setupListener_(a, f)));
  return g;
};
wd.core.SyncTree.prototype.removeEventRegistration = function(a, b, c) {
  var d = a.path, e = this.syncPointTree_.get(d), f = [];
  if (e && ("default" === a.queryIdentifier() || e.viewExistsForQuery(a))) {
    f = e.removeEventRegistration(a, b, c);
    e.isEmpty() && (this.syncPointTree_ = this.syncPointTree_.remove(d));
    e = f.removed;
    f = f.events;
    b = -1 !== goog.array.findIndex(e, function(a) {
      return a.getQueryParams().loadsAllData();
    });
    var g = this.syncPointTree_.findOnPath(d, function(a, b) {
      return b.hasCompleteView();
    });
    if (b && !g && (d = this.syncPointTree_.subtree(d), !d.isEmpty())) {
      for (var d = this.collectDistinctViewsForSubTree_(d), h = 0;h < d.length;++h) {
        var k = d[h], l = k.getQuery(), k = this.createListenerForView_(k);
        this.listenProvider_.startListening(l, this.tagForQuery_(l), k.hashFn, k.onComplete);
      }
    }
    if (!g && 0 < e.length && !c) {
      if (b) {
        this.listenProvider_.stopListening(a, null);
      } else {
        var m = this;
        goog.array.forEach(e, function(a) {
          a.queryIdentifier();
          var b = m.queryToTagMap_[m.makeQueryKey_(a)];
          m.listenProvider_.stopListening(a, b);
        });
      }
    }
    this.removeTags_(e);
  }
  return f;
};
wd.core.SyncTree.prototype.calcCompleteEventCache = function(a, b) {
  var c = this.pendingWriteTree_, d = this.syncPointTree_.findOnPath(a, function(b, c) {
    var d = wd.core.util.Path.relativePath(b, a);
    if (d = c.getCompleteServerCache(d)) {
      return d;
    }
  });
  return c.calcCompleteEventCache(a, d, b, !0);
};
wd.core.SyncTree.prototype.collectDistinctViewsForSubTree_ = function(a) {
  return a.fold(function(a, c, d) {
    if (c && c.hasCompleteView()) {
      return [c.getCompleteView()];
    }
    var e = [];
    c && (e = c.getQueryViews());
    goog.object.forEach(d, function(a) {
      e = e.concat(a);
    });
    return e;
  });
};
wd.core.SyncTree.prototype.removeTags_ = function(a) {
  for (var b = 0;b < a.length;++b) {
    var c = a[b];
    if (!c.getQueryParams().loadsAllData()) {
      var c = this.makeQueryKey_(c), d = this.queryToTagMap_[c];
      delete this.queryToTagMap_[c];
      delete this.tagToQueryMap_["_" + d];
    }
  }
};
wd.core.SyncTree.prototype.setupListener_ = function(a, b) {
  var c = a.path, d = this.tagForQuery_(a), e = this.createListenerForView_(b), e = this.listenProvider_.startListening(a, d, e.hashFn, e.onComplete), c = this.syncPointTree_.subtree(c);
  if (d) {
    wd.core.util.assert(!c.value.hasCompleteView(), "If we're adding a query, it shouldn't be shadowed");
  } else {
    for (d = c.fold(function(a, b, c) {
      if (!a.isEmpty() && b && b.hasCompleteView()) {
        return [b.getCompleteView().getQuery()];
      }
      var d = [];
      b && (d = d.concat(goog.array.map(b.getQueryViews(), function(a) {
        return a.getQuery();
      })));
      goog.object.forEach(c, function(a) {
        d = d.concat(a);
      });
      return d;
    }), c = 0;c < d.length;++c) {
      var f = d[c];
      this.listenProvider_.stopListening(f, this.tagForQuery_(f));
    }
  }
  return e;
};
wd.core.SyncTree.prototype.createListenerForView_ = function(a) {
  var b = this, c = a.getQuery(), d = this.tagForQuery_(c);
  return {hashFn:function() {
    return (a.getServerCache() || wd.core.snap.EMPTY_NODE).hash();
  }, onComplete:function(a, f) {
    if ("ok" === a) {
      return d ? b.applyTaggedListenComplete(c.path, d) : b.applyListenComplete(c.path);
    }
    var g = wd.core.util.errorForServerCode(a);
    return b.removeEventRegistration(c, null, g);
  }};
};
wd.core.SyncTree.prototype.makeQueryKey_ = function(a) {
  return a.path.toString() + "$" + a.queryIdentifier();
};
wd.core.SyncTree.prototype.parseQueryKey_ = function(a) {
  var b = a.indexOf("$");
  wd.core.util.assert(-1 !== b && b < a.length - 1, "Bad queryKey.");
  return {queryId:a.substr(b + 1), path:new wd.core.util.Path(a.substr(0, b))};
};
wd.core.SyncTree.prototype.queryKeyForTag_ = function(a) {
  return goog.object.get(this.tagToQueryMap_, "_" + a);
};
wd.core.SyncTree.prototype.tagForQuery_ = function(a) {
  a = this.makeQueryKey_(a);
  return wd.util.obj.get(this.queryToTagMap_, a);
};
wd.core.SyncTree.nextQueryTag_ = 1;
wd.core.SyncTree.getNextQueryTag_ = function() {
  return wd.core.SyncTree.nextQueryTag_++;
};
wd.core.SyncTree.prototype.applyTaggedOperation_ = function(a, b, c) {
  b = this.syncPointTree_.get(a);
  wd.core.util.assert(b, "Missing sync point for query tag that we're tracking");
  a = this.pendingWriteTree_.childWrites(a);
  return b.applyOperation(c, a, null);
};
wd.core.SyncTree.prototype.applyOperationToSyncPoints_ = function(a) {
  return this.applyOperationHelper_(a, this.syncPointTree_, null, this.pendingWriteTree_.childWrites(wd.core.util.Path.Empty));
};
wd.core.SyncTree.prototype.applyOperationHelper_ = function(a, b, c, d) {
  if (a.path.isEmpty()) {
    return this.applyOperationDescendantsHelper_(a, b, c, d);
  }
  var e = b.get(wd.core.util.Path.Empty);
  null == c && null != e && (c = e.getCompleteServerCache(wd.core.util.Path.Empty));
  var f = [], g = a.path.getFront(), h = a.operationForChild(g);
  if ((b = b.children.get(g)) && h) {
    var k = c ? c.getImmediateChild(g) : null, g = d.child(g), f = f.concat(this.applyOperationHelper_(h, b, k, g))
  }
  e && (f = f.concat(e.applyOperation(a, d, c)));
  return f;
};
wd.core.SyncTree.prototype.applyOperationDescendantsHelper_ = function(a, b, c, d) {
  var e = b.get(wd.core.util.Path.Empty);
  null == c && null != e && (c = e.getCompleteServerCache(wd.core.util.Path.Empty));
  var f = [], g = this;
  b.children.inorderTraversal(function(b, e) {
    var l = c ? c.getImmediateChild(b) : null, m = d.child(b), n = a.operationForChild(b);
    n && (f = f.concat(g.applyOperationDescendantsHelper_(n, e, l, m)));
  });
  e && (f = f.concat(e.applyOperation(a, d, c)));
  return f;
};
wd.core.view.filter = {};
wd.core.view.filter.IndexedFilter = function(a) {
  this.index_ = a;
};
wd.core.view.filter.IndexedFilter.prototype.updateChild = function(a, b, c, d, e) {
  d = wd.core.view.Change;
  wd.core.util.assert(a.isIndexed(this.index_), "A node must be indexed if only a child is updated");
  var f = a.getImmediateChild(b);
  if (f.equals(c)) {
    return a;
  }
  null != e && (c.isEmpty() ? a.hasChild(b) ? e.trackChildChange(d.childRemovedChange(b, f)) : wd.core.util.assert(a.isLeafNode(), "A child remove without an old child only makes sense on a leaf node") : f.isEmpty() ? e.trackChildChange(d.childAddedChange(b, c)) : e.trackChildChange(d.childChangedChange(b, c, f)));
  return a.isLeafNode() && c.isEmpty() ? a : a.updateImmediateChild(b, c).withIndex(this.index_);
};
wd.core.view.filter.IndexedFilter.prototype.updateFullNode = function(a, b, c) {
  var d = wd.core.view.Change;
  null != c && (a.isLeafNode() || a.forEachChild(wd.core.snap.PriorityIndex, function(a, f) {
    b.hasChild(a) || c.trackChildChange(d.childRemovedChange(a, f));
  }), b.isLeafNode() || b.forEachChild(wd.core.snap.PriorityIndex, function(b, f) {
    if (a.hasChild(b)) {
      var g = a.getImmediateChild(b);
      g.equals(f) || c.trackChildChange(d.childChangedChange(b, f, g));
    } else {
      c.trackChildChange(d.childAddedChange(b, f));
    }
  }));
  return b.withIndex(this.index_);
};
wd.core.view.filter.IndexedFilter.prototype.updatePriority = function(a, b) {
  return a.isEmpty() ? wd.core.snap.EMPTY_NODE : a.updatePriority(b);
};
wd.core.view.filter.IndexedFilter.prototype.filtersNodes = function() {
  return !1;
};
wd.core.view.filter.IndexedFilter.prototype.getIndexedFilter = function() {
  return this;
};
wd.core.view.filter.IndexedFilter.prototype.getIndex = function() {
  return this.index_;
};
wd.core.view.filter.NodeFilter = function() {
};
wd.core.view.filter.NodeFilter.prototype.updateChild = function(a, b, c, d, e) {
};
wd.core.view.filter.NodeFilter.prototype.updateFullNode = function(a, b, c) {
};
wd.core.view.filter.NodeFilter.prototype.updatePriority = function(a, b) {
};
wd.core.view.filter.NodeFilter.prototype.filtersNodes = function() {
};
wd.core.view.filter.NodeFilter.prototype.getIndexedFilter = function() {
};
wd.core.view.filter.NodeFilter.prototype.getIndex = function() {
};
wd.core.view.filter.RangedFilter = function(a) {
  this.indexedFilter_ = new wd.core.view.filter.IndexedFilter(a.getIndex());
  this.index_ = a.getIndex();
  this.startPost_ = this.getStartPost_(a);
  this.endPost_ = this.getEndPost_(a);
};
wd.core.view.filter.RangedFilter.prototype.getStartPost = function() {
  return this.startPost_;
};
wd.core.view.filter.RangedFilter.prototype.getEndPost = function() {
  return this.endPost_;
};
wd.core.view.filter.RangedFilter.prototype.matches = function(a) {
  return 0 >= this.index_.compare(this.getStartPost(), a) && 0 >= this.index_.compare(a, this.getEndPost());
};
wd.core.view.filter.RangedFilter.prototype.updateChild = function(a, b, c, d, e) {
  this.matches(new wd.core.snap.NamedNode(b, c)) || (c = wd.core.snap.EMPTY_NODE);
  return this.indexedFilter_.updateChild(a, b, c, d, e);
};
wd.core.view.filter.RangedFilter.prototype.updateFullNode = function(a, b, c) {
  b.isLeafNode() && (b = wd.core.snap.EMPTY_NODE);
  var d = b.withIndex(this.index_), d = d.updatePriority(wd.core.snap.EMPTY_NODE), e = this;
  b.forEachChild(wd.core.snap.PriorityIndex, function(a, b) {
    e.matches(new wd.core.snap.NamedNode(a, b)) || (d = d.updateImmediateChild(a, wd.core.snap.EMPTY_NODE));
  });
  return this.indexedFilter_.updateFullNode(a, d, c);
};
wd.core.view.filter.RangedFilter.prototype.updatePriority = function(a, b) {
  return a;
};
wd.core.view.filter.RangedFilter.prototype.filtersNodes = function() {
  return !0;
};
wd.core.view.filter.RangedFilter.prototype.getIndexedFilter = function() {
  return this.indexedFilter_;
};
wd.core.view.filter.RangedFilter.prototype.getIndex = function() {
  return this.index_;
};
wd.core.view.filter.RangedFilter.prototype.getStartPost_ = function(a) {
  if (a.hasStart()) {
    var b = a.getIndexStartName();
    return a.getIndex().makePost(a.getIndexStartValue(), b);
  }
  return a.getIndex().minPost();
};
wd.core.view.filter.RangedFilter.prototype.getEndPost_ = function(a) {
  if (a.hasEnd()) {
    var b = a.getIndexEndName();
    return a.getIndex().makePost(a.getIndexEndValue(), b);
  }
  return a.getIndex().maxPost();
};
wd.core.view.filter.LimitedFilter = function(a) {
  this.rangedFilter_ = new wd.core.view.filter.RangedFilter(a);
  this.index_ = a.getIndex();
  this.limit_ = a.getLimit();
  this.reverse_ = !a.isViewFromLeft();
};
wd.core.view.filter.LimitedFilter.prototype.updateChild = function(a, b, c, d, e) {
  this.rangedFilter_.matches(new wd.core.snap.NamedNode(b, c)) || (c = wd.core.snap.EMPTY_NODE);
  return a.getImmediateChild(b).equals(c) ? a : a.numChildren() < this.limit_ ? this.rangedFilter_.getIndexedFilter().updateChild(a, b, c, d, e) : this.fullLimitUpdateChild_(a, b, c, d, e);
};
wd.core.view.filter.LimitedFilter.prototype.updateFullNode = function(a, b, c) {
  var d;
  if (b.isLeafNode() || b.isEmpty()) {
    d = wd.core.snap.EMPTY_NODE.withIndex(this.index_);
  } else {
    if (2 * this.limit_ < b.numChildren() && b.isIndexed(this.index_)) {
      d = wd.core.snap.EMPTY_NODE.withIndex(this.index_);
      b = this.reverse_ ? b.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_) : b.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);
      for (var e = 0;b.hasNext() && e < this.limit_;) {
        var f = b.getNext(), g;
        if (g = this.reverse_ ? 0 >= this.index_.compare(this.rangedFilter_.getStartPost(), f) : 0 >= this.index_.compare(f, this.rangedFilter_.getEndPost())) {
          d = d.updateImmediateChild(f.name, f.node), e++;
        } else {
          break;
        }
      }
    } else {
      d = b.withIndex(this.index_);
      d = d.updatePriority(wd.core.snap.EMPTY_NODE);
      var h, k, l;
      if (this.reverse_) {
        b = d.getReverseIterator(this.index_);
        h = this.rangedFilter_.getEndPost();
        k = this.rangedFilter_.getStartPost();
        var m = this.index_.getCompare();
        l = function(a, b) {
          return m(b, a);
        };
      } else {
        b = d.getIterator(this.index_), h = this.rangedFilter_.getStartPost(), k = this.rangedFilter_.getEndPost(), l = this.index_.getCompare();
      }
      for (var e = 0, n = !1;b.hasNext();) {
        f = b.getNext(), !n && 0 >= l(h, f) && (n = !0), (g = n && e < this.limit_ && 0 >= l(f, k)) ? e++ : d = d.updateImmediateChild(f.name, wd.core.snap.EMPTY_NODE);
      }
    }
  }
  return this.rangedFilter_.getIndexedFilter().updateFullNode(a, d, c);
};
wd.core.view.filter.LimitedFilter.prototype.updatePriority = function(a, b) {
  return a;
};
wd.core.view.filter.LimitedFilter.prototype.filtersNodes = function() {
  return !0;
};
wd.core.view.filter.LimitedFilter.prototype.getIndexedFilter = function() {
  return this.rangedFilter_.getIndexedFilter();
};
wd.core.view.filter.LimitedFilter.prototype.getIndex = function() {
  return this.index_;
};
wd.core.view.filter.LimitedFilter.prototype.fullLimitUpdateChild_ = function(a, b, c, d, e) {
  var f = wd.core.view.Change, g;
  if (this.reverse_) {
    var h = this.index_.getCompare();
    g = function(a, b) {
      return h(b, a);
    };
  } else {
    g = this.index_.getCompare();
  }
  wd.core.util.assert(a.numChildren() == this.limit_, "");
  var k = new wd.core.snap.NamedNode(b, c), l = this.reverse_ ? a.getFirstChild(this.index_) : a.getLastChild(this.index_), m = this.rangedFilter_.matches(k);
  if (a.hasChild(b)) {
    var n = a.getImmediateChild(b), l = d.getChildAfterChild(this.index_, l, this.reverse_);
    null != l && l.name == b && (l = d.getChildAfterChild(this.index_, l, this.reverse_));
    d = null == l ? 1 : g(l, k);
    if (m && !c.isEmpty() && 0 <= d) {
      return null != e && e.trackChildChange(f.childChangedChange(b, c, n)), a.updateImmediateChild(b, c);
    }
    null != e && e.trackChildChange(f.childRemovedChange(b, n));
    a = a.updateImmediateChild(b, wd.core.snap.EMPTY_NODE);
    return null != l && this.rangedFilter_.matches(l) ? (null != e && e.trackChildChange(f.childAddedChange(l.name, l.node)), a.updateImmediateChild(l.name, l.node)) : a;
  }
  return c.isEmpty() ? a : m && 0 <= g(l, k) ? (null != e && (e.trackChildChange(f.childRemovedChange(l.name, l.node)), e.trackChildChange(f.childAddedChange(b, c))), a.updateImmediateChild(b, c).updateImmediateChild(l.name, wd.core.snap.EMPTY_NODE)) : a;
};
wd.core.view.QueryParams = function() {
  this.endNameSet_ = this.endSet_ = this.startNameSet_ = this.startSet_ = this.limitSet_ = !1;
  this.limit_ = 0;
  this.viewFrom_ = "";
  this.indexStartValue_ = null;
  this.indexStartName_ = "";
  this.indexEndValue_ = null;
  this.indexEndName_ = "";
  this.index_ = wd.core.snap.PriorityIndex;
};
wd.core.view.QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {INDEX_START_VALUE:"sp", INDEX_START_NAME:"sn", INDEX_END_VALUE:"ep", INDEX_END_NAME:"en", LIMIT:"l", VIEW_FROM:"vf", VIEW_FROM_LEFT:"l", VIEW_FROM_RIGHT:"r", INDEX:"i"};
wd.core.view.QueryParams.REST_QUERY_CONSTANTS_ = {ORDER_BY:"orderBy", PRIORITY_INDEX:"$priority", VALUE_INDEX:"$value", KEY_INDEX:"$key", START_AT:"startAt", END_AT:"endAt", LIMIT_TO_FIRST:"limitToFirst", LIMIT_TO_LAST:"limitToLast"};
wd.core.view.QueryParams.DEFAULT = new wd.core.view.QueryParams;
wd.core.view.QueryParams.prototype.hasStart = function() {
  return this.startSet_;
};
wd.core.view.QueryParams.prototype.isViewFromLeft = function() {
  return "" === this.viewFrom_ ? this.startSet_ : this.viewFrom_ === wd.core.view.QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;
};
wd.core.view.QueryParams.prototype.getIndexStartValue = function() {
  wd.core.util.assert(this.startSet_, "Only valid if start has been set");
  return this.indexStartValue_;
};
wd.core.view.QueryParams.prototype.getIndexStartName = function() {
  wd.core.util.assert(this.startSet_, "Only valid if start has been set");
  return this.startNameSet_ ? this.indexStartName_ : wd.core.util.MIN_NAME;
};
wd.core.view.QueryParams.prototype.hasEnd = function() {
  return this.endSet_;
};
wd.core.view.QueryParams.prototype.getIndexEndValue = function() {
  wd.core.util.assert(this.endSet_, "Only valid if end has been set");
  return this.indexEndValue_;
};
wd.core.view.QueryParams.prototype.getIndexEndName = function() {
  wd.core.util.assert(this.endSet_, "Only valid if end has been set");
  return this.endNameSet_ ? this.indexEndName_ : wd.core.util.MAX_NAME;
};
wd.core.view.QueryParams.prototype.hasLimit = function() {
  return this.limitSet_;
};
wd.core.view.QueryParams.prototype.hasAnchoredLimit = function() {
  return this.limitSet_ && "" !== this.viewFrom_;
};
wd.core.view.QueryParams.prototype.getLimit = function() {
  wd.core.util.assert(this.limitSet_, "Only valid if limit has been set");
  return this.limit_;
};
wd.core.view.QueryParams.prototype.getIndex = function() {
  return this.index_;
};
wd.core.view.QueryParams.prototype.copy_ = function() {
  var a = new wd.core.view.QueryParams;
  a.limitSet_ = this.limitSet_;
  a.limit_ = this.limit_;
  a.startSet_ = this.startSet_;
  a.indexStartValue_ = this.indexStartValue_;
  a.startNameSet_ = this.startNameSet_;
  a.indexStartName_ = this.indexStartName_;
  a.endSet_ = this.endSet_;
  a.indexEndValue_ = this.indexEndValue_;
  a.endNameSet_ = this.endNameSet_;
  a.indexEndName_ = this.indexEndName_;
  a.index_ = this.index_;
  return a;
};
wd.core.view.QueryParams.prototype.limit = function(a) {
  var b = this.copy_();
  b.limitSet_ = !0;
  b.limit_ = a;
  b.viewFrom_ = "";
  return b;
};
wd.core.view.QueryParams.prototype.limitToFirst = function(a) {
  var b = this.copy_();
  b.limitSet_ = !0;
  b.limit_ = a;
  b.viewFrom_ = wd.core.view.QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;
  return b;
};
wd.core.view.QueryParams.prototype.limitToLast = function(a) {
  var b = this.copy_();
  b.limitSet_ = !0;
  b.limit_ = a;
  b.viewFrom_ = wd.core.view.QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;
  return b;
};
wd.core.view.QueryParams.prototype.startAt = function(a, b) {
  var c = this.copy_();
  c.startSet_ = !0;
  goog.isDef(a) || (a = null);
  c.indexStartValue_ = a;
  null != b ? (c.startNameSet_ = !0, c.indexStartName_ = b) : (c.startNameSet_ = !1, c.indexStartName_ = "");
  return c;
};
wd.core.view.QueryParams.prototype.endAt = function(a, b) {
  var c = this.copy_();
  c.endSet_ = !0;
  goog.isDef(a) || (a = null);
  c.indexEndValue_ = a;
  goog.isDef(b) ? (c.endNameSet_ = !0, c.indexEndName_ = b) : (c.startEndSet_ = !1, c.indexEndName_ = "");
  return c;
};
wd.core.view.QueryParams.prototype.orderBy = function(a) {
  var b = this.copy_();
  b.index_ = a;
  return b;
};
wd.core.view.QueryParams.prototype.getQueryObject = function() {
  var a = wd.core.view.QueryParams.WIRE_PROTOCOL_CONSTANTS_, b = {};
  this.startSet_ && (b[a.INDEX_START_VALUE] = this.indexStartValue_, this.startNameSet_ && (b[a.INDEX_START_NAME] = this.indexStartName_));
  this.endSet_ && (b[a.INDEX_END_VALUE] = this.indexEndValue_, this.endNameSet_ && (b[a.INDEX_END_NAME] = this.indexEndName_));
  if (this.limitSet_) {
    b[a.LIMIT] = this.limit_;
    var c = this.viewFrom_;
    "" === c && (c = this.isViewFromLeft() ? a.VIEW_FROM_LEFT : a.VIEW_FROM_RIGHT);
    b[a.VIEW_FROM] = c;
  }
  this.index_ !== wd.core.snap.PriorityIndex && (b[a.INDEX] = this.index_.toString());
  return b;
};
wd.core.view.QueryParams.prototype.loadsAllData = function() {
  return !(this.startSet_ || this.endSet_ || this.limitSet_);
};
wd.core.view.QueryParams.prototype.isDefault = function() {
  return this.loadsAllData() && this.index_ == wd.core.snap.PriorityIndex;
};
wd.core.view.QueryParams.prototype.getNodeFilter = function() {
  return this.loadsAllData() ? new wd.core.view.filter.IndexedFilter(this.getIndex()) : this.hasLimit() ? new wd.core.view.filter.LimitedFilter(this) : new wd.core.view.filter.RangedFilter(this);
};
wd.core.view.QueryParams.prototype.toRestQueryStringParameters = function() {
  var a = wd.core.view.QueryParams.REST_QUERY_CONSTANTS_, b = {};
  if (this.isDefault()) {
    return b;
  }
  var c;
  this.index_ === wd.core.snap.PriorityIndex ? c = a.PRIORITY_INDEX : this.index_ === wd.core.snap.ValueIndex ? c = a.VALUE_INDEX : this.index_ === wd.core.snap.KeyIndex ? c = a.KEY_INDEX : (wd.core.util.assert(this.index_ instanceof wd.core.snap.SubKeyIndex, "Unrecognized index type!"), c = this.index_.toString());
  b[a.ORDER_BY] = wd.util.json.stringify(c);
  this.startSet_ && (b[a.START_AT] = wd.util.json.stringify(this.indexStartValue_), this.startNameSet_ && (b[a.START_AT] += "," + wd.util.json.stringify(this.indexStartName_)));
  this.endSet_ && (b[a.END_AT] = wd.util.json.stringify(this.indexEndValue_), this.endNameSet_ && (b[a.END_AT] += "," + wd.util.json.stringify(this.indexEndName_)));
  this.limitSet_ && (this.isViewFromLeft() ? b[a.LIMIT_TO_FIRST] = this.limit_ : b[a.LIMIT_TO_LAST] = this.limit_);
  return b;
};
goog.DEBUG && (wd.core.view.QueryParams.prototype.toString = function() {
  return wd.util.json.stringify(this.getQueryObject());
});
wd.login.transports.CordovaInAppBrowser = function(a) {
  this.requestId_ = goog.string.getRandomString() + goog.string.getRandomString() + goog.string.getRandomString();
  this.options_ = a;
};
wd.login.transports.CordovaInAppBrowser.prototype.open = function(a, b, c) {
  function d(a) {
    c && (c(wd.login.Errors.get("USER_CANCELLED")), c = null);
  }
  var e = this, f = wd.core.util.parseURL(wd.login.Constants.SERVER_HOST), g;
  b.requestId = this.requestId_;
  b[wd.login.Constants.CLIENT_OPTION_REDIRECT_TO] = f.scheme + "://" + f.host + wd.login.Constants.INTERNAL_REDIRECT_SENTINAL_PATH;
  a += /\?/.test(a) ? "" : "?";
  a += wd.util.querystring(b);
  (g = window.open(a, "_blank", "location=no")) && goog.isFunction(g.addEventListener) ? (g.addEventListener("loadstart", function(a) {
    var b;
    if (!(b = !a || !a.url)) {
      var l;
      a: {
        b = a.url;
        try {
          var m = document.createElement("a");
          m.href = b;
          l = m.host === f.host && m.pathname === wd.login.Constants.INTERNAL_REDIRECT_SENTINAL_PATH;
          break a;
        } catch (n) {
        }
        l = !1;
      }
      b = !l;
    }
    b || (a = wd.login.transports.util.extractRedirectCompletionHash(a.url), g.removeEventListener("exit", d), g.close(), a = new wd.login.RequestInfo(null, null, {requestId:e.requestId_, requestKey:a}), e.options_.requestWithCredential("/auth/session", a, c), c = null);
  }), g.addEventListener("exit", d)) : c(wd.login.Errors.get("TRANSPORT_UNAVAILABLE"));
};
wd.login.transports.CordovaInAppBrowser.isAvailable = function() {
  return !NODE_CLIENT && wd.login.util.environment.isMobileCordova();
};
wd.login.transports.CordovaInAppBrowser.prototype.classification = function() {
  return "redirect";
};
wd.login.transports.Popup = function(a) {
  if (!a.window_features || wd.login.util.environment.isMobileFirefox()) {
    a.window_features = void 0;
  }
  a.window_name || (a.window_name = "_blank");
  this.options = a;
};
wd.login.transports.Popup.prototype.open = function(a, b, c) {
  function d(a) {
    g && (document.body.removeChild(g), g = void 0);
    m && (m = clearInterval(m));
    wd.login.transports.util.removeListener(window, "message", e);
    wd.login.transports.util.removeListener(window, "unload", d);
    if (l && !a) {
      try {
        l.close();
      } catch (b) {
        h.postMessage(wd.login.Constants.POPUP_CLOSE_CMD, k);
      }
    }
    l = h = void 0;
  }
  function e(a) {
    if (a.origin === k) {
      try {
        var b = wd.util.json.eval(a.data);
        "ready" === b.a ? h.postMessage(n, k) : "error" === b.a ? (d(!1), c && (c(b.d), c = null)) : "response" === b.a && (d(b.forceKeepWindowOpen), c && (c(null, b.d), c = null));
      } catch (e) {
      }
    }
  }
  var f = wd.login.util.environment.isModernIE(), g, h;
  if (!this.options.relay_url) {
    return c(Error("invalid arguments: origin of url and relay_url must match"));
  }
  var k = wd.login.transports.util.extractOrigin(a);
  if (k !== wd.login.transports.util.extractOrigin(this.options.relay_url)) {
    c && setTimeout(function() {
      c(Error("invalid arguments: origin of url and relay_url must match"));
    }, 0);
  } else {
    f && (g = document.createElement("iframe"), g.setAttribute("src", this.options.relay_url), g.style.display = "none", g.setAttribute("name", wd.login.Constants.POPUP_RELAY_FRAME_NAME), document.body.appendChild(g), h = g.contentWindow);
    a += (/\?/.test(a) ? "" : "?") + wd.util.querystring(b);
    var l = window.open(a, this.options.window_name, this.options.window_features);
    h || (h = l);
    var m = setInterval(function() {
      l && l.closed && (d(!1), c && (c(wd.login.Errors.get("USER_CANCELLED")), c = null));
    }, 500), n = wd.util.json.stringify({a:"request", d:b});
    wd.login.transports.util.addListener(window, "unload", d);
    wd.login.transports.util.addListener(window, "message", e);
  }
};
wd.login.transports.Popup.isAvailable = function() {
  return !NODE_CLIENT && "postMessage" in window && !wd.login.util.environment.isLocalFile() && !wd.login.util.environment.isMobileWrapper() && !wd.login.util.environment.isHeadlessBrowser();
};
wd.login.transports.Popup.prototype.classification = function() {
  return "popup";
};
wd.util.jwt = {};
wd.util.jwt.decode = function(a) {
  var b = {}, c = {}, d = {}, e = "";
  try {
    var f = a.split("."), g = wd.core.util.base64Decode(f[0]) || "", h = wd.core.util.base64Decode(f[1]) || "", b = wd.util.json.eval(g), c = wd.util.json.eval(h), e = f[2], d = c.d || {};
    delete c.d;
  } catch (k) {
    console.warn("error", k);
  }
  return {header:b, claims:c, data:d, signature:e};
};
wd.util.jwt.isValidTimestamp = function(a) {
  a = wd.util.jwt.decode(a).claims;
  var b = Math.floor((new Date).getTime() / 1E3), c, d;
  "object" === typeof a && (a.hasOwnProperty("nbf") ? c = wd.util.obj.get(a, "nbf") : a.hasOwnProperty("iat") && (c = wd.util.obj.get(a, "iat")), d = a.hasOwnProperty("exp") ? wd.util.obj.get(a, "exp") : c + 86400);
  return b && c && d && b >= c && b <= d;
};
wd.util.jwt.issuedAtTime = function(a) {
  a = wd.util.jwt.decode(a).claims;
  return "object" === typeof a && a.hasOwnProperty("iat") ? wd.util.obj.get(a, "iat") : null;
};
wd.util.jwt.isValidFormat = function(a) {
  return !0;
};
wd.util.jwt.isAdmin = function(a) {
  a = wd.util.jwt.decode(a).claims;
  return "object" === typeof a && !0 === wd.util.obj.get(a, "admin");
};
wd.auth.SessionManager = function(a, b, c) {
  this.persistenceKey_ = [wd.login.Constants.SESSION_PERSISTENCE_KEY_PREFIX, b.persistenceKey, b.appId, a].join(":");
  this.stores_ = c;
};
wd.auth.SessionManager.prototype.set = function(a, b) {
  if (!b) {
    if (this.stores_.length) {
      b = this.stores_[0];
    } else {
      throw Error("wd.auth.SessionManager : No storage options available!");
    }
  }
  b.set(this.persistenceKey_, a);
};
wd.auth.SessionManager.prototype.get = function() {
  var a = goog.array.map(this.stores_, goog.bind(this.getFromStore_, this)), a = goog.array.filter(a, function(a) {
    return null !== a;
  });
  goog.array.sort(a, function(a, c) {
    return wd.util.jwt.issuedAtTime(c.idToken) - wd.util.jwt.issuedAtTime(a.idToken);
  });
  return 0 < a.length ? a.shift() : null;
};
wd.auth.SessionManager.prototype.getFromStore_ = function(a) {
  try {
    var b = a.get(this.persistenceKey_);
    if (b.idToken) {
      return b;
    }
    this.clear(a);
  } catch (c) {
  }
  return null;
};
wd.auth.SessionManager.prototype.clear = function(a) {
  var b = this;
  goog.array.forEach(this.stores_, function(a) {
    a.remove(b.persistenceKey_);
  });
};
wd.core.ReadonlyRestClient = function(a, b) {
  this.log_ = wd.core.util.logWrapper("p:rest:");
  this.repoInfo_ = a;
  this.onDataUpdate_ = b;
  this.credential_ = null;
  this.listens_ = {};
};
wd.core.ReadonlyRestClient.getListenId_ = function(a, b) {
  if (goog.isDef(b)) {
    return "tag$" + b;
  }
  wd.core.util.assert(a.getQueryParams().isDefault(), "should have a tag if it's not a default query.");
  return a.path.toString();
};
wd.core.ReadonlyRestClient.prototype.listen = function(a, b, c, d) {
  var e = a.path.toString();
  this.log_("Listen called for " + e + " " + a.queryIdentifier());
  var f = wd.core.ReadonlyRestClient.getListenId_(a, c), g = {};
  this.listens_[f] = g;
  a = a.getQueryParams().toRestQueryStringParameters();
  var h = this;
  this.restRequest_(e + ".json", a, function(a, b) {
    var m = b;
    404 === a && (a = m = null);
    if (null === a) {
      h.onDataUpdate_(e, m, !1, c);
    }
    wd.util.obj.get(h.listens_, f) === g && d(a ? 401 == a ? "permission_denied" : "rest_error:" + a : "ok", null);
  });
};
wd.core.ReadonlyRestClient.prototype.unlisten = function(a, b) {
  var c = wd.core.ReadonlyRestClient.getListenId_(a, b);
  delete this.listens_[c];
};
wd.core.ReadonlyRestClient.prototype.auth = function(a, b, c) {
  this.credential_ = a;
  c = wd.util.jwt.decode(a);
  a = c.data;
  c = c.claims && c.claims.exp;
  b && b("ok", {auth:a, expires:c});
};
wd.core.ReadonlyRestClient.prototype.unauth = function(a) {
  this.credential_ = null;
  a("ok", null);
};
wd.core.ReadonlyRestClient.prototype.onDisconnectPut = function(a, b, c) {
};
wd.core.ReadonlyRestClient.prototype.onDisconnectMerge = function(a, b, c) {
};
wd.core.ReadonlyRestClient.prototype.onDisconnectCancel = function(a, b) {
};
wd.core.ReadonlyRestClient.prototype.put = function(a, b, c, d) {
};
wd.core.ReadonlyRestClient.prototype.merge = function(a, b, c, d) {
};
wd.core.ReadonlyRestClient.prototype.reportStats = function(a) {
};
wd.core.ReadonlyRestClient.prototype.restRequest_ = function(a, b, c) {
  b = b || {};
  b.format = "export";
  this.credential_ && (b.auth = this.credential_);
  var d = (this.repoInfo_.secure ? "https://" : "http://") + this.repoInfo_.host + a + "?" + wd.util.querystring(b);
  this.log_("Sending REST request for " + d);
  var e = new XMLHttpRequest, f = this;
  e.onreadystatechange = function() {
    if (c && 4 === e.readyState) {
      f.log_("REST Response for " + d + " received. status:", e.status, "response:", e.responseText);
      var a = null;
      if (200 <= e.status && 300 > e.status) {
        try {
          a = wd.util.json.eval(e.responseText);
        } catch (b) {
          wd.core.util.warn("Failed to parse JSON response for " + d + ": " + e.responseText);
        }
        c(null, a);
      } else {
        401 !== e.status && 404 !== e.status && wd.core.util.warn("Got unsuccessful REST response for " + d + " Status: " + e.status), c(e.status);
      }
      c = null;
    }
  };
  e.open("GET", d, !0);
  e.send();
};
wd.util.utf8 = {};
wd.util.utf8.stringToByteArray = function(a) {
  for (var b = [], c = 0, d = 0;d < a.length;d++) {
    var e = a.charCodeAt(d);
    if (55296 <= e && 56319 >= e) {
      e -= 55296;
      d++;
      wd.core.util.assert(d < a.length, "Surrogate pair missing trail surrogate.");
      var f = a.charCodeAt(d) - 56320, e = 65536 + (e << 10) + f;
    }
    128 > e ? b[c++] = e : (2048 > e ? b[c++] = e >> 6 | 192 : (65536 > e ? b[c++] = e >> 12 | 224 : (b[c++] = e >> 18 | 240, b[c++] = e >> 12 & 63 | 128), b[c++] = e >> 6 & 63 | 128), b[c++] = e & 63 | 128);
  }
  return b;
};
wd.util.utf8.stringLength = function(a) {
  for (var b = 0, c = 0;c < a.length;c++) {
    var d = a.charCodeAt(c);
    128 > d ? b++ : 2048 > d ? b += 2 : 55296 <= d && 56319 >= d ? (b += 4, c++) : b += 3;
  }
  return b;
};
wd.core.util.validation = {INVALID_KEY_REGEX_:/[\[\].#$\/\u0000-\u001F\u007F]/, INVALID_PATH_REGEX_:/[\[\].#$\u0000-\u001F\u007F]/, MAX_LEAF_SIZE_:10485760, isValidKey:function(a) {
  return goog.isString(a) && 0 !== a.length && !wd.core.util.validation.INVALID_KEY_REGEX_.test(a);
}, isValidPathString:function(a) {
  return goog.isString(a) && 0 !== a.length && !wd.core.util.validation.INVALID_PATH_REGEX_.test(a);
}, isValidRootPathString:function(a) {
  a && (a = a.replace(/^\/*\.info(\/|$)/, "/"));
  return wd.core.util.validation.isValidPathString(a);
}, isValidPriority:function(a) {
  return null === a || goog.isString(a) || goog.isNumber(a) && !wd.core.util.isInvalidJSONNumber(a) || goog.isObject(a) && wd.util.obj.contains(a, ".sv");
}, validateWilddogDataArg:function(a, b, c, d, e) {
  e && !goog.isDef(c) || wd.core.util.validation.validateWilddogData(wd.util.validation.errorPrefix(a, b, e), c, d);
}, validateWilddogData:function(a, b, c) {
  c instanceof wd.core.util.Path && (c = new wd.core.util.ValidationPath(c, a));
  if (!goog.isDef(b)) {
    throw Error(a + "contains undefined " + c.toErrorString());
  }
  if (goog.isFunction(b)) {
    throw Error(a + "contains a function " + c.toErrorString() + " with contents: " + b.toString());
  }
  if (wd.core.util.isInvalidJSONNumber(b)) {
    throw Error(a + "contains " + b.toString() + " " + c.toErrorString());
  }
  if (goog.isString(b) && b.length > wd.core.util.validation.MAX_LEAF_SIZE_ / 3 && wd.util.utf8.stringLength(b) > wd.core.util.validation.MAX_LEAF_SIZE_) {
    throw Error(a + "contains a string greater than " + wd.core.util.validation.MAX_LEAF_SIZE_ + " utf8 bytes " + c.toErrorString() + " ('" + b.substring(0, 50) + "...')");
  }
  if (goog.isObject(b)) {
    var d = !1, e = !1;
    wd.util.obj.foreach(b, function(b, g) {
      if (".value" === b) {
        d = !0;
      } else {
        if (".priority" !== b && ".sv" !== b && (e = !0, !wd.core.util.validation.isValidKey(b))) {
          throw Error(a + " contains an invalid key (" + b + ") " + c.toErrorString() + '.  Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"');
        }
      }
      c.push(b);
      wd.core.util.validation.validateWilddogData(a, g, c);
      c.pop();
    });
    if (d && e) {
      throw Error(a + ' contains ".value" child ' + c.toErrorString() + " in addition to actual children.");
    }
  }
}, validateWilddogMergePaths:function(a, b) {
  var c, d;
  for (c = 0;c < b.length;c++) {
    d = b[c];
    for (var e = d.slice(), f = 0;f < e.length;f++) {
      if ((".priority" !== e[f] || f !== e.length - 1) && !wd.core.util.validation.isValidKey(e[f])) {
        throw Error(a + "contains an invalid key (" + e[f] + ") in path " + d.toString() + '. Keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]"');
      }
    }
  }
  b.sort(wd.core.util.Path.comparePaths);
  e = null;
  for (c = 0;c < b.length;c++) {
    d = b[c];
    if (null !== e && e.contains(d)) {
      throw Error(a + "contains a path " + e.toString() + " that is ancestor of another path " + d.toString());
    }
    e = d;
  }
}, validateWilddogMergeDataArg:function(a, b, c, d, e) {
  if (!e || goog.isDef(c)) {
    var f = wd.util.validation.errorPrefix(a, b, e);
    if (!goog.isObject(c) || goog.isArray(c)) {
      throw Error(f + " must be an Object containing the children to replace.");
    }
    if (wd.util.obj.contains(c, ".value")) {
      throw Error(f + ' must not contain ".value".  To overwrite with a leaf value, just use .set() instead.');
    }
    var g = [];
    wd.util.obj.foreach(c, function(a, b) {
      var c = new wd.core.util.Path(a);
      wd.core.util.validation.validateWilddogData(f, b, d.child(c));
      if (".priority" === c.getBack() && !wd.core.util.validation.isValidPriority(b)) {
        throw Error(f + "contains an invalid value for '" + c.toString() + "', which must be a valid Firebase priority (a string, finite number, server value, or null).");
      }
      g.push(c);
    });
    wd.core.util.validation.validateWilddogMergePaths(f, g);
  }
}, validatePriority:function(a, b, c, d) {
  if (!d || goog.isDef(c)) {
    if (wd.core.util.isInvalidJSONNumber(c)) {
      throw Error(wd.util.validation.errorPrefix(a, b, d) + "is " + c.toString() + ", but must be a valid Wilddog priority (a string, finite number, server value, or null).");
    }
    if (!wd.core.util.validation.isValidPriority(c)) {
      throw Error(wd.util.validation.errorPrefix(a, b, d) + "must be a valid Wilddog priority (a string, finite number, server value, or null).");
    }
  }
}, validateEventType:function(a, b, c, d) {
  if (!d || goog.isDef(c)) {
    switch(c) {
      case "value":
      ;
      case "child_added":
      ;
      case "child_removed":
      ;
      case "child_changed":
      ;
      case "child_moved":
        break;
      default:
        throw Error(wd.util.validation.errorPrefix(a, b, d) + 'must be a valid event type: "value", "child_added", "child_removed", "child_changed", or "child_moved".');;
    }
  }
}, validateKey:function(a, b, c, d) {
  if ((!d || goog.isDef(c)) && !wd.core.util.validation.isValidKey(c)) {
    throw Error(wd.util.validation.errorPrefix(a, b, d) + 'was an invalid key: "' + c + '".  Wilddog keys must be non-empty strings and can\'t contain ".", "#", "$", "/", "[", or "]").');
  }
}, validatePathString:function(a, b, c, d) {
  if ((!d || goog.isDef(c)) && !wd.core.util.validation.isValidPathString(c)) {
    throw Error(wd.util.validation.errorPrefix(a, b, d) + 'was an invalid path: "' + c + '". Paths must be non-empty strings and can\'t contain ".", "#", "$", "[", or "]"');
  }
}, validateRootPathString:function(a, b, c, d) {
  c && (c = c.replace(/^\/*\.info(\/|$)/, "/"));
  wd.core.util.validation.validatePathString(a, b, c, d);
}, validateWritablePath:function(a, b) {
  if (".info" === b.getFront()) {
    throw Error(a + " failed: Can't modify data under /.info/");
  }
}, validateUrl:function(a, b, c) {
  var d = c.path.toString();
  if (!goog.isString(c.repoInfo.host) || 0 === c.repoInfo.host.length || !wd.core.util.validation.isValidKey(c.repoInfo.namespace) || 0 !== d.length && !wd.core.util.validation.isValidRootPathString(d)) {
    throw Error(wd.util.validation.errorPrefix(a, b, !1) + 'must be a valid wilddog URL and the path can\'t contain ".", "#", "$", "[", or "]".');
  }
}, validateCredential:function(a, b, c, d) {
  if ((!d || goog.isDef(c)) && !goog.isString(c)) {
    throw Error(wd.util.validation.errorPrefix(a, b, d) + "must be a valid credential (a string).");
  }
}, validateBoolean:function(a, b, c, d) {
  if ((!d || goog.isDef(c)) && !goog.isBoolean(c)) {
    throw Error(wd.util.validation.errorPrefix(a, b, d) + "must be a boolean.");
  }
}, validateString:function(a, b, c, d) {
  if ((!d || goog.isDef(c)) && !goog.isString(c)) {
    throw Error(wd.util.validation.errorPrefix(a, b, d) + "must be a valid string.");
  }
}, validateObject:function(a, b, c, d) {
  if (!d || goog.isDef(c)) {
    if (!goog.isObject(c) || null === c) {
      throw Error(wd.util.validation.errorPrefix(a, b, d) + "must be a valid object.");
    }
  }
}, validateObjectContainsKey:function(a, b, c, d, e, f) {
  if (!e || goog.isDef(c)) {
    if (!goog.isObject(c) || null === c || !wd.util.obj.contains(c, d)) {
      throw Error(wd.util.validation.errorPrefix(a, b, e) + 'must contain the key "' + d + '"');
    }
    if (f && (c = wd.util.obj.get(c, d), "string" === f && !goog.isString(c) || "boolean" === f && !goog.isBoolean(c) || "function" === f && !goog.isFunction(c) || "object" === f && !goog.isObject(c))) {
      throw Error(wd.util.validation.errorPrefix(a, b, e) + 'must contain the key "' + d + '" with type "' + f + '"');
    }
  }
}};
wd.api.DataSnapshot = function(a, b, c) {
  this.node_ = a;
  this.query_ = b;
  this.index_ = c;
};
wd.api.DataSnapshot.prototype.val = function() {
  wd.util.validation.validateArgCount("Wilddog.DataSnapshot.val", 0, 0, arguments.length);
  return this.node_.val();
};
goog.exportProperty(wd.api.DataSnapshot.prototype, "val", wd.api.DataSnapshot.prototype.val);
wd.api.DataSnapshot.prototype.exportVal = function() {
  wd.util.validation.validateArgCount("Wilddog.DataSnapshot.exportVal", 0, 0, arguments.length);
  return this.node_.val(!0);
};
goog.exportProperty(wd.api.DataSnapshot.prototype, "exportVal", wd.api.DataSnapshot.prototype.exportVal);
wd.api.DataSnapshot.prototype.exists = function() {
  wd.util.validation.validateArgCount("Wilddog.DataSnapshot.exists", 0, 0, arguments.length);
  return !this.node_.isEmpty();
};
goog.exportProperty(wd.api.DataSnapshot.prototype, "exists", wd.api.DataSnapshot.prototype.exists);
wd.api.DataSnapshot.prototype.child = function(a) {
  wd.util.validation.validateArgCount("Wilddog.DataSnapshot.child", 0, 1, arguments.length);
  goog.isNumber(a) && (a = String(a));
  wd.core.util.validation.validatePathString("Wilddog.DataSnapshot.child", 1, a, !1);
  var b = new wd.core.util.Path(a), c = this.query_.child(b);
  return new wd.api.DataSnapshot(this.node_.getChild(b), c, wd.core.snap.PriorityIndex);
};
goog.exportProperty(wd.api.DataSnapshot.prototype, "child", wd.api.DataSnapshot.prototype.child);
wd.api.DataSnapshot.prototype.hasChild = function(a) {
  wd.util.validation.validateArgCount("Wilddog.DataSnapshot.hasChild", 1, 1, arguments.length);
  wd.core.util.validation.validatePathString("Wilddog.DataSnapshot.hasChild", 1, a, !1);
  var b = new wd.core.util.Path(a);
  return !this.node_.getChild(b).isEmpty();
};
goog.exportProperty(wd.api.DataSnapshot.prototype, "hasChild", wd.api.DataSnapshot.prototype.hasChild);
wd.api.DataSnapshot.prototype.getPriority = function() {
  wd.util.validation.validateArgCount("Wilddog.DataSnapshot.getPriority", 0, 0, arguments.length);
  return this.node_.getPriority().val();
};
goog.exportProperty(wd.api.DataSnapshot.prototype, "getPriority", wd.api.DataSnapshot.prototype.getPriority);
wd.api.DataSnapshot.prototype.forEach = function(a) {
  wd.util.validation.validateArgCount("Wilddog.DataSnapshot.forEach", 1, 1, arguments.length);
  wd.util.validation.validateCallback("Wilddog.DataSnapshot.forEach", 1, a, !1);
  if (this.node_.isLeafNode()) {
    return !1;
  }
  var b = this;
  return !!this.node_.forEachChild(this.index_, function(c, d) {
    return a(new wd.api.DataSnapshot(d, b.query_.child(c), wd.core.snap.PriorityIndex));
  });
};
goog.exportProperty(wd.api.DataSnapshot.prototype, "forEach", wd.api.DataSnapshot.prototype.forEach);
wd.api.DataSnapshot.prototype.hasChildren = function() {
  wd.util.validation.validateArgCount("Wilddog.DataSnapshot.hasChildren", 0, 0, arguments.length);
  return this.node_.isLeafNode() ? !1 : !this.node_.isEmpty();
};
goog.exportProperty(wd.api.DataSnapshot.prototype, "hasChildren", wd.api.DataSnapshot.prototype.hasChildren);
wd.api.DataSnapshot.prototype.name = function() {
  wd.core.util.warn("Wilddog.DataSnapshot.name() being deprecated. Please use Wilddog.DataSnapshot.key() instead.");
  wd.util.validation.validateArgCount("Wilddog.DataSnapshot.name", 0, 0, arguments.length);
  return this.key();
};
goog.exportProperty(wd.api.DataSnapshot.prototype, "name", wd.api.DataSnapshot.prototype.name);
wd.api.DataSnapshot.prototype.key = function() {
  wd.util.validation.validateArgCount("Wilddog.DataSnapshot.key", 0, 0, arguments.length);
  return this.query_.key();
};
goog.exportProperty(wd.api.DataSnapshot.prototype, "key", wd.api.DataSnapshot.prototype.key);
wd.api.DataSnapshot.prototype.numChildren = function() {
  wd.util.validation.validateArgCount("Wilddog.DataSnapshot.numChildren", 0, 0, arguments.length);
  return this.node_.numChildren();
};
goog.exportProperty(wd.api.DataSnapshot.prototype, "numChildren", wd.api.DataSnapshot.prototype.numChildren);
wd.api.DataSnapshot.prototype.ref = function() {
  wd.util.validation.validateArgCount("Wilddog.DataSnapshot.ref", 0, 0, arguments.length);
  return this.query_;
};
goog.exportProperty(wd.api.DataSnapshot.prototype, "ref", wd.api.DataSnapshot.prototype.ref);
wd.api.Query = function(a, b, c, d) {
  this.repo = a;
  this.path = b;
  this.queryParams_ = c;
  this.orderByCalled_ = d;
};
wd.api.Query.prototype.validateQueryEndpoints_ = function(a) {
  var b = null, c = null;
  a.hasStart() && (b = a.getIndexStartValue());
  a.hasEnd() && (c = a.getIndexEndValue());
  if (a.getIndex() === wd.core.snap.KeyIndex) {
    if (a.hasStart()) {
      if (a.getIndexStartName() != wd.core.util.MIN_NAME) {
        throw Error("Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().");
      }
      if ("string" !== typeof b) {
        throw Error("Query: When ordering by key, the argument passed to startAt(), endAt(),or equalTo() must be a string.");
      }
    }
    if (a.hasEnd()) {
      if (a.getIndexEndName() != wd.core.util.MAX_NAME) {
        throw Error("Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().");
      }
      if ("string" !== typeof c) {
        throw Error("Query: When ordering by key, the argument passed to startAt(), endAt(),or equalTo() must be a string.");
      }
    }
  } else {
    if (a.getIndex() === wd.core.snap.PriorityIndex) {
      if (null != b && !wd.core.util.validation.isValidPriority(b) || null != c && !wd.core.util.validation.isValidPriority(c)) {
        throw Error("Query: When ordering by priority, the first argument passed to startAt(), endAt(), or equalTo() must be a valid priority value (null, a number, or a string).");
      }
    } else {
      if (wd.core.util.assert(a.getIndex() instanceof wd.core.snap.SubKeyIndex || a.getIndex() === wd.core.snap.ValueIndex, "unknown index type."), null != b && "object" === typeof b || null != c && "object" === typeof c) {
        throw Error("Query: First argument passed to startAt(), endAt(), or equalTo() cannot be an object.");
      }
    }
  }
};
wd.api.Query.prototype.validateLimit_ = function(a) {
  if (a.hasStart() && a.hasEnd() && a.hasLimit() && !a.hasAnchoredLimit()) {
    throw Error("Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.");
  }
};
wd.api.Query.prototype.validateNoPreviousOrderByCall_ = function(a) {
  if (!0 === this.orderByCalled_) {
    throw Error(a + ": You can't combine multiple orderBy calls.");
  }
};
wd.api.Query.prototype.getQueryParams = function() {
  return this.queryParams_;
};
wd.api.Query.prototype.ref = function(a) {
  wd.util.validation.validateArgCount("Query.ref", 0, 1, arguments.length);
  return new Wilddog(this.app, this.repo, a ? this.path.child(a) : this.path);
};
goog.exportProperty(wd.api.Query.prototype, "ref", wd.api.Query.prototype.ref);
goog.exportProperty(wd.api.Query.prototype, "ref", wd.api.Query.prototype.ref);
wd.sync.EventType = {};
wd.api.Query.prototype.on = function(a, b, c, d) {
  wd.util.validation.validateArgCount("Query.on", 2, 4, arguments.length);
  wd.core.util.validation.validateEventType("Query.on", 1, a, !1);
  wd.util.validation.validateCallback("Query.on", 2, b, !1);
  var e = this.getCancelAndContextArgs_("Query.on", c, d);
  if ("value" === a) {
    this.onValueEvent(b, e.cancel, e.context);
  } else {
    var f = {};
    f[a] = b;
    this.onChildEvent(f, e.cancel, e.context);
  }
  return b;
};
goog.exportProperty(wd.api.Query.prototype, "on", wd.api.Query.prototype.on);
goog.exportProperty(wd.api.Query.prototype, "on", wd.api.Query.prototype.on);
wd.api.Query.prototype.onValueEvent = function(a, b, c) {
  a = new wd.core.view.ValueEventRegistration(a, b || null, c || null);
  this.repo.addEventCallbackForQuery(this, a);
};
wd.api.Query.prototype.onChildEvent = function(a, b, c) {
  a = new wd.core.view.ChildEventRegistration(a, b, c);
  this.repo.addEventCallbackForQuery(this, a);
};
wd.api.Query.prototype.off = function(a, b, c) {
  wd.util.validation.validateArgCount("Query.off", 0, 3, arguments.length);
  wd.core.util.validation.validateEventType("Query.off", 1, a, !0);
  wd.util.validation.validateCallback("Query.off", 2, b, !0);
  wd.util.validation.validateContextObject("Query.off", 3, c, !0);
  var d = null, e = null;
  "value" === a ? d = new wd.core.view.ValueEventRegistration(b || null, null, c || null) : a && (b && (e = {}, e[a] = b), d = new wd.core.view.ChildEventRegistration(e, null, c || null));
  this.repo.removeEventCallbackForQuery(this, d);
};
goog.exportProperty(wd.api.Query.prototype, "off", wd.api.Query.prototype.off);
goog.exportProperty(wd.api.Query.prototype, "off", wd.api.Query.prototype.off);
wd.api.Query.prototype.once = function(a, b) {
  wd.util.validation.validateArgCount("Query.once", 1, 4, arguments.length);
  wd.core.util.validation.validateEventType("Query.once", 1, a, !1);
  wd.util.validation.validateCallback("Query.once", 2, b, !0);
  var c = this.getCancelAndContextArgs_("Query.once", arguments[2], arguments[3]), d = this, e = !0, f = new wd.util.promise.Deferred;
  wd.util.promise.attachDummyErrorHandler(f.promise);
  var g = function(h) {
    e && (e = !1, d.off(a, g), b && b.call(c.context, h), f.resolve(h));
  };
  this.on(a, g, function(b) {
    d.off(a, g);
    c.cancel && c.cancel.call(c.context, b);
    f.reject(b);
  });
  return f.promise;
};
goog.exportProperty(wd.api.Query.prototype, "once", wd.api.Query.prototype.once);
goog.exportProperty(wd.api.Query.prototype, "once", wd.api.Query.prototype.once);
wd.api.Query.prototype.limit = function(a) {
  wd.core.util.warn("Query.limit() being deprecated. Please use Query.limitToFirst() or Query.limitToLast() instead.");
  wd.util.validation.validateArgCount("Query.limit", 1, 1, arguments.length);
  if (!goog.isNumber(a) || Math.floor(a) !== a || 0 >= a) {
    throw Error("Query.limit: First argument must be a positive integer.");
  }
  if (this.queryParams_.hasLimit()) {
    throw Error("Query.limit: Limit was already set (by another call to limit, limitToFirst, orlimitToLast.");
  }
  var b = this.queryParams_.limit(a);
  this.validateLimit_(b);
  return new wd.api.Query(this.repo, this.path, b, this.orderByCalled_);
};
goog.exportProperty(wd.api.Query.prototype, "limit", wd.api.Query.prototype.limit);
wd.api.Query.prototype.limitToFirst = function(a) {
  wd.util.validation.validateArgCount("Query.limitToFirst", 1, 1, arguments.length);
  if (!goog.isNumber(a) || Math.floor(a) !== a || 0 >= a) {
    throw Error("Query.limitToFirst: First argument must be a positive integer.");
  }
  if (this.queryParams_.hasLimit()) {
    throw Error("Query.limitToFirst: Limit was already set (by another call to limit, limitToFirst, or limitToLast).");
  }
  return new wd.api.Query(this.repo, this.path, this.queryParams_.limitToFirst(a), this.orderByCalled_);
};
goog.exportProperty(wd.api.Query.prototype, "limitToFirst", wd.api.Query.prototype.limitToFirst);
goog.exportProperty(wd.api.Query.prototype, "limitToFirst", wd.api.Query.prototype.limitToFirst);
wd.api.Query.prototype.limitToLast = function(a) {
  wd.util.validation.validateArgCount("Query.limitToLast", 1, 1, arguments.length);
  if (!goog.isNumber(a) || Math.floor(a) !== a || 0 >= a) {
    throw Error("Query.limitToLast: First argument must be a positive integer.");
  }
  if (this.queryParams_.hasLimit()) {
    throw Error("Query.limitToLast: Limit was already set (by another call to limit, limitToFirst, or limitToLast).");
  }
  return new wd.api.Query(this.repo, this.path, this.queryParams_.limitToLast(a), this.orderByCalled_);
};
goog.exportProperty(wd.api.Query.prototype, "limitToLast", wd.api.Query.prototype.limitToLast);
goog.exportProperty(wd.api.Query.prototype, "limitToLast", wd.api.Query.prototype.limitToLast);
wd.api.Query.prototype.orderByChild = function(a) {
  wd.util.validation.validateArgCount("Query.orderByChild", 1, 1, arguments.length);
  if ("$key" === a) {
    throw Error('Query.orderByChild: "$key" is invalid.  Use Query.orderByKey() instead.');
  }
  if ("$priority" === a) {
    throw Error('Query.orderByChild: "$priority" is invalid.  Use Query.orderByPriority() instead.');
  }
  if ("$value" === a) {
    throw Error('Query.orderByChild: "$value" is invalid.  Use Query.orderByValue() instead.');
  }
  wd.core.util.validation.validateKey("Query.orderByChild", 1, a, !1);
  this.validateNoPreviousOrderByCall_("Query.orderByChild");
  var b = new wd.core.snap.SubKeyIndex(a), b = this.queryParams_.orderBy(b);
  this.validateQueryEndpoints_(b);
  return new wd.api.Query(this.repo, this.path, b, !0);
};
goog.exportProperty(wd.api.Query.prototype, "orderByChild", wd.api.Query.prototype.orderByChild);
goog.exportProperty(wd.api.Query.prototype, "orderByChild", wd.api.Query.prototype.orderByChild);
wd.api.Query.prototype.orderByKey = function() {
  wd.util.validation.validateArgCount("Query.orderByKey", 0, 0, arguments.length);
  this.validateNoPreviousOrderByCall_("Query.orderByKey");
  var a = this.queryParams_.orderBy(wd.core.snap.KeyIndex);
  this.validateQueryEndpoints_(a);
  return new wd.api.Query(this.repo, this.path, a, !0);
};
goog.exportProperty(wd.api.Query.prototype, "orderByKey", wd.api.Query.prototype.orderByKey);
goog.exportProperty(wd.api.Query.prototype, "orderByKey", wd.api.Query.prototype.orderByKey);
wd.api.Query.prototype.orderByPriority = function() {
  wd.util.validation.validateArgCount("Query.orderByPriority", 0, 0, arguments.length);
  this.validateNoPreviousOrderByCall_("Query.orderByPriority");
  var a = this.queryParams_.orderBy(wd.core.snap.PriorityIndex);
  this.validateQueryEndpoints_(a);
  return new wd.api.Query(this.repo, this.path, a, !0);
};
goog.exportProperty(wd.api.Query.prototype, "orderByPriority", wd.api.Query.prototype.orderByPriority);
goog.exportProperty(wd.api.Query.prototype, "orderByPriority", wd.api.Query.prototype.orderByPriority);
wd.api.Query.prototype.orderByValue = function() {
  wd.util.validation.validateArgCount("Query.orderByValue", 0, 0, arguments.length);
  this.validateNoPreviousOrderByCall_("Query.orderByValue");
  var a = this.queryParams_.orderBy(wd.core.snap.ValueIndex);
  this.validateQueryEndpoints_(a);
  return new wd.api.Query(this.repo, this.path, a, !0);
};
goog.exportProperty(wd.api.Query.prototype, "orderByValue", wd.api.Query.prototype.orderByValue);
goog.exportProperty(wd.api.Query.prototype, "orderByValue", wd.api.Query.prototype.orderByValue);
wd.api.Query.prototype.startAt = function(a, b) {
  wd.util.validation.validateArgCount("Query.startAt", 0, 2, arguments.length);
  wd.core.util.validation.validateWilddogDataArg("Query.startAt", 1, a, this.path, !0);
  wd.core.util.validation.validateKey("Query.startAt", 2, b, !0);
  var c = this.queryParams_.startAt(a, b);
  this.validateLimit_(c);
  this.validateQueryEndpoints_(c);
  if (this.queryParams_.hasStart()) {
    throw Error("Query.startAt: Starting point was already set (by another call to startAt or equalTo).");
  }
  goog.isDef(a) || (b = a = null);
  return new wd.api.Query(this.repo, this.path, c, this.orderByCalled_);
};
goog.exportProperty(wd.api.Query.prototype, "startAt", wd.api.Query.prototype.startAt);
goog.exportProperty(wd.api.Query.prototype, "startAt", wd.api.Query.prototype.startAt);
wd.api.Query.prototype.endAt = function(a, b) {
  wd.util.validation.validateArgCount("Query.endAt", 0, 2, arguments.length);
  wd.core.util.validation.validateWilddogDataArg("Query.endAt", 1, a, this.path, !0);
  wd.core.util.validation.validateKey("Query.endAt", 2, b, !0);
  var c = this.queryParams_.endAt(a, b);
  this.validateLimit_(c);
  this.validateQueryEndpoints_(c);
  if (this.queryParams_.hasEnd()) {
    throw Error("Query.endAt: Ending point was already set (by another call to endAt or equalTo).");
  }
  return new wd.api.Query(this.repo, this.path, c, this.orderByCalled_);
};
goog.exportProperty(wd.api.Query.prototype, "endAt", wd.api.Query.prototype.endAt);
goog.exportProperty(wd.api.Query.prototype, "endAt", wd.api.Query.prototype.endAt);
wd.api.Query.prototype.equalTo = function(a, b) {
  wd.util.validation.validateArgCount("Query.equalTo", 1, 2, arguments.length);
  wd.core.util.validation.validateWilddogDataArg("Query.equalTo", 1, a, this.path, !1);
  wd.core.util.validation.validateKey("Query.equalTo", 2, b, !0);
  if (this.queryParams_.hasStart()) {
    throw Error("Query.equalTo: Starting point was already set (by another call to endAt or equalTo).");
  }
  if (this.queryParams_.hasEnd()) {
    throw Error("Query.equalTo: Ending point was already set (by another call to endAt or equalTo).");
  }
  return this.startAt(a, b).endAt(a, b);
};
goog.exportProperty(wd.api.Query.prototype, "equalTo", wd.api.Query.prototype.equalTo);
goog.exportProperty(wd.api.Query.prototype, "equalTo", wd.api.Query.prototype.equalTo);
wd.api.Query.prototype.toString = function() {
  wd.util.validation.validateArgCount("Query.toString", 0, 0, arguments.length);
  return this.repo.toString() + this.path.toUrlEncodedString();
};
goog.exportProperty(wd.api.Query.prototype, "toString", wd.api.Query.prototype.toString);
wd.api.Query.prototype.queryObject = function() {
  return this.queryParams_.getQueryObject();
};
wd.api.Query.prototype.queryIdentifier = function() {
  var a = this.queryObject(), a = wd.core.util.ObjectToUniqueKey(a);
  return "{}" === a ? "default" : a;
};
wd.api.Query.prototype.getCancelAndContextArgs_ = function(a, b, c) {
  var d = {cancel:null, context:null};
  if (b && c) {
    d.cancel = b, wd.util.validation.validateCallback(a, 3, d.cancel, !0), d.context = c, wd.util.validation.validateContextObject(a, 4, d.context, !0);
  } else {
    if (b) {
      if ("object" === typeof b && null !== b) {
        d.context = b;
      } else {
        if ("function" === typeof b) {
          d.cancel = b;
        } else {
          throw Error(wd.util.validation.errorPrefix(a, 3, !0) + " must either be a cancel callback or a context object.");
        }
      }
    }
  }
  return d;
};
wd.auth.Manager = function(a, b, c) {
  this.auth_ = a;
  this.app_ = a.app;
  this.authInfo_ = b;
  this.sessionManager_ = new wd.auth.SessionManager(this.app_.name, b, [wd.core.storage.PersistentStorage, wd.core.storage.SessionStorage]);
  this.authData_ = null;
  this.onAuthStatus_ = c;
  this.redirectRestart_ = !1;
  this.resumeSession();
};
wd.auth.Manager.prototype.getAuth = function() {
  return this.authData_ || null;
};
wd.auth.Manager.prototype.hasLoginInfo_ = function() {
  var a = wd.core.storage.SessionStorage.get(wd.login.Constants.REDIR_REQUEST_ID_KEY), b = this.sessionManager_.get();
  console.info(JSON.stringify(a), JSON.stringify(b));
  return a || b && b.idToken;
};
wd.auth.Manager.prototype.resumeSession = function() {
  var a = this;
  wd.core.storage.SessionStorage.get(wd.login.Constants.REDIR_REQUEST_ID_KEY) && this.finishOAuthRedirectLogin_();
  var b = this.sessionManager_.get();
  b && b.idToken ? this.getAccountInfo(b.idToken, function(c, d) {
    if (!c && d) {
      var e = {signIn:!0};
      e.currentUser = d;
      e.idToken = b.idToken;
      a.updateAuthStatus_(e);
      a.saveAuthData_(e, {});
    } else {
      a.updateAuthStatus_(null);
    }
  }) : this.updateAuthStatus_(null);
};
wd.auth.Manager.prototype.authenticate = function(a, b, c, d, e) {
  b && b.idToken ? this.getUserInfoWithToken_(b.idToken, c, d) : (this.updateAuthStatus_(null), wd.core.util.callUserCallback(d, Error("No idToken found in response.")));
};
wd.auth.Manager.prototype.getUserInfoWithToken_ = function(a, b, c) {
  var d = this;
  this.getAccountInfo(a, function(e, f) {
    if (!e && f) {
      var g = {signIn:!0};
      g.currentUser = f;
      g.idToken = a;
      d.updateAuthStatus_(g);
      d.saveAuthData_(g, b);
      wd.core.util.callUserCallback(c, e, f);
    } else {
      d.updateAuthStatus_(null), wd.core.util.callUserCallback(c, e);
    }
  });
};
wd.auth.Manager.prototype.unauthenticateForReasons = function(a) {
  this.authData_ = null;
  this.auth_.currentUser = null;
  this.app_.emit(wd.app.App.EventType.authStateChanged, {signIn:!1, reason:a});
  this.onAuthStatus_ && this.onAuthStatus_(!1);
  this.sessionManager_.clear();
};
wd.auth.Manager.prototype.unauthenticate = function(a) {
  this.updateAuthStatus_(null);
  wd.core.util.callUserCallback(a, null);
};
wd.auth.Manager.prototype.authOnCancel_ = function(a, b, c, d) {
  wd.core.util.warn(a + " was canceled: " + c);
  this.handleBadAuthStatus_();
  a = Error(c);
  a.code = b.toUpperCase();
  wd.core.util.callUserCallback(d, a);
};
wd.auth.Manager.prototype.handleBadAuthStatus_ = function() {
  this.sessionManager_.clear();
  this.updateAuthStatus_(null);
};
wd.auth.Manager.prototype.authWithCredential = function(a, b) {
  this.checkServerSettingsOrThrow();
  var c = new wd.login.RequestInfo({}, {}, a || {}), d = wd.auth.provider.route(a);
  c.serverParams._method = d.method;
  this.authWithTransports_([wd.login.transports.NodeHttp], "/auth/" + d.path, c, b);
};
wd.auth.Manager.prototype.authWithPopup = function(a, b, c) {
  this.checkServerSettingsOrThrow();
  var d = [wd.login.transports.Popup, wd.login.transports.CordovaInAppBrowser];
  b = wd.login.RequestInfo.fromParams(b);
  a.id ? (b.serverParams.providerId = a.id, b.serverParams.scope = a.scope || "", b.serverParams.appId = this.authInfo_.appId, b.transportOptions.window_features = "menubar=yes,modal=yes,alwaysRaised=yeslocation=yes,resizable=yes,scrollbars=yes,status=yes,height=625,width=625,top=" + ("object" === typeof screen ? .5 * (screen.height - 625) : 0) + ",left=" + ("object" === typeof screen ? .5 * (screen.width - 625) : 0), b.transportOptions.relay_url = wd.login.transports.util.getPopupChannelUrl(this.authInfo_.appId), 
  b.transportOptions.requestWithCredential = goog.bind(this.requestWithCredential, this), this.authWithTransports_(d, "/auth/oauth", b, c)) : setTimeout(function() {
    wd.core.util.callUserCallback(c, wd.login.Errors.get("TRANSPORT_UNAVAILABLE"));
  }, 0);
};
wd.auth.Manager.prototype.authWithRedirect = function(a, b, c) {
  this.checkServerSettingsOrThrow();
  var d = [wd.login.transports.Redirect];
  b = wd.login.RequestInfo.fromParams(b);
  a.id ? (b.serverParams.providerId = a.id, b.serverParams.scope = a.scope || "", b.serverParams.appId = this.authInfo_.appId, wd.core.storage.SessionStorage.set(wd.login.Constants.REDIR_CLIENT_OPTIONS_KEY, b.clientOptions), this.authWithTransports_(d, "/auth/oauth", b, c)) : wd.core.util.callUserCallback(c, wd.login.Errors.get("TRANSPORT_UNAVAILABLE"));
};
wd.auth.Manager.prototype.finishOAuthRedirectLogin_ = function() {
  var a = wd.core.storage.SessionStorage.get(wd.login.Constants.REDIR_REQUEST_ID_KEY);
  if (a) {
    var b = wd.core.storage.SessionStorage.get(wd.login.Constants.REDIR_CLIENT_OPTIONS_KEY), c = [wd.login.transports.NodeHttp], a = {requestId:a, requestKey:wd.login.transports.util.extractRedirectCompletionHash(document.location.hash)}, b = new wd.login.RequestInfo(b, {}, a);
    this.redirectRestart_ = !0;
    wd.login.transports.util.replaceRedirectCompletionHash();
    this.authWithTransports_(c, "/auth/session", b, function(a) {
      this.redirectRestart_ = !1;
      wd.core.storage.SessionStorage.remove(wd.login.Constants.REDIR_REQUEST_ID_KEY);
      wd.core.storage.SessionStorage.remove(wd.login.Constants.REDIR_CLIENT_OPTIONS_KEY);
    }.bind(this));
  }
};
wd.auth.Manager.prototype.createUser = function(a, b) {
  var c = this;
  this.checkServerSettingsOrThrow();
  var d = wd.login.RequestInfo.fromParams(a);
  d.serverParams._method = "POST";
  this.requestWithCredential("/auth/signupNewUser", d, function(a, d) {
    !a && d && d.idToken ? c.getUserInfoWithToken_(d.idToken, null, b) : wd.core.util.callUserCallback(b, a);
  });
};
wd.auth.Manager.prototype.updateUserProfile = function(a, b, c) {
  var d = this, e = {idToken:b.idToken}, f = b.photoURL || this.authData_.currentUser.photoURL, g = b.displayName || this.authData_.currentUser.displayName;
  switch(a) {
    case "unlink":
      e.deleteProvider = b.deleteProvider;
      break;
    case "profile":
      e.photoUrl = f, e.displayName = g;
  }
  this.updateAccountInfo_(e, function(a, b) {
    a ? wd.core.util.callUserCallback(c, a) : (d.authData_.currentUser.displayName = g, d.authData_.currentUser.photoURL = f, d.saveAuthData_(d.authData_), wd.core.util.callUserCallback(c, a, b));
  });
};
wd.auth.Manager.prototype.updateUserAuth = function(a, b) {
  var c = this;
  this.updateAccountInfo_(a, function(a, e) {
    a ? wd.core.util.callUserCallback(b, a) : c.authenticate(null, e, {}, b);
  });
};
wd.auth.Manager.prototype.updateAccountInfo_ = function(a, b) {
  var c = wd.login.RequestInfo.fromParams(a);
  c.serverParams._method = "POST";
  c.serverParams.idToken = this.authData_.idToken;
  this.requestWithCredential("/auth/setAccountInfo", c, function(a, c) {
    a ? wd.core.util.callUserCallback(b, a) : wd.core.util.callUserCallback(b, a, c);
  });
};
wd.auth.Manager.prototype.getAccountInfo = function(a, b) {
  var c = this;
  this.checkServerSettingsOrThrow();
  var d = wd.login.RequestInfo.fromParams({idToken:a});
  d.serverParams._method = "POST";
  this.requestWithCredential("/auth/getAccountInfo", d, function(a, d) {
    a ? wd.core.util.callUserCallback(b, a) : wd.core.util.callUserCallback(b, a, wd.auth.util.parsedUser(c, d));
  });
};
wd.auth.Manager.prototype.removeUser = function(a, b) {
  var c = this;
  this.checkServerSettingsOrThrow();
  var d = wd.login.RequestInfo.fromParams({idToken:a});
  d.serverParams._method = "POST";
  this.requestWithCredential("/auth/deleteAccount", d, function(a, d) {
    !a && d && "ok" == d.status && c.authData_ && c.unauthenticate();
    wd.core.util.callUserCallback(b, a);
  });
};
wd.auth.Manager.prototype.getOobConfirmationCode = function(a, b) {
  this.checkServerSettingsOrThrow();
  var c = wd.login.RequestInfo.fromParams(a);
  c.serverParams._method = "POST";
  this.requestWithCredential("/auth/getOobConfirmationCode", c, function(a, c) {
    wd.core.util.callUserCallback(b, a, c);
  });
};
wd.auth.Manager.prototype.fetchProvidersForEmail = function(a, b) {
  this.checkServerSettingsOrThrow();
  var c = wd.login.RequestInfo.fromParams({email:a});
  c.serverParams._method = "POST";
  this.requestWithCredential("/auth/getProvider", c, function(a, c) {
    a ? wd.core.util.callUserCallback(b, a) : wd.core.util.callUserCallback(b, a, c.allProviders || []);
  });
};
wd.auth.Manager.prototype.requestWithCredential = function(a, b, c) {
  this.requestWithTransports_([wd.login.transports.NodeHttp], a, b, c);
};
wd.auth.Manager.prototype.authWithTransports_ = function(a, b, c, d) {
  var e = this;
  this.requestWithTransports_(a, b, c, function(a, b) {
    !a && b && b.idToken ? e.authenticate(b.idToken, b, c.clientOptions, function(a, b) {
      a ? wd.core.util.callUserCallback(d, a) : wd.core.util.callUserCallback(d, null, b);
    }) : wd.core.util.callUserCallback(d, a || wd.login.Errors.get("UNKNOWN_ERROR"));
  });
};
wd.auth.Manager.prototype.requestWithTransports_ = function(a, b, c, d) {
  a = goog.array.filter(a, function(a) {
    return "function" === typeof a.isAvailable && a.isAvailable();
  });
  0 === a.length ? setTimeout(function() {
    wd.core.util.callUserCallback(d, wd.login.Errors.get("TRANSPORT_UNAVAILABLE"));
  }, 0) : (a = a.shift(), c.transportOptions.method = c.serverParams._method, a = new a(c.transportOptions), c = wd.util.obj.clone(c.serverParams), c.v = this.versionString(), c.transport = a.classification(), c.suppress_status_codes = !0, b = wd.login.transports.util.getBaseUrl() + "/" + this.authInfo_.appId + b, a.open(b, c, function(a, b) {
    if (a) {
      wd.core.util.callUserCallback(d, a);
    } else {
      if (b && b.error) {
        var c = Error(b.error.message);
        c.code = b.error.code;
        c.details = b.error.details;
        wd.core.util.callUserCallback(d, c);
      } else {
        wd.core.util.callUserCallback(d, null, b);
      }
    }
  }));
};
wd.auth.Manager.prototype.saveAuthData_ = function(a, b) {
  this.sessionManager_.clear();
  b = b || {};
  var c = wd.core.storage.PersistentStorage;
  "sessionOnly" === b[wd.login.Constants.CLIENT_OPTION_SESSION_PERSISTENCE] && (c = wd.core.storage.SessionStorage);
  "none" !== b[wd.login.Constants.CLIENT_OPTION_SESSION_PERSISTENCE] && this.sessionManager_.set(a, c);
};
wd.auth.Manager.prototype.updateAuthStatus_ = function(a) {
  this.authData_ = a;
  this.auth_.currentUser = a && a.signIn ? a.currentUser : null;
  this.onAuthStatus_ && this.onAuthStatus_(null !== a);
  a && a.signIn || this.sessionManager_.clear();
  this.app_.emit(wd.app.App.EventType.authStateChanged, a || {signIn:!1});
};
wd.auth.Manager.prototype.versionString = function() {
  return (NODE_CLIENT ? "node-" : "js-") + CLIENT_VERSION;
};
wd.auth.Manager.prototype.checkServerSettingsOrThrow = function() {
  if (this.authInfo_.isCustomHost && wd.login.Constants.SERVER_HOST === wd.login.Constants.DEFAULT_SERVER_HOST) {
    throw Error("This custom Wilddog server ('" + this.authInfo_.domain + "') does not support delegated login.");
  }
};
wd.wilddog().__regService("auth", function(a) {
  return new wd.auth.Auth(a);
});
wd.auth.Auth = function(a) {
  if (!a.options.authDomain) {
    throw Error("Could not find 'authDomain' in options.");
  }
  var b = this;
  this.authInfo = function(a) {
    var b = /^([a-zA-Z0-9\-_]+)\.([a-z]+)\.com/.exec(a.toLowerCase());
    if (!b) {
      throw Error("Bad 'authDomain' format '" + a + "'.");
    }
    return {appId:b[1], subDomain:b[2], authDomain:b[0], persistenceKey:"", isCustomHost:"wilddog" !== b[2]};
  }(a.options.authDomain);
  this.app = a;
  this.__authManager = new wd.auth.Manager(this, this.authInfo);
  this.app.bind(wd.app.App.EventType.authTokenExpired, function(a) {
    b.__authManager.unauthenticateForReasons(a.reason);
  });
};
wd.auth.Auth.prototype.onAuthStateChanged = function(a) {
  var b = this;
  wd.util.validation.validateArgCount("wilddog.auth().onAuthStateChanged", 1, 1, arguments.length);
  wd.util.validation.validateCallback("wilddog.auth().onAuthStateChanged", 1, a, !1);
  var c = function(c) {
    (c && c.signIn || !b.__authManager.hasLoginInfo_()) && a(c && c.signIn ? c.currentUser : null);
  };
  this.app.bind(wd.app.App.EventType.authStateChanged, c);
  return function() {
    b.app.unbind(wd.app.App.EventType.authStateChanged, c);
  };
};
goog.exportProperty(wd.auth.Auth.prototype, "onAuthStateChanged", wd.auth.Auth.prototype.onAuthStateChanged);
wd.auth.Auth.prototype.signInAnonymously = function(a) {
  wd.util.validation.validateArgCount("wilddog.auth().signInAnonymously", 0, 1, arguments.length);
  wd.util.validation.validateCallback("wilddog.auth().signInAnonymously", 1, a, !0);
  var b = new wd.util.promise.Deferred;
  this.__authManager.createUser({}, b.wrapCallback(a));
  return b.promise;
};
goog.exportProperty(wd.auth.Auth.prototype, "signInAnonymously", wd.auth.Auth.prototype.signInAnonymously);
wd.auth.Auth.prototype.sendPasswordResetEmail = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.auth().sendPasswordResetEmail", 1, 2, arguments.length);
  wd.util.validation.validateCallback("wilddog.auth().sendPasswordResetEmail", 2, b, !0);
  var c = new wd.util.promise.Deferred;
  this.__authManager.getOobConfirmationCode({requestType:"RESET_PASSWORD", email:a}, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(wd.auth.Auth.prototype, "sendPasswordResetEmail", wd.auth.Auth.prototype.sendPasswordResetEmail);
wd.auth.Auth.prototype.fetchProvidersForEmail = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.auth().fetchProvidersForEmail", 1, 2, arguments.length);
  wd.util.validation.validateCallback("wilddog.auth().fetchProvidersForEmail", 2, b, !0);
  var c = new wd.util.promise.Deferred;
  this.__authManager.fetchProvidersForEmail(a, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(wd.auth.Auth.prototype, "fetchProvidersForEmail", wd.auth.Auth.prototype.fetchProvidersForEmail);
wd.auth.Auth.prototype.signInWithCustomToken = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.auth().signInWithCustomToken", 1, 2, arguments.length);
  wd.util.validation.validateCallback("wilddog.auth().signInWithCustomToken", 2, b, !0);
  var c = new wd.util.promise.Deferred;
  this.__authManager.authWithCredential({providerId:"custom", token:a}, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(wd.auth.Auth.prototype, "signInWithCustomToken", wd.auth.Auth.prototype.signInWithCustomToken);
wd.auth.Auth.prototype.signInWithEmailAndPassword = function(a, b, c) {
  wd.util.validation.validateArgCount("wilddog.auth().signInWithEmailAndPassword", 2, 3, arguments.length);
  wd.util.validation.validateCallback("wilddog.auth().signInWithEmailAndPassword", 3, c, !0);
  var d = new wd.util.promise.Deferred;
  this.__authManager.authWithCredential({providerId:"password", password:b, email:a}, d.wrapCallback(c));
  return d.promise;
};
goog.exportProperty(wd.auth.Auth.prototype, "signInWithEmailAndPassword", wd.auth.Auth.prototype.signInWithEmailAndPassword);
wd.auth.Auth.prototype.signOut = function(a) {
  wd.util.validation.validateArgCount("wilddog.auth().signOut", 0, 1, arguments.length);
  wd.util.validation.validateCallback("wilddog.auth().signOut", 1, a, !0);
  var b = new wd.util.promise.Deferred;
  this.__authManager.unauthenticate(b.wrapCallback(a));
  return b.promise;
};
goog.exportProperty(wd.auth.Auth.prototype, "signOut", wd.auth.Auth.prototype.signOut);
wd.auth.Auth.prototype.createUserWithEmailAndPassword = function(a, b, c) {
  wd.util.validation.validateArgCount("wilddog.auth().createUserWithEmailAndPassword", 2, 3, arguments.length);
  wd.util.validation.validateCallback("wilddog.auth().createUserWithEmailAndPassword", 3, c, !0);
  var d = new wd.util.promise.Deferred;
  this.__authManager.createUser({email:a, password:b}, d.wrapCallback(c));
  return d.promise;
};
goog.exportProperty(wd.auth.Auth.prototype, "createUserWithEmailAndPassword", wd.auth.Auth.prototype.createUserWithEmailAndPassword);
wd.auth.Auth.prototype.signInWithPopup = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.auth().signInWithPopup", 1, 2, arguments.length);
  wd.core.util.validation.validateObject("wilddog.auth().signInWithPopup", 1, a, !1);
  var c = new wd.util.promise.Deferred;
  this.__authManager.authWithPopup(a, {authType:"login"}, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(wd.auth.Auth.prototype, "signInWithPopup", wd.auth.Auth.prototype.signInWithPopup);
wd.auth.Auth.prototype.signInWithRedirect = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.auth().signInWithRedirect", 1, 2, arguments.length);
  wd.core.util.validation.validateObject("wilddog.auth().signInWithRedirect", 1, a, !1);
  var c = new wd.util.promise.Deferred;
  this.__authManager.authWithRedirect(a, {authType:"login"}, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(wd.auth.Auth.prototype, "signInWithRedirect", wd.auth.Auth.prototype.signInWithRedirect);
wd.auth.Auth.prototype.signInWithCredential = function(a, b) {
  wd.util.validation.validateArgCount("wilddog.auth().signInWithCredential", 1, 2, arguments.length);
  wd.core.util.validation.validateObject("wilddog.auth().signInWithCredential", 1, a, !1);
  var c = {};
  "password" == a.provider ? (c.providerId = a.provider, c.email = a.email, c.password = a.password) : (c.providerId = a.provider, c.accessToken = a.accessToken, c.openId = a.openId || a.email);
  c.authType = "login";
  var d = new wd.util.promise.Deferred;
  this.__authManager.authWithCredential(c, d.wrapCallback(b));
  return d.promise;
};
goog.exportProperty(wd.auth.Auth.prototype, "signInWithCredential", wd.auth.Auth.prototype.signInWithCredential);
wd.realtime = {};
wd.realtime.Constants = {PROTOCOL_VERSION:"1.0", VERSION_PARAM:"v", SESSION_PARAM:"s", REFERER_PARAM:"r", FAILLIST_PARAM:"fst", FORGE_REF:"f", FORGE_DOMAIN:"wilddogio.com"};
var REALTIME_STATE_CONNECTING = 0, REALTIME_STATE_CONNECTED = 1, REALTIME_STATE_DISCONNECTED = 2, MESSAGE_TYPE = "t", MESSAGE_DATA = "d", CONTROL_SHUTDOWN = "s", CONTROL_RESET = "r", CONTROL_ERROR = "e", CONTROL_PONG = "o", SWITCH_ACK = "a", END_TRANSMISSION = "n", PING = "p", SERVER_HELLO = "h", Socket_ = null, Socket_ = "undefined" != typeof require && "undefined" !== typeof module && module.exports ? require("engine.io-client") : eio;
wd.realtime.Connection = function(a, b, c, d, e, f) {
  this.id = a;
  this.log_ = wd.core.util.logWrapper("c:" + this.id + ":");
  this.onMessage_ = c;
  this.onReady_ = d;
  this.onDisconnect_ = e;
  this.onKill_ = f;
  this.repoInfo_ = b;
  this.state_ = REALTIME_STATE_CONNECTING;
  this.log_("Connection created");
  this.start_();
};
wd.realtime.Connection.prototype.start_ = function() {
  this.conn_ = this.newSocket_();
  this.conn_.on("open", this.onSocketOpen_());
  this.conn_.on("error", this.onSocketError_());
};
wd.realtime.Connection.prototype.onSocketOpen_ = function() {
  var a = this;
  return function() {
    a.conn_.on("message", a.onSocketMessage_());
    a.conn_.on("close", a.onSocketClose_());
  };
};
wd.realtime.Connection.prototype.onSocketMessage_ = function() {
  var a = this;
  return function(b) {
    if (null == b) {
      throw Error("data is null");
    }
    if (0 != b.charAt(0)) {
      if (2 == b.charAt(0)) {
        var c = null;
        try {
          c = JSON.parse(b.substr(1));
        } catch (d) {
          throw d;
        }
        if ("object" != typeof c || 2 > c.length) {
          throw Error("decodedData in wrong format");
        }
        b = c[1];
        "wd" == c[0] ? a.receiveMessage_(b) : a.log_("eventType not known");
      } else {
        1 != b.charAt(0) && a.log_("data format error");
      }
    }
  };
};
wd.realtime.Connection.prototype.onSocketClose_ = function() {
  var a = this;
  return function() {
    a.state_ !== REALTIME_STATE_DISCONNECTED && (a.log_("Closing realtime connection."), a.state_ = REALTIME_STATE_DISCONNECTED, a.onDisconnect_ && (a.onDisconnect_(), a.onDisconnect_ = null));
  };
};
wd.realtime.Connection.prototype.onSocketError_ = function() {
  var a = this;
  return function(b) {
    if (a.state_ == REALTIME_STATE_CONNECTING) {
      var c = a.repoInfo_.internalHost;
      a.repoInfo_.addFailHost(c);
      a.log_("error while connecting", b, c);
      a.repoInfo_.updateHost();
    }
    a.close();
  };
};
wd.realtime.Connection.prototype.receiveMessage_ = function(a) {
  "c" == a[MESSAGE_TYPE] ? this.receiveControl_(a[MESSAGE_DATA]) : "d" == a[MESSAGE_TYPE] && this.receiveData_(a[MESSAGE_DATA]);
};
wd.realtime.Connection.prototype.receiveControl_ = function(a) {
  if (a[MESSAGE_TYPE] == SERVER_HELLO) {
    this.onHandshake_(a[MESSAGE_DATA]);
  } else {
    if (a[MESSAGE_TYPE] == CONTROL_RESET) {
      this.onReset_(a[MESSAGE_DATA]);
    } else {
      a[MESSAGE_TYPE] == CONTROL_SHUTDOWN && (this.onKill_(a[MESSAGE_DATA]), this.close());
    }
  }
};
wd.realtime.Connection.prototype.receiveData_ = function(a) {
  this.onMessage_(a);
};
wd.realtime.Connection.prototype.onHandshake_ = function(a) {
  var b = a.ts, c = a.v, d = a.h;
  this.sessionId = a.s;
  wd.realtime.Constants.PROTOCOL_VERSION != c && wd.core.util.warn("Protocol version mismatch detected");
  this.state_ == REALTIME_STATE_CONNECTING && (d != this.repoInfo_.internalHost ? (this.repoInfo_.updateHost(d), this.log_("updateHost ", d), this.conn_.close(), this.conn_ = this.newSocket_(), this.conn_.on("open", this.onSocketOpen_()), this.conn_.on("error", this.onSocketError_())) : (this.state_ = REALTIME_STATE_CONNECTED, this.log_("realtime state connected"), this.repoInfo_.removeFailHost(this.repoInfo_.internalHost), this.onReady_ && (this.onReady_(b), this.onReady_ = null)));
};
wd.realtime.Connection.prototype.newSocket_ = function(a) {
  var b = (this.repoInfo_.secure ? "https://" : "http://") + this.repoInfo_.internalHost + "?" + wd.realtime.Constants.VERSION_PARAM + "=" + wd.realtime.Constants.PROTOCOL_VERSION + "&cv=" + CLIENT_VERSION;
  this.repoInfo_.needsQueryParam() && (b = b + "&ns=" + this.repoInfo_.namespace);
  this.sessionId && (b = b + "&" + wd.realtime.Constants.SESSION_PARAM + "=" + this.sessionId);
  0 < this.repoInfo_.failList.length && (b = b + "&" + wd.realtime.Constants.FAILLIST_PARAM + "=" + encodeURIComponent(this.repoInfo_.failList.join(",")));
  var c = {path:"/.ws", rememberUpgrade:!0};
  "undefined" == typeof document && (c.jsonp = !1);
  null != a && (c.transports = a);
  return Socket_(b, c);
};
wd.realtime.Connection.prototype.nextTransportId_ = function() {
  return "c:" + this.id + ":" + this.connectionCount++;
};
wd.realtime.Connection.prototype.sendRequest = function(a) {
  a = "2" + JSON.stringify(["wd", {t:"d", d:a}]);
  this.conn_.send(a);
};
wd.realtime.Connection.prototype.close = function() {
  this.state_ !== REALTIME_STATE_DISCONNECTED && (this.log_("Closing realtime connection."), this.state_ = REALTIME_STATE_DISCONNECTED, this.conn_.close(), this.onDisconnect_ && (this.onDisconnect_(), this.onDisconnect_ = null));
};
wd.realtime.Connection.prototype.onReset_ = function(a) {
  this.log_("Reset packet received.  New host: " + a);
  this.repoInfo_.updateHost(a);
  this.close();
};
var RECONNECT_MIN_DELAY = 1E3, RECONNECT_MAX_DELAY_DEFAULT = 3E5, RECONNECT_MAX_DELAY_FOR_ADMINS = 3E4, RECONNECT_DELAY_MULTIPLIER = 1.3, RECONNECT_DELAY_RESET_TIMEOUT = 3E4;
wd.core.PersistentConnection = function(a, b, c, d) {
  this.id = wd.core.PersistentConnection.nextPersistentConnectionId_++;
  this.log_ = wd.core.util.logWrapper("p:" + this.id + ":");
  this.killed_ = this.interrupted_ = !1;
  this.listens_ = {};
  this.outstandingPuts_ = [];
  this.outstandingPutCount_ = 0;
  this.onDisconnectRequestQueue_ = [];
  this.connected_ = !1;
  this.reconnectDelay_ = RECONNECT_MIN_DELAY;
  this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;
  this.onDataUpdate_ = b;
  this.onConnectStatus_ = c;
  this.onServerInfoUpdate_ = d;
  this.repoInfo_ = a;
  this.securityDebugCallback_ = null;
  this.requestCBHash_ = {};
  this.requestNumber_ = 0;
  this.firstConnection_ = !0;
  this.lastConnectionEstablishedTime_ = this.lastConnectionAttemptTime_ = null;
  this.scheduleConnect_(0);
  wd.core.util.VisibilityMonitor.getInstance().on("visible", this.onVisible_, this);
  if (-1 === a.host.indexOf("wd.local")) {
    wd.core.util.OnlineMonitor.getInstance().on("online", this.onOnline_, this);
  }
};
wd.core.PersistentConnection.nextPersistentConnectionId_ = 0;
wd.core.PersistentConnection.nextConnectionId_ = 0;
wd.core.PersistentConnection.prototype.sendRequest = function(a, b, c) {
  var d = ++this.requestNumber_;
  a = {r:d, a:a, b:b};
  this.log_(wd.util.json.stringify(a));
  wd.core.util.assert(this.connected_, "sendRequest call when we're not connected not allowed.");
  this.realtime_.sendRequest(a);
  c && (this.requestCBHash_[d] = c);
};
wd.core.PersistentConnection.prototype.listen = function(a, b, c, d) {
  var e = a.queryIdentifier(), f = a.path.toString();
  this.log_("Listen called for " + f + " " + e);
  this.listens_[f] = this.listens_[f] || {};
  wd.core.util.assert(!this.listens_[f][e], "listen() called twice for same path/queryId.");
  a = {onComplete:d, hashFn:b, query:a, tag:c};
  this.listens_[f][e] = a;
  this.connected_ && this.sendListen_(a);
};
wd.core.PersistentConnection.prototype.sendListen_ = function(a) {
  var b = a.query, c = b.path.toString(), d = b.queryIdentifier(), e = this;
  this.log_("Listen on " + c + " for " + d);
  var f = {p:c};
  a.tag && (f.q = b.queryObject(), f.t = a.tag);
  f.h = a.hashFn();
  this.sendRequest("q", f, function(f) {
    var h = f.d, k = f.s;
    e.warnOnListenWarnings_(h, b);
    if ((e.listens_[c] && e.listens_[c][d]) === a && (e.log_("listen response", f), "ok" !== k && e.removeListen_(c, d), a.onComplete)) {
      a.onComplete(k, h);
    }
  });
};
wd.core.PersistentConnection.prototype.warnOnListenWarnings_ = function(a, b) {
  if (a && "object" === typeof a && wd.util.obj.contains(a, "w")) {
    var c = wd.util.obj.get(a, "w");
    goog.isArray(c) && goog.array.contains(c, "no_index") && (c = '".indexOn": "' + b.getQueryParams().getIndex().toString() + '"', wd.core.util.warn("Using an unspecified index. Consider adding " + c + " at " + b.path.toString() + " to your security rules for better performance"));
  }
};
wd.core.PersistentConnection.prototype.auth = function(a, b, c) {
  this.credential_ = {cred:a, firstRequestSent:!1, callback:b, cancelCallback:c};
  this.log_("Authenticating using credential: " + a);
  this.tryAuth();
  this.reduceReconnectDelayIfAdminCredential_(a);
};
wd.core.PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function(a) {
  40 == a.length && (this.log_("Admin auth credential detected.  Reducing max reconnect time."), this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS);
};
wd.core.PersistentConnection.prototype.unauth = function(a) {
  delete this.credential_;
  this.connected_ && this.sendRequest("unauth", {}, function(b) {
    a(b.s, b.d);
  });
};
wd.core.PersistentConnection.prototype.tryAuth = function() {
  var a = this.credential_, b = this;
  this.connected_ && a && this.sendRequest("auth", {cred:a.cred}, function(c) {
    var d = c.s;
    c = c.d || "error";
    "ok" !== d && b.credential_ === a && delete b.credential_;
    a.firstRequestSent ? "ok" !== d && a.cancelCallback && a.cancelCallback(d, c) : (a.firstRequestSent = !0, a.callback && a.callback(d, c));
  });
};
wd.core.PersistentConnection.prototype.unlisten = function(a, b) {
  var c = a.path.toString(), d = a.queryIdentifier();
  this.log_("Unlisten called for " + c + " " + d);
  this.removeListen_(c, d) && this.connected_ && this.sendUnlisten_(c, d, a.queryObject(), b);
};
wd.core.PersistentConnection.prototype.sendUnlisten_ = function(a, b, c, d) {
  this.log_("Unlisten on " + a + " for " + b);
  a = {p:a};
  d && (a.q = c, a.t = d);
  this.sendRequest("n", a);
};
wd.core.PersistentConnection.prototype.onDisconnectPut = function(a, b, c) {
  this.connected_ ? this.sendOnDisconnect_("o", a, b, c) : this.onDisconnectRequestQueue_.push({pathString:a, action:"o", data:b, onComplete:c});
};
wd.core.PersistentConnection.prototype.onDisconnectMerge = function(a, b, c) {
  this.connected_ ? this.sendOnDisconnect_("om", a, b, c) : this.onDisconnectRequestQueue_.push({pathString:a, action:"om", data:b, onComplete:c});
};
wd.core.PersistentConnection.prototype.onDisconnectCancel = function(a, b) {
  this.connected_ ? this.sendOnDisconnect_("oc", a, null, b) : this.onDisconnectRequestQueue_.push({pathString:a, action:"oc", data:null, onComplete:b});
};
wd.core.PersistentConnection.prototype.sendOnDisconnect_ = function(a, b, c, d) {
  b = {p:b, d:c};
  this.log_("onDisconnect " + a, b);
  this.sendRequest(a, b, function(a) {
    d && setTimeout(function() {
      d(a.s, a.d);
    }, Math.floor(0));
  });
};
wd.core.PersistentConnection.prototype.put = function(a, b, c, d) {
  this.putInternal("p", a, b, c, d);
};
wd.core.PersistentConnection.prototype.merge = function(a, b, c, d) {
  this.putInternal("m", a, b, c, d);
};
wd.core.PersistentConnection.prototype.putInternal = function(a, b, c, d, e) {
  c = {p:b, d:c};
  goog.isDef(e) && (c.h = e);
  this.outstandingPuts_.push({action:a, request:c, onComplete:d});
  this.outstandingPutCount_++;
  a = this.outstandingPuts_.length - 1;
  this.connected_ ? this.sendPut_(a) : this.log_("Buffering put: " + b);
};
wd.core.PersistentConnection.prototype.sendPut_ = function(a) {
  var b = this, c = this.outstandingPuts_[a].action, d = this.outstandingPuts_[a].request, e = this.outstandingPuts_[a].onComplete;
  this.outstandingPuts_[a].queued = this.connected_;
  this.sendRequest(c, d, function(d) {
    b.log_(c + " response", d);
    delete b.outstandingPuts_[a];
    b.outstandingPutCount_--;
    0 === b.outstandingPutCount_ && (b.outstandingPuts_ = []);
    e && e(d.s, d.d);
  });
};
wd.core.PersistentConnection.prototype.reportStats = function(a) {
  if (this.connected_) {
    a = {c:a};
    this.log_("reportStats", a);
    var b = this;
    this.sendRequest("s", a, function(a) {
      "ok" !== a.s && b.log_("reportStats", "Error sending stats: " + a.d);
    });
  }
};
wd.core.PersistentConnection.prototype.onDataMessage_ = function(a) {
  if ("r" in a) {
    this.log_("from server: " + wd.util.json.stringify(a));
    var b = a.r, c = this.requestCBHash_[b];
    c && (delete this.requestCBHash_[b], c(a.b));
  } else {
    if ("error" in a) {
      throw "A server-side error has occurred: " + a.error;
    }
    if ("a" in a) {
      this.onDataPush_(a.a, a.b);
    }
  }
};
wd.core.PersistentConnection.prototype.onDataPush_ = function(a, b) {
  this.log_("handleServerMessage", a, b);
  if ("d" === a) {
    this.onDataUpdate_(b.p, b.d, !1, b.t);
  } else {
    if ("m" === a) {
      this.onDataUpdate_(b.p, b.d, !0, b.t);
    } else {
      if ("c" === a) {
        this.onListenRevoked_(b.p, b.q);
      } else {
        if ("ac" === a) {
          this.onAuthRevoked_(b.s, b.d);
        } else {
          if ("sd" === a) {
            this.onSecurityDebugPacket_(b);
          } else {
            wd.core.util.error("Unrecognized action received from server: " + wd.util.json.stringify(a) + "\nAre you using the latest client?");
          }
        }
      }
    }
  }
};
wd.core.PersistentConnection.prototype.onReady_ = function(a) {
  this.log_("connection ready");
  this.connected_ = !0;
  this.lastConnectionEstablishedTime_ = (new Date).getTime();
  this.handleTimestamp_(a);
  this.sendConnectStats_();
  this.restoreState_();
  this.firstConnection_ = !1;
  this.onConnectStatus_(!0);
};
wd.core.PersistentConnection.prototype.scheduleConnect_ = function(a) {
  wd.core.util.assert(!this.realtime_, "Scheduling a connect when we're already connected/ing?");
  this.establishConnectionTimer_ && clearTimeout(this.establishConnectionTimer_);
  var b = this;
  this.establishConnectionTimer_ = setTimeout(function() {
    b.establishConnectionTimer_ = null;
    b.establishConnection_();
  }, Math.floor(a));
};
wd.core.PersistentConnection.prototype.onVisible_ = function(a) {
  a && !this.visible_ && this.reconnectDelay_ === this.maxReconnectDelay_ && (this.log_("Window became visible.  Reducing delay."), this.reconnectDelay_ = RECONNECT_MIN_DELAY, this.realtime_ || this.scheduleConnect_(0));
  this.visible_ = a;
};
wd.core.PersistentConnection.prototype.onOnline_ = function(a) {
  a ? (this.log_("Browser went online."), this.reconnectDelay_ = RECONNECT_MIN_DELAY, this.realtime_ || this.scheduleConnect_(0)) : (this.log_("Browser went offline.  Killing connection."), this.realtime_ && this.realtime_.close());
};
wd.core.PersistentConnection.prototype.onRealtimeDisconnect_ = function() {
  this.log_("data client disconnected");
  this.connected_ = !1;
  this.realtime_ = null;
  this.cancelSentTransactions_();
  this.requestCBHash_ = {};
  if (this.shouldReconnect_()) {
    this.visible_ ? this.lastConnectionEstablishedTime_ && ((new Date).getTime() - this.lastConnectionEstablishedTime_ > RECONNECT_DELAY_RESET_TIMEOUT && (this.reconnectDelay_ = RECONNECT_MIN_DELAY), this.lastConnectionEstablishedTime_ = null) : (this.log_("Window isn't visible.  Delaying reconnect."), this.reconnectDelay_ = this.maxReconnectDelay_, this.lastConnectionAttemptTime_ = (new Date).getTime());
    var a = (new Date).getTime() - this.lastConnectionAttemptTime_, a = Math.max(0, this.reconnectDelay_ - a), a = Math.random() * a;
    this.log_("Trying to reconnect in " + a + "ms");
    this.scheduleConnect_(a);
    this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);
  }
  this.onConnectStatus_(!1);
};
wd.core.PersistentConnection.prototype.establishConnection_ = function() {
  if (this.shouldReconnect_()) {
    this.log_("Making a connection attempt");
    this.lastConnectionAttemptTime_ = (new Date).getTime();
    this.lastConnectionEstablishedTime_ = null;
    var a = goog.bind(this.onDataMessage_, this), b = goog.bind(this.onReady_, this), c = goog.bind(this.onRealtimeDisconnect_, this), d = this.id + ":" + wd.core.PersistentConnection.nextConnectionId_++, e = this;
    this.realtime_ = new wd.realtime.Connection(d, this.repoInfo_, a, b, c, function(a) {
      wd.core.util.warn(a + " (" + e.repoInfo_.toString() + ")");
      e.killed_ = !0;
    });
  }
};
wd.core.PersistentConnection.prototype.interrupt = function() {
  this.interrupted_ = !0;
  if (this.realtime_) {
    this.realtime_.close();
  } else {
    if (this.establishConnectionTimer_ && (clearTimeout(this.establishConnectionTimer_), this.establishConnectionTimer_ = null), this.connected_) {
      this.onRealtimeDisconnect_();
    }
  }
};
wd.core.PersistentConnection.prototype.resume = function() {
  this.interrupted_ = !1;
  this.reconnectDelay_ = RECONNECT_MIN_DELAY;
  this.realtime_ || this.scheduleConnect_(0);
};
wd.core.PersistentConnection.prototype.handleTimestamp_ = function(a) {
  a -= (new Date).getTime();
  this.onServerInfoUpdate_({serverTimeOffset:a});
};
wd.core.PersistentConnection.prototype.cancelSentTransactions_ = function() {
  for (var a = 0;a < this.outstandingPuts_.length;a++) {
    var b = this.outstandingPuts_[a];
    if (b && "h" in b.request && b.queued) {
      if (b.onComplete) {
        b.onComplete("disconnect");
      }
      delete this.outstandingPuts_[a];
      this.outstandingPutCount_--;
    }
  }
  0 === this.outstandingPutCount_ && (this.outstandingPuts_ = []);
};
wd.core.PersistentConnection.prototype.onListenRevoked_ = function(a, b) {
  var c;
  c = b ? goog.array.map(b, function(a) {
    return wd.core.util.ObjectToUniqueKey(a);
  }).join("$") : "default";
  if ((c = this.removeListen_(a, c)) && c.onComplete) {
    c.onComplete("permission_denied");
  }
};
wd.core.PersistentConnection.prototype.removeListen_ = function(a, b) {
  var c = (new wd.core.util.Path(a)).toString(), d;
  goog.isDef(this.listens_[c]) ? (d = this.listens_[c][b], delete this.listens_[c][b], 0 === goog.object.getCount(this.listens_[c]) && delete this.listens_[c]) : d = void 0;
  return d;
};
wd.core.PersistentConnection.prototype.onAuthRevoked_ = function(a, b) {
  var c = this.credential_;
  delete this.credential_;
  c && c.cancelCallback && c.cancelCallback(a, b);
};
wd.core.PersistentConnection.prototype.onSecurityDebugPacket_ = function(a) {
  this.securityDebugCallback_ ? this.securityDebugCallback_(a) : "msg" in a && "undefined" !== typeof console && console.log("WILDDOG: " + a.msg.replace("\n", "\nWILDDOG: "));
};
wd.core.PersistentConnection.prototype.restoreState_ = function() {
  this.tryAuth();
  var a = this;
  goog.object.forEach(this.listens_, function(b, d) {
    goog.object.forEach(b, function(b) {
      a.sendListen_(b);
    });
  });
  for (var b = 0;b < this.outstandingPuts_.length;b++) {
    this.outstandingPuts_[b] && this.sendPut_(b);
  }
  for (;this.onDisconnectRequestQueue_.length;) {
    b = this.onDisconnectRequestQueue_.shift(), this.sendOnDisconnect_(b.action, b.pathString, b.data, b.onComplete);
  }
};
wd.core.PersistentConnection.prototype.sendConnectStats_ = function() {
  var a = {};
  a["sdk.js." + CLIENT_VERSION.replace(/\./g, "-")] = 1;
  wd.login.util.environment.isMobileCordova() && (a["framework.cordova"] = 1);
  this.reportStats(a);
};
wd.core.PersistentConnection.prototype.shouldReconnect_ = function() {
  var a = wd.core.util.OnlineMonitor.getInstance().currentlyOnline();
  return !this.killed_ && !this.interrupted_ && a;
};
wd.sync.Repo = function(a, b, c) {
  this.repoInfo_ = b;
  this.app_ = a;
  this.stats_ = wd.core.stats.StatsManager.getCollection(b);
  this.eventQueue_ = new wd.core.view.EventQueue;
  this.nextWriteId_ = 1;
  this.persistentConnection_ = null;
  this.server_;
  c || wd.core.util.beingCrawled() ? (this.server_ = new wd.core.ReadonlyRestClient(this.repoInfo_, goog.bind(this.onDataUpdate_, this)), setTimeout(goog.bind(this.onConnectStatus_, this, !0), 0)) : this.server_ = this.persistentConnection_ = new wd.core.PersistentConnection(this.repoInfo_, goog.bind(this.onDataUpdate_, this), goog.bind(this.onConnectStatus_, this), goog.bind(this.onServerInfoUpdate_, this));
  this.statsReporter_ = wd.core.stats.StatsManager.getOrCreateReporter(b, goog.bind(function() {
    return new wd.core.stats.StatsReporter(this.stats_, this.server_);
  }, this));
  this.transactions_init_();
  this.infoData_ = new wd.core.SnapshotHolder;
  var d = this;
  this.infoSyncTree_ = new wd.core.SyncTree({startListening:function(a, b, c, h) {
    b = [];
    c = d.infoData_.getNode(a.path);
    c.isEmpty() || (b = d.infoSyncTree_.applyServerOverwrite(a.path, c), setTimeout(function() {
      h("ok");
    }, 0));
    return b;
  }, stopListening:goog.nullFunction});
  this.app_.bind(wd.app.App.EventType.authStateChanged, function(a) {
    a && a.signIn ? d.server_.auth(a.idToken, function(b, c) {
      d.auth_(b, c, a);
    }, function(a, b) {
      d.unAuth_(a, b);
    }) : d.server_.unauth(function(a, b) {
      d.unAuth_(a, b);
    });
  });
  this.updateInfo_("connected", !1);
  this.onDisconnect_ = new wd.core.SparseSnapshotTree;
  this.dataUpdateCount = 0;
  this.interceptServerDataCallback_ = null;
  this.serverSyncTree_ = new wd.core.SyncTree({startListening:function(a, b, c, h) {
    d.server_.listen(a, c, b, function(b, c) {
      var f = h(b, c);
      d.eventQueue_.raiseEventsForChangedPath(a.path, f);
    });
    return [];
  }, stopListening:function(a, b) {
    d.server_.unlisten(a, b);
  }});
};
wd.sync.Repo.prototype.auth_ = function(a, b, c) {
  this.onAuthStatus_(!0);
};
wd.sync.Repo.prototype.unAuth_ = function(a, b) {
  this.onAuthStatus_(!1);
  "expired_token" == a && this.app_.emit(wd.app.App.EventType.authTokenExpired, {status:a, reason:b});
};
wd.sync.Repo.prototype.toString = function() {
  return (this.repoInfo_.secure ? "https://" : "http://") + this.repoInfo_.host;
};
wd.sync.Repo.prototype.name = function() {
  return this.repoInfo_.namespace;
};
wd.sync.Repo.prototype.serverTime = function() {
  var a = this.infoData_.getNode(new wd.core.util.Path(".info/serverTimeOffset")).val() || 0;
  return (new Date).getTime() + a;
};
wd.sync.Repo.prototype.generateServerValues = function() {
  return wd.core.util.ServerValues.generateWithValues({timestamp:this.serverTime()});
};
wd.sync.Repo.prototype.onDataUpdate_ = function(a, b, c, d) {
  this.dataUpdateCount++;
  var e = new wd.core.util.Path(a);
  b = this.interceptServerDataCallback_ ? this.interceptServerDataCallback_(a, b) : b;
  a = [];
  d ? c ? (b = goog.object.map(b, function(a) {
    return wd.core.snap.NodeFromJSON(a);
  }), a = this.serverSyncTree_.applyTaggedQueryMerge(e, b, d)) : (b = wd.core.snap.NodeFromJSON(b), a = this.serverSyncTree_.applyTaggedQueryOverwrite(e, b, d)) : c ? (d = goog.object.map(b, function(a) {
    return wd.core.snap.NodeFromJSON(a);
  }), a = this.serverSyncTree_.applyServerMerge(e, d)) : (d = wd.core.snap.NodeFromJSON(b), a = this.serverSyncTree_.applyServerOverwrite(e, d));
  d = e;
  0 < a.length && (d = this.rerunTransactions_(e));
  this.eventQueue_.raiseEventsForChangedPath(d, a);
};
wd.sync.Repo.prototype.interceptServerData_ = function(a) {
  this.interceptServerDataCallback_ = a;
};
wd.sync.Repo.prototype.onConnectStatus_ = function(a) {
  this.updateInfo_("connected", a);
  !1 === a && this.runOnDisconnectEvents_();
};
wd.sync.Repo.prototype.onServerInfoUpdate_ = function(a) {
  var b = this;
  wd.core.util.each(a, function(a, d) {
    b.updateInfo_(d, a);
  });
};
wd.sync.Repo.prototype.onAuthStatus_ = function(a) {
  this.updateInfo_("authenticated", a);
};
wd.sync.Repo.prototype.updateInfo_ = function(a, b) {
  var c = new wd.core.util.Path("/.info/" + a), d = wd.core.snap.NodeFromJSON(b);
  this.infoData_.updateSnapshot(c, d);
  d = this.infoSyncTree_.applyServerOverwrite(c, d);
  this.eventQueue_.raiseEventsForChangedPath(c, d);
};
wd.sync.Repo.prototype.getNextWriteId_ = function() {
  return this.nextWriteId_++;
};
wd.sync.Repo.prototype.setWithPriority = function(a, b, c, d) {
  this.log_("set", {path:a.toString(), value:b, priority:c});
  var e = this.generateServerValues();
  b = wd.core.snap.NodeFromJSON(b, c);
  var e = wd.core.util.ServerValues.resolveDeferredValueSnapshot(b, e), f = this.getNextWriteId_(), e = this.serverSyncTree_.applyUserOverwrite(a, e, f, !0);
  this.eventQueue_.queueEvents(e);
  var g = this;
  this.server_.put(a.toString(), b.val(!0), function(b, c) {
    var e = "ok" === b;
    e || wd.core.util.warn("set at " + a + " failed: " + b);
    e = g.serverSyncTree_.ackUserWrite(f, !e);
    g.eventQueue_.raiseEventsForChangedPath(a, e);
    g.callOnCompleteCallback(d, b, c);
  });
  e = this.abortTransactions_(a);
  this.rerunTransactions_(e);
  this.eventQueue_.raiseEventsForChangedPath(e, []);
};
wd.sync.Repo.prototype.update = function(a, b, c) {
  this.log_("update", {path:a.toString(), value:b});
  var d = !0, e = this.generateServerValues(), f = {};
  goog.object.forEach(b, function(a, b) {
    d = !1;
    var c = wd.core.snap.NodeFromJSON(a);
    f[b] = wd.core.util.ServerValues.resolveDeferredValueSnapshot(c, e);
  });
  if (d) {
    wd.core.util.log("update() called with empty data.  Don't do anything."), this.callOnCompleteCallback(c, "ok");
  } else {
    var g = this.getNextWriteId_(), h = this.serverSyncTree_.applyUserMerge(a, f, g);
    this.eventQueue_.queueEvents(h);
    var k = this;
    this.server_.merge(a.toString(), b, function(b, d) {
      var e = "ok" === b;
      e || wd.core.util.warn("update at " + a + " failed: " + b);
      var e = k.serverSyncTree_.ackUserWrite(g, !e), f = a;
      0 < e.length && (f = k.rerunTransactions_(a));
      k.eventQueue_.raiseEventsForChangedPath(f, e);
      k.callOnCompleteCallback(c, b, d);
    });
    b = this.abortTransactions_(a);
    this.rerunTransactions_(b);
    this.eventQueue_.raiseEventsForChangedPath(a, []);
  }
};
wd.sync.Repo.prototype.runOnDisconnectEvents_ = function() {
  this.log_("onDisconnectEvents");
  var a = this, b = this.generateServerValues(), c = [];
  wd.core.util.ServerValues.resolveDeferredValueTree(this.onDisconnect_, b).forEachTree(wd.core.util.Path.Empty, function(b, e) {
    c = c.concat(a.serverSyncTree_.applyServerOverwrite(b, e));
    var f = a.abortTransactions_(b);
    a.rerunTransactions_(f);
  });
  this.onDisconnect_ = new wd.core.SparseSnapshotTree;
  this.eventQueue_.raiseEventsForChangedPath(wd.core.util.Path.Empty, c);
};
wd.sync.Repo.prototype.onDisconnectCancel = function(a, b) {
  var c = this;
  this.server_.onDisconnectCancel(a.toString(), function(d, e) {
    "ok" === d && c.onDisconnect_.forget(a);
    c.callOnCompleteCallback(b, d, e);
  });
};
wd.sync.Repo.prototype.onDisconnectSet = function(a, b, c) {
  var d = this, e = wd.core.snap.NodeFromJSON(b);
  this.server_.onDisconnectPut(a.toString(), e.val(!0), function(b, g) {
    "ok" === b && d.onDisconnect_.remember(a, e);
    d.callOnCompleteCallback(c, b, g);
  });
};
wd.sync.Repo.prototype.onDisconnectSetWithPriority = function(a, b, c, d) {
  var e = this, f = wd.core.snap.NodeFromJSON(b, c);
  this.server_.onDisconnectPut(a.toString(), f.val(!0), function(b, c) {
    "ok" === b && e.onDisconnect_.remember(a, f);
    e.callOnCompleteCallback(d, b, c);
  });
};
wd.sync.Repo.prototype.onDisconnectUpdate = function(a, b, c) {
  var d = !0, e;
  for (e in b) {
    d = !1;
  }
  if (d) {
    wd.core.util.log("onDisconnect().update() called with empty data.  Don't do anything."), this.callOnCompleteCallback(c, "ok");
  } else {
    var f = this;
    this.server_.onDisconnectMerge(a.toString(), b, function(d, e) {
      if ("ok" === d) {
        for (var k in b) {
          if (b.hasOwnProperty(k)) {
            var l = wd.core.snap.NodeFromJSON(b[k]);
            f.onDisconnect_.remember(a.child(k), l);
          }
        }
      }
      f.callOnCompleteCallback(c, d, e);
    });
  }
};
wd.sync.Repo.prototype.addEventCallbackForQuery = function(a, b) {
  var c;
  c = ".info" === a.path.getFront() ? this.infoSyncTree_.addEventRegistration(a, b) : this.serverSyncTree_.addEventRegistration(a, b);
  this.eventQueue_.raiseEventsAtPath(a.path, c);
};
wd.sync.Repo.prototype.removeEventCallbackForQuery = function(a, b) {
  var c;
  c = ".info" === a.path.getFront() ? this.infoSyncTree_.removeEventRegistration(a, b) : this.serverSyncTree_.removeEventRegistration(a, b);
  this.eventQueue_.raiseEventsAtPath(a.path, c);
};
wd.sync.Repo.prototype.interrupt = function() {
  this.persistentConnection_ && this.persistentConnection_.interrupt();
};
wd.sync.Repo.prototype.resume = function() {
  this.persistentConnection_ && this.persistentConnection_.resume();
};
wd.sync.Repo.prototype.stats = function(a) {
  if ("undefined" !== typeof console) {
    a ? (this.statsListener_ || (this.statsListener_ = new wd.core.stats.StatsListener(this.stats_)), a = this.statsListener_.get()) : a = this.stats_.get();
    var b = goog.array.reduce(goog.object.getKeys(a), function(a, b, c, d) {
      return Math.max(b.length, a);
    }, 0), c;
    for (c in a) {
      if (a.hasOwnProperty(c)) {
        for (var d = a[c], e = c.length;e < b + 2;e++) {
          c += " ";
        }
        console.log(c + d);
      }
    }
  }
};
wd.sync.Repo.prototype.statsIncrementCounter = function(a) {
  this.stats_.incrementCounter(a);
  this.statsReporter_.includeStat(a);
};
wd.sync.Repo.prototype.log_ = function(a) {
  var b = "";
  this.persistentConnection_ && (b = this.persistentConnection_.id + ":");
  wd.core.util.log(b, arguments);
};
wd.sync.Repo.prototype.callOnCompleteCallback = function(a, b, c) {
  a && wd.core.util.exceptionGuard(function() {
    if ("ok" == b) {
      a(null);
    } else {
      var d = (b || "error").toUpperCase(), e = d;
      c && (e += ": " + c);
      e = Error(e);
      e.code = d;
      a(e);
    }
  });
};
wd.sync.RepoTransaction = {};
wd.sync.TransactionStatus = {RUN:1, SENT:2, COMPLETED:3, SENT_NEEDS_ABORT:4, NEEDS_ABORT:5};
wd.sync.Repo.MAX_TRANSACTION_RETRIES_ = 25;
wd.sync.Transaction;
wd.sync.Repo.prototype.transactions_init_ = function() {
  this.transactionQueueTree_ = new wd.core.util.Tree;
};
wd.sync.Repo.prototype.startTransaction = function(a, b, c, d) {
  this.log_("transaction on " + a);
  var e = function() {
  }, f = new Wilddog(this.app_, this, a);
  f.on("value", e);
  b = {path:a, update:b, onComplete:c, status:null, order:wd.core.util.LUIDGenerator(), applyLocally:d, retryCount:0, unwatcher:function() {
    f.off("value", e);
  }, abortReason:null, currentWriteId:null, currentInputSnapshot:null, currentOutputSnapshotRaw:null, currentOutputSnapshotResolved:null};
  c = this.getLatestState_(a);
  b.currentInputSnapshot = c;
  c = b.update(c.val());
  if (goog.isDef(c)) {
    wd.core.util.validation.validateWilddogData("transaction failed: Data returned ", c, b.path);
    b.status = wd.sync.TransactionStatus.RUN;
    d = this.transactionQueueTree_.subTree(a);
    var g = d.getValue() || [];
    g.push(b);
    d.setValue(g);
    "object" === typeof c && null !== c && wd.util.obj.contains(c, ".priority") ? (g = wd.util.obj.get(c, ".priority"), wd.core.util.assert(wd.core.util.validation.isValidPriority(g), "Invalid priority returned by transaction. Priority must be a valid string, finite number, server value, or null.")) : g = (this.serverSyncTree_.calcCompleteEventCache(a) || wd.core.snap.EMPTY_NODE).getPriority().val();
    d = this.generateServerValues();
    c = wd.core.snap.NodeFromJSON(c, g);
    d = wd.core.util.ServerValues.resolveDeferredValueSnapshot(c, d);
    b.currentOutputSnapshotRaw = c;
    b.currentOutputSnapshotResolved = d;
    b.currentWriteId = this.getNextWriteId_();
    b = this.serverSyncTree_.applyUserOverwrite(a, d, b.currentWriteId, b.applyLocally);
    this.eventQueue_.raiseEventsForChangedPath(a, b);
    this.sendReadyTransactions_();
  } else {
    b.unwatcher(), b.currentOutputSnapshotRaw = null, b.currentOutputSnapshotResolved = null, b.onComplete && (a = new wd.api.DataSnapshot(b.currentInputSnapshot, new Wilddog(this.app_, this, b.path), wd.core.snap.PriorityIndex), b.onComplete(null, !1, a));
  }
};
wd.sync.Repo.prototype.getLatestState_ = function(a, b) {
  return this.serverSyncTree_.calcCompleteEventCache(a, b) || wd.core.snap.EMPTY_NODE;
};
wd.sync.Repo.prototype.sendReadyTransactions_ = function(a) {
  var b = a || this.transactionQueueTree_;
  a || this.pruneCompletedTransactionsBelowNode_(b);
  if (null !== b.getValue()) {
    a = this.buildTransactionQueue_(b), wd.core.util.assert(0 < a.length, "Sending zero length transaction queue"), goog.array.every(a, function(a) {
      return a.status === wd.sync.TransactionStatus.RUN;
    }) && this.sendTransactionQueue_(b.path(), a);
  } else {
    if (b.hasChildren()) {
      var c = this;
      b.forEachChild(function(a) {
        c.sendReadyTransactions_(a);
      });
    }
  }
};
wd.sync.Repo.prototype.sendTransactionQueue_ = function(a, b) {
  for (var c = goog.array.map(b, function(a) {
    return a.currentWriteId;
  }), d = this.getLatestState_(a, c), c = d, d = d.hash(), e = 0;e < b.length;e++) {
    var f = b[e];
    wd.core.util.assert(f.status === wd.sync.TransactionStatus.RUN, "tryToSendTransactionQueue_: items in queue should all be run.");
    f.status = wd.sync.TransactionStatus.SENT;
    f.retryCount++;
    var g = wd.core.util.Path.relativePath(a, f.path), c = c.updateChild(g, f.currentOutputSnapshotRaw);
  }
  var c = c.val(!0), h = this, k = this.app_;
  this.server_.put(a.toString(), c, function(c) {
    h.log_("transaction put response", {path:a.toString(), status:c});
    var d = [];
    if ("ok" === c) {
      c = [];
      for (e = 0;e < b.length;e++) {
        b[e].status = wd.sync.TransactionStatus.COMPLETED;
        d = d.concat(h.serverSyncTree_.ackUserWrite(b[e].currentWriteId));
        if (b[e].onComplete) {
          var f = b[e].currentOutputSnapshotResolved, g = new Wilddog(k, h, b[e].path), f = new wd.api.DataSnapshot(f, g, wd.core.snap.PriorityIndex);
          c.push(goog.bind(b[e].onComplete, null, null, !0, f));
        }
        b[e].unwatcher();
      }
      h.pruneCompletedTransactionsBelowNode_(h.transactionQueueTree_.subTree(a));
      h.sendReadyTransactions_();
      h.eventQueue_.raiseEventsForChangedPath(a, d);
      for (e = 0;e < c.length;e++) {
        wd.core.util.exceptionGuard(c[e]);
      }
    } else {
      if ("datastale" === c) {
        for (e = 0;e < b.length;e++) {
          b[e].status = b[e].status === wd.sync.TransactionStatus.SENT_NEEDS_ABORT ? wd.sync.TransactionStatus.NEEDS_ABORT : wd.sync.TransactionStatus.RUN;
        }
      } else {
        for (wd.core.util.warn("transaction at " + a.toString() + " failed: " + c), e = 0;e < b.length;e++) {
          b[e].status = wd.sync.TransactionStatus.NEEDS_ABORT, b[e].abortReason = c;
        }
      }
      h.rerunTransactions_(a);
    }
  }, d);
};
wd.sync.Repo.prototype.rerunTransactions_ = function(a) {
  var b = this.getAncestorTransactionNode_(a);
  a = b.path();
  b = this.buildTransactionQueue_(b);
  this.rerunTransactionQueue_(b, a);
  return a;
};
wd.sync.Repo.prototype.rerunTransactionQueue_ = function(a, b) {
  if (0 !== a.length) {
    for (var c = [], d = [], e = goog.array.map(a, function(a) {
      return a.currentWriteId;
    }), f = 0;f < a.length;f++) {
      var g = a[f], h = wd.core.util.Path.relativePath(b, g.path), k = !1, l;
      wd.core.util.assert(null !== h, "rerunTransactionsUnderNode_: relativePath should not be null.");
      if (g.status === wd.sync.TransactionStatus.NEEDS_ABORT) {
        k = !0, l = g.abortReason, d = d.concat(this.serverSyncTree_.ackUserWrite(g.currentWriteId, !0));
      } else {
        if (g.status === wd.sync.TransactionStatus.RUN) {
          if (g.retryCount >= wd.sync.Repo.MAX_TRANSACTION_RETRIES_) {
            k = !0, l = "maxretry", d = d.concat(this.serverSyncTree_.ackUserWrite(g.currentWriteId, !0));
          } else {
            var m = this.getLatestState_(g.path, e);
            g.currentInputSnapshot = m;
            var n = a[f].update(m.val());
            goog.isDef(n) ? (wd.core.util.validation.validateWilddogData("transaction failed: Data returned ", n, g.path), h = wd.core.snap.NodeFromJSON(n), "object" === typeof n && null != n && wd.util.obj.contains(n, ".priority") || (h = h.updatePriority(m.getPriority())), m = g.currentWriteId, n = this.generateServerValues(), n = wd.core.util.ServerValues.resolveDeferredValueSnapshot(h, n), g.currentOutputSnapshotRaw = h, g.currentOutputSnapshotResolved = n, g.currentWriteId = this.getNextWriteId_(), 
            goog.array.remove(e, m), d = d.concat(this.serverSyncTree_.applyUserOverwrite(g.path, n, g.currentWriteId, g.applyLocally)), d = d.concat(this.serverSyncTree_.ackUserWrite(m, !0))) : (k = !0, l = "nodata", d = d.concat(this.serverSyncTree_.ackUserWrite(g.currentWriteId, !0)));
          }
        }
      }
      this.eventQueue_.raiseEventsForChangedPath(b, d);
      d = [];
      k && (a[f].status = wd.sync.TransactionStatus.COMPLETED, setTimeout(a[f].unwatcher, Math.floor(0)), a[f].onComplete && ("nodata" === l ? (g = new Wilddog(this.app_, this, a[f].path), g = new wd.api.DataSnapshot(a[f].currentInputSnapshot, g, wd.core.snap.PriorityIndex), c.push(goog.bind(a[f].onComplete, null, null, !1, g))) : c.push(goog.bind(a[f].onComplete, null, Error(l), !1, null))));
    }
    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);
    for (f = 0;f < c.length;f++) {
      wd.core.util.exceptionGuard(c[f]);
    }
    this.sendReadyTransactions_();
  }
};
wd.sync.Repo.prototype.getAncestorTransactionNode_ = function(a) {
  for (var b, c = this.transactionQueueTree_;null !== (b = a.getFront()) && null === c.getValue();) {
    c = c.subTree(b), a = a.popFront();
  }
  return c;
};
wd.sync.Repo.prototype.buildTransactionQueue_ = function(a) {
  var b = [];
  this.aggregateTransactionQueuesForNode_(a, b);
  b.sort(function(a, b) {
    return a.order - b.order;
  });
  return b;
};
wd.sync.Repo.prototype.aggregateTransactionQueuesForNode_ = function(a, b) {
  var c = a.getValue();
  if (null !== c) {
    for (var d = 0;d < c.length;d++) {
      b.push(c[d]);
    }
  }
  var e = this;
  a.forEachChild(function(a) {
    e.aggregateTransactionQueuesForNode_(a, b);
  });
};
wd.sync.Repo.prototype.pruneCompletedTransactionsBelowNode_ = function(a) {
  var b = a.getValue();
  if (b) {
    for (var c = 0, d = 0;d < b.length;d++) {
      b[d].status !== wd.sync.TransactionStatus.COMPLETED && (b[c] = b[d], c++);
    }
    b.length = c;
    a.setValue(0 < b.length ? b : null);
  }
  var e = this;
  a.forEachChild(function(a) {
    e.pruneCompletedTransactionsBelowNode_(a);
  });
};
wd.sync.Repo.prototype.abortTransactions_ = function(a) {
  var b = this.getAncestorTransactionNode_(a).path();
  a = this.transactionQueueTree_.subTree(a);
  var c = this;
  a.forEachAncestor(function(a) {
    c.abortTransactionsOnNode_(a);
  });
  this.abortTransactionsOnNode_(a);
  a.forEachDescendant(function(a) {
    c.abortTransactionsOnNode_(a);
  });
  return b;
};
wd.sync.Repo.prototype.abortTransactionsOnNode_ = function(a) {
  var b = a.getValue();
  if (null !== b) {
    for (var c = [], d = [], e = -1, f = 0;f < b.length;f++) {
      b[f].status !== wd.sync.TransactionStatus.SENT_NEEDS_ABORT && (b[f].status === wd.sync.TransactionStatus.SENT ? (wd.core.util.assert(e === f - 1, "All SENT items should be at beginning of queue."), e = f, b[f].status = wd.sync.TransactionStatus.SENT_NEEDS_ABORT, b[f].abortReason = "set") : (wd.core.util.assert(b[f].status === wd.sync.TransactionStatus.RUN, "Unexpected transaction status in abort"), b[f].unwatcher(), d = d.concat(this.serverSyncTree_.ackUserWrite(b[f].currentWriteId, !0)), b[f].onComplete && 
      c.push(goog.bind(b[f].onComplete, null, Error("set"), !1, null))));
    }
    -1 === e ? a.setValue(null) : b.length = e + 1;
    this.eventQueue_.raiseEventsForChangedPath(a.path(), d);
    for (f = 0;f < c.length;f++) {
      wd.core.util.exceptionGuard(c[f]);
    }
  }
};
wd.sync.RepoManager = function() {
  this.repos_ = {};
  this.useRestClient_ = !1;
};
goog.addSingletonGetter(wd.sync.RepoManager);
wd.sync.RepoManager.prototype.interrupt = function(a) {
  for (var b in this.repos_[a.name]) {
    this.repos_[a.name].hasOwnProperty(b) && this.repos_[a.name][b].interrupt();
  }
};
goog.exportProperty(wd.sync.RepoManager.prototype, "interrupt", wd.sync.RepoManager.prototype.interrupt);
wd.sync.RepoManager.prototype.resume = function(a) {
  for (var b in this.repos_[a.name]) {
    this.repos_[a.name].hasOwnProperty(b) && this.repos_[a.name][b].resume();
  }
};
goog.exportProperty(wd.sync.RepoManager.prototype, "resume", wd.sync.RepoManager.prototype.resume);
wd.sync.RepoManager.prototype.getRepo = function(a, b) {
  var c = b.toString();
  this.repos_[a.name] || (this.repos_[a.name] = {});
  var d = wd.util.obj.get(this.repos_[a.name], c);
  d || (d = new wd.sync.Repo(a, b, this.useRestClient_), this.repos_[a.name][c] = d);
  return d;
};
wd.sync.RepoManager.prototype.forceRestClient = function() {
  this.useRestClient_ = !0;
};
wd.api.INTERNAL = {};
wd.api.INTERNAL.forceLongPolling = function() {
  wd.realtime.WebSocketConnection.forceDisallow();
  wd.realtime.BrowserPollConnection.forceAllow();
};
goog.exportProperty(wd.api.INTERNAL, "forceLongPolling", wd.api.INTERNAL.forceLongPolling);
wd.api.INTERNAL.forceWebSockets = function() {
  wd.realtime.BrowserPollConnection.forceDisallow();
};
goog.exportProperty(wd.api.INTERNAL, "forceWebSockets", wd.api.INTERNAL.forceWebSockets);
wd.api.INTERNAL.setSecurityDebugCallback = function(a, b) {
  a.repo.persistentConnection_.securityDebugCallback_ = b;
};
goog.exportProperty(wd.api.INTERNAL, "setSecurityDebugCallback", wd.api.INTERNAL.setSecurityDebugCallback);
wd.api.INTERNAL.stats = function(a, b) {
  a.repo.stats(b);
};
goog.exportProperty(wd.api.INTERNAL, "stats", wd.api.INTERNAL.stats);
wd.api.INTERNAL.statsIncrementCounter = function(a, b) {
  a.repo.statsIncrementCounter(b);
};
goog.exportProperty(wd.api.INTERNAL, "statsIncrementCounter", wd.api.INTERNAL.statsIncrementCounter);
wd.api.INTERNAL.dataUpdateCount = function(a) {
  return a.repo.dataUpdateCount;
};
goog.exportProperty(wd.api.INTERNAL, "dataUpdateCount", wd.api.INTERNAL.dataUpdateCount);
wd.api.INTERNAL.interceptServerData = function(a, b) {
  return a.repo.interceptServerData_(b);
};
goog.exportProperty(wd.api.INTERNAL, "interceptServerData", wd.api.INTERNAL.interceptServerData);
wd.api.INTERNAL.onLoginPopupOpen = function(a) {
  new wd.login.transports.PopupReceiver(a);
};
goog.exportProperty(wd.api.INTERNAL, "onPopupOpen", wd.api.INTERNAL.onLoginPopupOpen);
wd.api.INTERNAL.setAuthenticationServer = function(a) {
  wd.login.Constants.SERVER_HOST = a;
};
goog.exportProperty(wd.api.INTERNAL, "setAuthenticationServer", wd.api.INTERNAL.setAuthenticationServer);
wd.api.OnDisconnect = function(a, b) {
  this.repo_ = a;
  this.path_ = b;
};
wd.api.OnDisconnect.prototype.cancel = function(a) {
  wd.util.validation.validateArgCount("Wilddog.onDisconnect().cancel", 0, 1, arguments.length);
  wd.util.validation.validateCallback("Wilddog.onDisconnect().cancel", 1, a, !0);
  var b = new wd.util.promise.Deferred;
  this.repo_.onDisconnectCancel(this.path_, b.wrapCallback(a));
  return b.promise;
};
goog.exportProperty(wd.api.OnDisconnect.prototype, "cancel", wd.api.OnDisconnect.prototype.cancel);
goog.exportProperty(wd.api.OnDisconnect.prototype, "cancel", wd.api.OnDisconnect.prototype.cancel);
wd.api.OnDisconnect.prototype.remove = function(a) {
  wd.util.validation.validateArgCount("Wilddog.onDisconnect().remove", 0, 1, arguments.length);
  wd.core.util.validation.validateWritablePath("Wilddog.onDisconnect().remove", this.path_);
  wd.util.validation.validateCallback("Wilddog.onDisconnect().remove", 1, a, !0);
  var b = new wd.util.promise.Deferred;
  this.repo_.onDisconnectSet(this.path_, null, b.wrapCallback(a));
  return b.promise;
};
goog.exportProperty(wd.api.OnDisconnect.prototype, "remove", wd.api.OnDisconnect.prototype.remove);
goog.exportProperty(wd.api.OnDisconnect.prototype, "remove", wd.api.OnDisconnect.prototype.remove);
wd.api.OnDisconnect.prototype.set = function(a, b) {
  wd.util.validation.validateArgCount("Wilddog.onDisconnect().set", 1, 2, arguments.length);
  wd.core.util.validation.validateWritablePath("Wilddog.onDisconnect().set", this.path_);
  wd.core.util.validation.validateWilddogDataArg("Wilddog.onDisconnect().set", 1, a, this.path_, !1);
  wd.util.validation.validateCallback("Wilddog.onDisconnect().set", 2, b, !0);
  var c = new wd.util.promise.Deferred;
  this.repo_.onDisconnectSet(this.path_, a, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(wd.api.OnDisconnect.prototype, "set", wd.api.OnDisconnect.prototype.set);
goog.exportProperty(wd.api.OnDisconnect.prototype, "set", wd.api.OnDisconnect.prototype.set);
wd.api.OnDisconnect.prototype.setWithPriority = function(a, b, c) {
  wd.util.validation.validateArgCount("Wilddog.onDisconnect().setWithPriority", 2, 3, arguments.length);
  wd.core.util.validation.validateWritablePath("Wilddog.onDisconnect().setWithPriority", this.path_);
  wd.core.util.validation.validateWilddogDataArg("Wilddog.onDisconnect().setWithPriority", 1, a, this.path_, !1);
  wd.core.util.validation.validatePriority("Wilddog.onDisconnect().setWithPriority", 2, b, !1);
  wd.util.validation.validateCallback("Wilddog.onDisconnect().setWithPriority", 3, c, !0);
  var d = new wd.util.promise.Deferred;
  this.repo_.onDisconnectSetWithPriority(this.path_, a, b, d.wrapCallback(c));
  return d.promise;
};
goog.exportProperty(wd.api.OnDisconnect.prototype, "setWithPriority", wd.api.OnDisconnect.prototype.setWithPriority);
goog.exportProperty(wd.api.OnDisconnect.prototype, "setWithPriority", wd.api.OnDisconnect.prototype.setWithPriority);
wd.api.OnDisconnect.prototype.update = function(a, b) {
  wd.util.validation.validateArgCount("Wilddog.onDisconnect().update", 1, 2, arguments.length);
  wd.core.util.validation.validateWritablePath("Wilddog.onDisconnect().update", this.path_);
  if (goog.isArray(a)) {
    for (var c = {}, d = 0;d < a.length;++d) {
      c["" + d] = a[d];
    }
    a = c;
    wd.core.util.warn("Passing an Array to Wilddog.onDisconnect().update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.");
  }
  wd.core.util.validation.validateWilddogMergeDataArg("Wilddog.onDisconnect().update", 1, a, this.path_, !1);
  wd.util.validation.validateCallback("Wilddog.onDisconnect().update", 2, b, !0);
  c = new wd.util.promise.Deferred;
  this.repo_.onDisconnectUpdate(this.path_, a, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(wd.api.OnDisconnect.prototype, "update", wd.api.OnDisconnect.prototype.update);
goog.exportProperty(wd.api.OnDisconnect.prototype, "update", wd.api.OnDisconnect.prototype.update);
wd.api.TEST_ACCESS = {};
wd.api.TEST_ACCESS.DataConnection = wd.core.PersistentConnection;
goog.exportProperty(wd.api.TEST_ACCESS, "DataConnection", wd.api.TEST_ACCESS.DataConnection);
wd.core.PersistentConnection.prototype.simpleListen = function(a, b) {
  this.sendRequest("q", {p:a}, b);
};
goog.exportProperty(wd.api.TEST_ACCESS.DataConnection.prototype, "simpleListen", wd.api.TEST_ACCESS.DataConnection.prototype.simpleListen);
wd.core.PersistentConnection.prototype.echo = function(a, b) {
  this.sendRequest("echo", {d:a}, b);
};
goog.exportProperty(wd.api.TEST_ACCESS.DataConnection.prototype, "echo", wd.api.TEST_ACCESS.DataConnection.prototype.echo);
goog.exportProperty(wd.core.PersistentConnection.prototype, "interrupt", wd.core.PersistentConnection.prototype.interrupt);
wd.api.TEST_ACCESS.RealTimeConnection = wd.realtime.Connection;
goog.exportProperty(wd.api.TEST_ACCESS, "RealTimeConnection", wd.api.TEST_ACCESS.RealTimeConnection);
goog.exportProperty(wd.realtime.Connection.prototype, "sendRequest", wd.realtime.Connection.prototype.sendRequest);
goog.exportProperty(wd.realtime.Connection.prototype, "close", wd.realtime.Connection.prototype.close);
wd.api.TEST_ACCESS.hijackHash = function(a) {
  var b = wd.core.PersistentConnection.prototype.put;
  wd.core.PersistentConnection.prototype.put = function(c, d, e, f) {
    goog.isDef(f) && (f = a());
    b.call(this, c, d, e, f);
  };
  return function() {
    wd.core.PersistentConnection.prototype.put = b;
  };
};
goog.exportProperty(wd.api.TEST_ACCESS, "hijackHash", wd.api.TEST_ACCESS.hijackHash);
wd.api.TEST_ACCESS.ConnectionTarget = wd.core.RepoInfo;
goog.exportProperty(wd.api.TEST_ACCESS, "ConnectionTarget", wd.api.TEST_ACCESS.ConnectionTarget);
wd.api.TEST_ACCESS.queryIdentifier = function(a) {
  return a.queryIdentifier();
};
goog.exportProperty(wd.api.TEST_ACCESS, "queryIdentifier", wd.api.TEST_ACCESS.queryIdentifier);
wd.api.TEST_ACCESS.listens = function(a) {
  return a.repo.persistentConnection_.listens_;
};
goog.exportProperty(wd.api.TEST_ACCESS, "listens", wd.api.TEST_ACCESS.listens);
wd.api.TEST_ACCESS.forceRestClient = function(a) {
  a.forceRestClient();
};
goog.exportProperty(wd.api.TEST_ACCESS, "forceRestClient", wd.api.TEST_ACCESS.forceRestClient);
wd.wilddog().__regService("sync", function(a) {
  return new wd.sync.Sync(a);
});
var Wilddog = function(a, b, c) {
  this.app = a;
  if (!b && !c) {
    b = a.options.syncURL;
    if (!b) {
      throw Error("Could not find 'syncURL' in options.");
    }
    a = wd.core.util.parseURL(b);
    b = a.subdomain;
    "wilddog" === a.domain && wd.core.util.fatal(a.host + " is no longer supported. Please use <YOUR WILDDOG>.wilddogio.com instead");
    b || wd.core.util.fatal("Cannot parse Wilddog url. Please use https://<YOUR WILDDOG>.wilddogio.com");
    a.secure || wd.core.util.warnIfPageIsSecure();
    b = new wd.sync.RepoInfo(a.host, a.secure, b, "ws" === a.scheme || "wss" === a.scheme);
    a = new wd.core.util.Path(a.pathString);
    b = wd.sync.RepoManager.getInstance().getRepo(this.app, b);
    c = a;
  }
  wd.api.Query.call(this, b, c, wd.core.view.QueryParams.DEFAULT, !1);
};
goog.inherits(Wilddog, wd.api.Query);
Wilddog.prototype.name = function() {
  wd.core.util.warn("Wilddog.name() being deprecated. Please use Wilddog.key() instead.");
  wd.util.validation.validateArgCount("Wilddog.name", 0, 0, arguments.length);
  return this.key();
};
goog.exportProperty(Wilddog.prototype, "name", Wilddog.prototype.name);
Wilddog.prototype.key = function() {
  wd.util.validation.validateArgCount("Wilddog.key", 0, 0, arguments.length);
  return this.path.isEmpty() ? null : this.path.getBack();
};
goog.exportProperty(Wilddog.prototype, "key", Wilddog.prototype.key);
Wilddog.prototype.child = function(a) {
  wd.util.validation.validateArgCount("Wilddog.child", 1, 1, arguments.length);
  goog.isNumber(a) ? a = String(a) : a instanceof wd.core.util.Path || (null === this.path.getFront() ? wd.core.util.validation.validateRootPathString("Wilddog.child", 1, a, !1) : wd.core.util.validation.validatePathString("Wilddog.child", 1, a, !1));
  return new Wilddog(this.app, this.repo, this.path.child(a));
};
goog.exportProperty(Wilddog.prototype, "child", Wilddog.prototype.child);
Wilddog.prototype.parent = function() {
  wd.util.validation.validateArgCount("Wilddog.parent", 0, 0, arguments.length);
  var a = this.path.parent();
  return null === a ? null : new Wilddog(this.app, this.repo, a);
};
goog.exportProperty(Wilddog.prototype, "parent", Wilddog.prototype.parent);
Wilddog.prototype.root = function() {
  wd.util.validation.validateArgCount("Wilddog.ref", 0, 0, arguments.length);
  for (var a = this;null !== a.parent();) {
    a = a.parent();
  }
  return a;
};
goog.exportProperty(Wilddog.prototype, "root", Wilddog.prototype.root);
Wilddog.prototype.set = function(a, b) {
  wd.util.validation.validateArgCount("Wilddog.set", 1, 2, arguments.length);
  wd.core.util.validation.validateWritablePath("Wilddog.set", this.path);
  wd.core.util.validation.validateWilddogDataArg("Wilddog.set", 1, a, this.path, !1);
  wd.util.validation.validateCallback("Wilddog.set", 2, b, !0);
  var c = new wd.util.promise.Deferred;
  this.repo.setWithPriority(this.path, a, null, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(Wilddog.prototype, "set", Wilddog.prototype.set);
Wilddog.prototype.update = function(a, b) {
  wd.util.validation.validateArgCount("Wilddog.update", 1, 2, arguments.length);
  wd.core.util.validation.validateWritablePath("Wilddog.update", this.path);
  if (goog.isArray(a)) {
    for (var c = {}, d = 0;d < a.length;++d) {
      c["" + d] = a[d];
    }
    a = c;
    wd.core.util.warn("Passing an Array to Wilddog.update() is deprecated. Use set() if you want to overwrite the existing data, or an Object with integer keys if you really do want to only update some of the children.");
  }
  wd.core.util.validation.validateWilddogMergeDataArg("Wilddog.update", 1, a, this.path, !1);
  wd.util.validation.validateCallback("Wilddog.update", 2, b, !0);
  c = new wd.util.promise.Deferred;
  this.repo.update(this.path, a, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(Wilddog.prototype, "update", Wilddog.prototype.update);
Wilddog.prototype.setWithPriority = function(a, b, c) {
  wd.util.validation.validateArgCount("Wilddog.setWithPriority", 2, 3, arguments.length);
  wd.core.util.validation.validateWritablePath("Wilddog.setWithPriority", this.path);
  wd.core.util.validation.validateWilddogDataArg("Wilddog.setWithPriority", 1, a, this.path, !1);
  wd.core.util.validation.validatePriority("Wilddog.setWithPriority", 2, b, !1);
  wd.util.validation.validateCallback("Wilddog.setWithPriority", 3, c, !0);
  if (".length" === this.key() || ".keys" === this.key()) {
    throw "Wilddog.setWithPriority failed: " + this.key() + " is a read-only object.";
  }
  var d = new wd.util.promise.Deferred;
  this.repo.setWithPriority(this.path, a, b, d.wrapCallback(c));
  return d.promise;
};
goog.exportProperty(Wilddog.prototype, "setWithPriority", Wilddog.prototype.setWithPriority);
Wilddog.prototype.remove = function(a) {
  wd.util.validation.validateArgCount("Wilddog.remove", 0, 1, arguments.length);
  wd.core.util.validation.validateWritablePath("Wilddog.remove", this.path);
  wd.util.validation.validateCallback("Wilddog.remove", 1, a, !0);
  this.set(null, a);
};
goog.exportProperty(Wilddog.prototype, "remove", Wilddog.prototype.remove);
Wilddog.prototype.transaction = function(a, b, c) {
  wd.util.validation.validateArgCount("Wilddog.transaction", 1, 3, arguments.length);
  wd.core.util.validation.validateWritablePath("Wilddog.transaction", this.path);
  wd.util.validation.validateCallback("Wilddog.transaction", 1, a, !1);
  wd.util.validation.validateCallback("Wilddog.transaction", 2, b, !0);
  wd.core.util.validation.validateBoolean("Wilddog.transaction", 3, c, !0);
  if (".length" === this.key() || ".keys" === this.key()) {
    throw "Wilddog.transaction failed: " + this.key() + " is a read-only object.";
  }
  "undefined" === typeof c && (c = !0);
  var d = new wd.util.promise.Deferred;
  goog.isFunction(b) && wd.util.promise.attachDummyErrorHandler(d.promise);
  this.repo.startTransaction(this.path, a, function(a, c, g) {
    a ? d.reject(a) : d.resolve(new wd.api.TransactionResult(c, g));
    goog.isFunction(b) && b(a, c, g);
  }, c);
  return d.promise;
};
goog.exportProperty(Wilddog.prototype, "transaction", Wilddog.prototype.transaction);
Wilddog.prototype.setPriority = function(a, b) {
  wd.util.validation.validateArgCount("Wilddog.setPriority", 1, 2, arguments.length);
  wd.core.util.validation.validateWritablePath("Wilddog.setPriority", this.path);
  wd.core.util.validation.validatePriority("Wilddog.setPriority", 1, a, !1);
  wd.util.validation.validateCallback("Wilddog.setPriority", 2, b, !0);
  var c = new wd.util.promise.Deferred;
  this.repo.setWithPriority(this.path.child(".priority"), a, null, c.wrapCallback(b));
  return c.promise;
};
goog.exportProperty(Wilddog.prototype, "setPriority", Wilddog.prototype.setPriority);
Wilddog.prototype.push = function(a, b) {
  wd.util.validation.validateArgCount("Wilddog.push", 0, 2, arguments.length);
  wd.core.util.validation.validateWritablePath("Wilddog.push", this.path);
  wd.core.util.validation.validateWilddogDataArg("Wilddog.push", 1, a, this.path, !0);
  wd.util.validation.validateCallback("Wilddog.push", 2, b, !0);
  var c = this.repo.serverTime(), d = wd.core.util.nextPushId(c), c = this.child(d);
  if (goog.isDefAndNotNull(a)) {
    var e = this, f = c.set(a, b).then(function() {
      return e.child(d);
    });
    c.then = goog.bind(f.then, f);
    c["catch"] = goog.bind(f.then, f, void 0);
    goog.isFunction(b) && wd.util.promise.attachDummyErrorHandler(f);
  }
  return c;
};
goog.exportProperty(Wilddog.prototype, "push", Wilddog.prototype.push);
Wilddog.prototype.onDisconnect = function() {
  wd.core.util.validation.validateWritablePath("Wilddog.onDisconnect", this.path);
  return new wd.api.OnDisconnect(this.repo, this.path);
};
goog.exportProperty(Wilddog.prototype, "onDisconnect", Wilddog.prototype.onDisconnect);
Wilddog.goOffline = function() {
  wd.util.validation.validateArgCount("Wilddog.goOffline", 0, 0, arguments.length);
  wd.sync.RepoManager.getInstance().interrupt(this.app);
};
goog.exportSymbol("Wilddog.goOffline", Wilddog.goOffline);
Wilddog.goOnline = function() {
  wd.util.validation.validateArgCount("Wilddog.goOnline", 0, 0, arguments.length);
  wd.sync.RepoManager.getInstance().resume(this.app);
};
goog.exportSymbol("Wilddog.goOnline", Wilddog.goOnline);
Wilddog.enableLogging = function(a, b) {
  wd.core.util.assert(!b || !0 === a || !1 === a, "Can't turn on custom loggers persistently.");
  !0 === a ? ("undefined" !== typeof console && ("function" === typeof console.log ? wd.core.util.logger = goog.bind(console.log, console) : "object" === typeof console.log && (wd.core.util.logger = function(a) {
    console.log(a);
  })), b && wd.core.storage.SessionStorage.set("logging_enabled", !0)) : a ? wd.core.util.logger = a : (wd.core.util.logger = null, wd.core.storage.SessionStorage.remove("logging_enabled"));
};
Wilddog.ServerValue = {TIMESTAMP:{".sv":"timestamp"}};
Wilddog.SDK_VERSION = CLIENT_VERSION;
Wilddog.INTERNAL = wd.api.INTERNAL;
Wilddog.Context = wd.sync.RepoManager;
Wilddog.TEST_ACCESS = wd.api.TEST_ACCESS;
Wilddog.Promise = wd.util.promise.Promise;
Wilddog.prototype.goOffline = Wilddog.goOffline;
Wilddog.prototype.goOnline = Wilddog.goOnline;
Wilddog.prototype.enableLogging = Wilddog.enableLogging;
Wilddog.prototype.ServerValue = Wilddog.ServerValue;
Wilddog.prototype.SDK_VERSION = Wilddog.SDK_VERSION;
Wilddog.prototype.INTERNAL = Wilddog.INTERNAL;
Wilddog.prototype.TEST_ACCESS = Wilddog.TEST_ACCESS;
wd.sync.Sync = Wilddog;
var wilddog = {"package":{}};
wilddog["package"].all = {};
wilddog = wd.wilddog();
wd.auth.provider.initProvider_(wilddog);
1 != NODE_CLIENT ? ("object" == typeof module && module.exports && (module.exports = wilddog), "function" == typeof define && define.amd && define("wilddog", [], function() {
  return wilddog;
}), window ? window.wilddog = wilddog : WorkerGlobalScope && self && (self.wilddog = wilddog)) : module.exports = wilddog;

};ns.wrapper(ns.goog,ns.wd)})({goog:{},wd:{}})
